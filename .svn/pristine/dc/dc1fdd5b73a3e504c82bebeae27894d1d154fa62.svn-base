{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__tip\"\n}, \"audio files with a size less than 100Mb\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createBlock(_component_el_upload, {\n    ref: \"uploadRef\",\n    class: \"upload-demo\",\n    action: \"#\",\n    \"auto-upload\": false,\n    accept: \"audio/*\",\n    \"file-list\": $data.UploadList,\n    \"onUpdate:fileList\": _cache[0] || (_cache[0] = $event => $data.UploadList = $event),\n    limit: \"10\"\n  }, {\n    trigger: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"select file\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    tip: _withCtx(() => [_hoisted_1]),\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      class: \"ml-3\",\n      type: \"success\",\n      onClick: $options.submitUpload\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" upload to server \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"file-list\"]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_el_upload","ref","action","accept","$data","UploadList","$event","limit","trigger","_withCtx","_createVNode","_component_el_button","type","tip","_hoisted_1","onClick","$options","submitUpload"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\ContentsManage.vue"],"sourcesContent":["<template>\r\n  <el-upload\r\n    ref=\"uploadRef\"\r\n    class=\"upload-demo\"\r\n    action=\"#\"\r\n    :auto-upload=\"false\"\r\n    accept=\"audio/*\"\r\n    v-model:file-list=\"UploadList\"\r\n    limit=\"10\"\r\n  >\r\n    <template #trigger>\r\n      <el-button type=\"primary\">select file</el-button>\r\n    </template>\r\n\r\n    <el-button class=\"ml-3\" type=\"success\" @click=\"submitUpload\">\r\n      upload to server\r\n    </el-button>\r\n\r\n    <template #tip>\r\n      <div class=\"el-upload__tip\">audio files with a size less than 100Mb</div>\r\n    </template>\r\n  </el-upload>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      UploadList: [],\r\n    };\r\n  },\r\n  methods: {\r\n    submitUpload() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      const formData = new FormData();\r\n      this.UploadList.forEach((file) => {\r\n        formData.append(\"file\", file.raw);\r\n      });\r\n      this.axios\r\n        .post(\"api/Funapp/MediaUpload\", formData)\r\n        .then((res) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"success\",\r\n            message: `${res.data} + Upload success!`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"error\",\r\n            message: err.response.data,\r\n          });\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";gCAmBMA,mBAAA,CAAyE;EAApEC,KAAK,EAAC;AAAgB,GAAC,yCAAuC;;;;;uBAlBvEC,YAAA,CAoBYC,oBAAA;IAnBVC,GAAG,EAAC,WAAW;IACfH,KAAK,EAAC,aAAa;IACnBI,MAAM,EAAC,GAAG;IACT,aAAW,EAAE,KAAK;IACnBC,MAAM,EAAC,SAAS;IACR,WAAS,EAAEC,KAAA,CAAAC,UAAU;6DAAVD,KAAA,CAAAC,UAAU,GAAAC,MAAA;IAC7BC,KAAK,EAAC;;IAEKC,OAAO,EAAAC,QAAA,CAChB,MAAiD,CAAjDC,YAAA,CAAiDC,oBAAA;MAAtCC,IAAI,EAAC;IAAS;wBAAC,MAAW,C,iBAAX,aAAW,E;;;;IAO5BC,GAAG,EAAAJ,QAAA,CACZ,MAAyE,CAAzEK,UAAyE,C;sBAL3E,MAEY,CAFZJ,YAAA,CAEYC,oBAAA;MAFDb,KAAK,EAAC,MAAM;MAACc,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAEC,QAAA,CAAAC;;wBAAc,MAE7D,C,iBAF6D,oBAE7D,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}