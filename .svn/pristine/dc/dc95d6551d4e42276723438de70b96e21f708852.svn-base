{"ast":null,"code":"import defineReactivePlugin from './utils/private/define-reactive-plugin.js';\nimport { injectProp } from './utils/private/inject-obj-prop.js';\n// no extension on purpose for next one:\nimport materialIcons from '../icon-set/material-icons';\nconst Plugin = defineReactivePlugin({\n  iconMapFn: null,\n  __icons: {}\n}, {\n  set(setObject, ssrContext) {\n    const def = {\n      ...setObject,\n      rtl: setObject.rtl === true\n    };\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.iconSet.set(iconSet, ssrContext)');\n        return;\n      }\n      def.set = ssrContext.$q.iconSet.set;\n      Object.assign(ssrContext.$q.iconSet, def);\n    } else {\n      def.set = Plugin.set;\n      Object.assign(Plugin.__icons, def);\n    }\n  },\n  install({\n    $q,\n    iconSet,\n    ssrContext\n  }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialSet = iconSet || materialIcons;\n      $q.iconMapFn = ssrContext.$q.config.iconMapFn || this.iconMapFn || null;\n      $q.iconSet = {};\n      $q.iconSet.set = setObject => {\n        this.set(setObject, ssrContext);\n      };\n      $q.iconSet.set(initialSet);\n    } else {\n      if ($q.config.iconMapFn !== void 0) {\n        this.iconMapFn = $q.config.iconMapFn;\n      }\n      $q.iconSet = this.__icons;\n      injectProp($q, 'iconMapFn', () => this.iconMapFn, val => {\n        this.iconMapFn = val;\n      });\n      if (this.__installed === true) {\n        iconSet !== void 0 && this.set(iconSet);\n      } else {\n        this.set(iconSet || materialIcons);\n      }\n    }\n  }\n});\nexport default Plugin;","map":{"version":3,"names":["defineReactivePlugin","injectProp","materialIcons","Plugin","iconMapFn","__icons","set","setObject","ssrContext","def","rtl","__QUASAR_SSR_SERVER__","console","error","$q","iconSet","Object","assign","install","initialSet","config","val","__installed"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/icon-set.js"],"sourcesContent":["import defineReactivePlugin from './utils/private/define-reactive-plugin.js'\nimport { injectProp } from './utils/private/inject-obj-prop.js'\n// no extension on purpose for next one:\nimport materialIcons from '../icon-set/material-icons'\n\nconst Plugin = defineReactivePlugin({\n  iconMapFn: null,\n  __icons: {}\n}, {\n  set (setObject, ssrContext) {\n    const def = { ...setObject, rtl: setObject.rtl === true }\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.iconSet.set(iconSet, ssrContext)')\n        return\n      }\n\n      def.set = ssrContext.$q.iconSet.set\n      Object.assign(ssrContext.$q.iconSet, def)\n    }\n    else {\n      def.set = Plugin.set\n      Object.assign(Plugin.__icons, def)\n    }\n  },\n\n  install ({ $q, iconSet, ssrContext }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialSet = iconSet || materialIcons\n\n      $q.iconMapFn = ssrContext.$q.config.iconMapFn || this.iconMapFn || null\n      $q.iconSet = {}\n      $q.iconSet.set = setObject => {\n        this.set(setObject, ssrContext)\n      }\n\n      $q.iconSet.set(initialSet)\n    }\n    else {\n      if ($q.config.iconMapFn !== void 0) {\n        this.iconMapFn = $q.config.iconMapFn\n      }\n\n      $q.iconSet = this.__icons\n\n      injectProp($q, 'iconMapFn', () => this.iconMapFn, val => { this.iconMapFn = val })\n\n      if (this.__installed === true) {\n        iconSet !== void 0 && this.set(iconSet)\n      }\n      else {\n        this.set(iconSet || materialIcons)\n      }\n    }\n  }\n})\n\nexport default Plugin\n"],"mappings":"AAAA,OAAOA,oBAAoB,MAAM,2CAA2C;AAC5E,SAASC,UAAU,QAAQ,oCAAoC;AAC/D;AACA,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,MAAMC,MAAM,GAAGH,oBAAoB,CAAC;EAClCI,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE,CAAC;AACZ,CAAC,EAAE;EACDC,GAAGA,CAAEC,SAAS,EAAEC,UAAU,EAAE;IAC1B,MAAMC,GAAG,GAAG;MAAE,GAAGF,SAAS;MAAEG,GAAG,EAAEH,SAAS,CAACG,GAAG,KAAK;IAAK,CAAC;IAEzD,IAAIC,qBAAqB,EAAE;MACzB,IAAIH,UAAU,KAAK,KAAK,CAAC,EAAE;QACzBI,OAAO,CAACC,KAAK,CAAC,2EAA2E,CAAC;QAC1F;MACF;MAEAJ,GAAG,CAACH,GAAG,GAAGE,UAAU,CAACM,EAAE,CAACC,OAAO,CAACT,GAAG;MACnCU,MAAM,CAACC,MAAM,CAACT,UAAU,CAACM,EAAE,CAACC,OAAO,EAAEN,GAAG,CAAC;IAC3C,CAAC,MACI;MACHA,GAAG,CAACH,GAAG,GAAGH,MAAM,CAACG,GAAG;MACpBU,MAAM,CAACC,MAAM,CAACd,MAAM,CAACE,OAAO,EAAEI,GAAG,CAAC;IACpC;EACF,CAAC;EAEDS,OAAOA,CAAE;IAAEJ,EAAE;IAAEC,OAAO;IAAEP;EAAW,CAAC,EAAE;IACpC,IAAIG,qBAAqB,EAAE;MACzB,MAAMQ,UAAU,GAAGJ,OAAO,IAAIb,aAAa;MAE3CY,EAAE,CAACV,SAAS,GAAGI,UAAU,CAACM,EAAE,CAACM,MAAM,CAAChB,SAAS,IAAI,IAAI,CAACA,SAAS,IAAI,IAAI;MACvEU,EAAE,CAACC,OAAO,GAAG,CAAC,CAAC;MACfD,EAAE,CAACC,OAAO,CAACT,GAAG,GAAGC,SAAS,IAAI;QAC5B,IAAI,CAACD,GAAG,CAACC,SAAS,EAAEC,UAAU,CAAC;MACjC,CAAC;MAEDM,EAAE,CAACC,OAAO,CAACT,GAAG,CAACa,UAAU,CAAC;IAC5B,CAAC,MACI;MACH,IAAIL,EAAE,CAACM,MAAM,CAAChB,SAAS,KAAK,KAAK,CAAC,EAAE;QAClC,IAAI,CAACA,SAAS,GAAGU,EAAE,CAACM,MAAM,CAAChB,SAAS;MACtC;MAEAU,EAAE,CAACC,OAAO,GAAG,IAAI,CAACV,OAAO;MAEzBJ,UAAU,CAACa,EAAE,EAAE,WAAW,EAAE,MAAM,IAAI,CAACV,SAAS,EAAEiB,GAAG,IAAI;QAAE,IAAI,CAACjB,SAAS,GAAGiB,GAAG;MAAC,CAAC,CAAC;MAElF,IAAI,IAAI,CAACC,WAAW,KAAK,IAAI,EAAE;QAC7BP,OAAO,KAAK,KAAK,CAAC,IAAI,IAAI,CAACT,GAAG,CAACS,OAAO,CAAC;MACzC,CAAC,MACI;QACH,IAAI,CAACT,GAAG,CAACS,OAAO,IAAIb,aAAa,CAAC;MACpC;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}