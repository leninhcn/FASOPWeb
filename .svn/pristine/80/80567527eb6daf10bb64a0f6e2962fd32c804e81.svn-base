{"ast":null,"code":"import { h, ref, computed, watch, Transition, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport useAnchor, { useAnchorProps } from '../../composables/private/use-anchor.js';\nimport useScrollTarget from '../../composables/private/use-scroll-target.js';\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js';\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js';\nimport usePortal from '../../composables/private/use-portal.js';\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js';\nimport useTick from '../../composables/private/use-tick.js';\nimport useTimeout from '../../composables/private/use-timeout.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { closePortalMenus } from '../../utils/private/portal.js';\nimport { getScrollTarget } from '../../utils/scroll.js';\nimport { position, stopAndPrevent } from '../../utils/event.js';\nimport { hSlot } from '../../utils/private/render.js';\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js';\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js';\nimport { childHasFocus } from '../../utils/dom.js';\nimport { addClickOutside, removeClickOutside } from '../../utils/private/click-outside.js';\nimport { addFocusFn } from '../../utils/private/focus-manager.js';\nimport { validatePosition, validateOffset, setPosition, parsePosition } from '../../utils/private/position-engine.js';\nexport default createComponent({\n  name: 'QMenu',\n  inheritAttrs: false,\n  props: {\n    ...useAnchorProps,\n    ...useModelToggleProps,\n    ...useDarkProps,\n    ...useTransitionProps,\n    persistent: Boolean,\n    autoClose: Boolean,\n    separateClosePopup: Boolean,\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n    fit: Boolean,\n    cover: Boolean,\n    square: Boolean,\n    anchor: {\n      type: String,\n      validator: validatePosition\n    },\n    self: {\n      type: String,\n      validator: validatePosition\n    },\n    offset: {\n      type: Array,\n      validator: validateOffset\n    },\n    scrollTarget: {\n      default: void 0\n    },\n    touchPosition: Boolean,\n    maxHeight: {\n      type: String,\n      default: null\n    },\n    maxWidth: {\n      type: String,\n      default: null\n    }\n  },\n  emits: [...useModelToggleEmits, 'click', 'escapeKey'],\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    let refocusTarget = null,\n      absoluteOffset,\n      unwatchPosition,\n      avoidAutoClose;\n    const vm = getCurrentInstance();\n    const {\n      proxy\n    } = vm;\n    const {\n      $q\n    } = proxy;\n    const innerRef = ref(null);\n    const showing = ref(false);\n    const hideOnRouteChange = computed(() => props.persistent !== true && props.noRouteDismiss !== true);\n    const isDark = useDark(props, $q);\n    const {\n      registerTick,\n      removeTick\n    } = useTick();\n    const {\n      registerTimeout\n    } = useTimeout();\n    const {\n      transitionProps,\n      transitionStyle\n    } = useTransition(props);\n    const {\n      localScrollTarget,\n      changeScrollEvent,\n      unconfigureScrollTarget\n    } = useScrollTarget(props, configureScrollTarget);\n    const {\n      anchorEl,\n      canShow\n    } = useAnchor({\n      showing\n    });\n    const {\n      hide\n    } = useModelToggle({\n      showing,\n      canShow,\n      handleShow,\n      handleHide,\n      hideOnRouteChange,\n      processOnMount: true\n    });\n    const {\n      showPortal,\n      hidePortal,\n      renderPortal\n    } = usePortal(vm, innerRef, renderPortalContent, 'menu');\n    const clickOutsideProps = {\n      anchorEl,\n      innerRef,\n      onClickOutside(e) {\n        if (props.persistent !== true && showing.value === true) {\n          hide(e);\n          if (\n          // always prevent touch event\n          e.type === 'touchstart'\n          // prevent click if it's on a dialog backdrop\n          || e.target.classList.contains('q-dialog__backdrop')) {\n            stopAndPrevent(e);\n          }\n          return true;\n        }\n      }\n    };\n    const anchorOrigin = computed(() => parsePosition(props.anchor || (props.cover === true ? 'center middle' : 'bottom start'), $q.lang.rtl));\n    const selfOrigin = computed(() => props.cover === true ? anchorOrigin.value : parsePosition(props.self || 'top start', $q.lang.rtl));\n    const menuClass = computed(() => (props.square === true ? ' q-menu--square' : '') + (isDark.value === true ? ' q-menu--dark q-dark' : ''));\n    const onEvents = computed(() => props.autoClose === true ? {\n      onClick: onAutoClose\n    } : {});\n    const handlesFocus = computed(() => showing.value === true && props.persistent !== true);\n    watch(handlesFocus, val => {\n      if (val === true) {\n        addEscapeKey(onEscapeKey);\n        addClickOutside(clickOutsideProps);\n      } else {\n        removeEscapeKey(onEscapeKey);\n        removeClickOutside(clickOutsideProps);\n      }\n    });\n    function focus() {\n      addFocusFn(() => {\n        let node = innerRef.value;\n        if (node && node.contains(document.activeElement) !== true) {\n          node = node.querySelector('[autofocus][tabindex], [data-autofocus][tabindex]') || node.querySelector('[autofocus] [tabindex], [data-autofocus] [tabindex]') || node.querySelector('[autofocus], [data-autofocus]') || node;\n          node.focus({\n            preventScroll: true\n          });\n        }\n      });\n    }\n    function handleShow(evt) {\n      refocusTarget = props.noRefocus === false ? document.activeElement : null;\n      addFocusout(onFocusout);\n      showPortal();\n      configureScrollTarget();\n      absoluteOffset = void 0;\n      if (evt !== void 0 && (props.touchPosition || props.contextMenu)) {\n        const pos = position(evt);\n        if (pos.left !== void 0) {\n          const {\n            top,\n            left\n          } = anchorEl.value.getBoundingClientRect();\n          absoluteOffset = {\n            left: pos.left - left,\n            top: pos.top - top\n          };\n        }\n      }\n      if (unwatchPosition === void 0) {\n        unwatchPosition = watch(() => $q.screen.width + '|' + $q.screen.height + '|' + props.self + '|' + props.anchor + '|' + $q.lang.rtl, updatePosition);\n      }\n      if (props.noFocus !== true) {\n        document.activeElement.blur();\n      }\n\n      // should removeTick() if this gets removed\n      registerTick(() => {\n        updatePosition();\n        props.noFocus !== true && focus();\n      });\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        // required in order to avoid the \"double-tap needed\" issue\n        if ($q.platform.is.ios === true) {\n          // if auto-close, then this click should\n          // not close the menu\n          avoidAutoClose = props.autoClose;\n          innerRef.value.click();\n        }\n        updatePosition();\n        showPortal(true); // done showing portal\n        emit('show', evt);\n      }, props.transitionDuration);\n    }\n    function handleHide(evt) {\n      removeTick();\n      hidePortal();\n      anchorCleanup(true);\n      if (refocusTarget !== null && (\n      // menu was hidden from code or ESC plugin\n      evt === void 0\n      // menu was not closed from a mouse or touch clickOutside\n      || evt.qClickOutside !== true)) {\n        ((evt && evt.type.indexOf('key') === 0 ? refocusTarget.closest('[tabindex]:not([tabindex^=\"-\"])') : void 0) || refocusTarget).focus();\n        refocusTarget = null;\n      }\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        hidePortal(true); // done hiding, now destroy\n        emit('hide', evt);\n      }, props.transitionDuration);\n    }\n    function anchorCleanup(hiding) {\n      absoluteOffset = void 0;\n      if (unwatchPosition !== void 0) {\n        unwatchPosition();\n        unwatchPosition = void 0;\n      }\n      if (hiding === true || showing.value === true) {\n        removeFocusout(onFocusout);\n        unconfigureScrollTarget();\n        removeClickOutside(clickOutsideProps);\n        removeEscapeKey(onEscapeKey);\n      }\n      if (hiding !== true) {\n        refocusTarget = null;\n      }\n    }\n    function configureScrollTarget() {\n      if (anchorEl.value !== null || props.scrollTarget !== void 0) {\n        localScrollTarget.value = getScrollTarget(anchorEl.value, props.scrollTarget);\n        changeScrollEvent(localScrollTarget.value, updatePosition);\n      }\n    }\n    function onAutoClose(e) {\n      // if auto-close, then the ios double-tap fix which\n      // issues a click should not close the menu\n      if (avoidAutoClose !== true) {\n        closePortalMenus(proxy, e);\n        emit('click', e);\n      } else {\n        avoidAutoClose = false;\n      }\n    }\n    function onFocusout(evt) {\n      // the focus is not in a vue child component\n      if (handlesFocus.value === true && props.noFocus !== true && childHasFocus(innerRef.value, evt.target) !== true) {\n        focus();\n      }\n    }\n    function onEscapeKey(evt) {\n      emit('escapeKey');\n      hide(evt);\n    }\n    function updatePosition() {\n      const el = innerRef.value;\n      if (el === null || anchorEl.value === null) {\n        return;\n      }\n      setPosition({\n        el,\n        offset: props.offset,\n        anchorEl: anchorEl.value,\n        anchorOrigin: anchorOrigin.value,\n        selfOrigin: selfOrigin.value,\n        absoluteOffset,\n        fit: props.fit,\n        cover: props.cover,\n        maxHeight: props.maxHeight,\n        maxWidth: props.maxWidth\n      });\n    }\n    function renderPortalContent() {\n      return h(Transition, transitionProps.value, () => showing.value === true ? h('div', {\n        role: 'menu',\n        ...attrs,\n        ref: innerRef,\n        tabindex: -1,\n        class: ['q-menu q-position-engine scroll' + menuClass.value, attrs.class],\n        style: [attrs.style, transitionStyle.value],\n        ...onEvents.value\n      }, hSlot(slots.default)) : null);\n    }\n    onBeforeUnmount(anchorCleanup);\n\n    // expose public methods\n    Object.assign(proxy, {\n      focus,\n      updatePosition\n    });\n    return renderPortal;\n  }\n});","map":{"version":3,"names":["h","ref","computed","watch","Transition","onBeforeUnmount","getCurrentInstance","useAnchor","useAnchorProps","useScrollTarget","useModelToggle","useModelToggleProps","useModelToggleEmits","useDark","useDarkProps","usePortal","useTransition","useTransitionProps","useTick","useTimeout","createComponent","closePortalMenus","getScrollTarget","position","stopAndPrevent","hSlot","addEscapeKey","removeEscapeKey","addFocusout","removeFocusout","childHasFocus","addClickOutside","removeClickOutside","addFocusFn","validatePosition","validateOffset","setPosition","parsePosition","name","inheritAttrs","props","persistent","Boolean","autoClose","separateClosePopup","noRouteDismiss","noRefocus","noFocus","fit","cover","square","anchor","type","String","validator","self","offset","Array","scrollTarget","default","touchPosition","maxHeight","maxWidth","emits","setup","slots","emit","attrs","refocusTarget","absoluteOffset","unwatchPosition","avoidAutoClose","vm","proxy","$q","innerRef","showing","hideOnRouteChange","isDark","registerTick","removeTick","registerTimeout","transitionProps","transitionStyle","localScrollTarget","changeScrollEvent","unconfigureScrollTarget","configureScrollTarget","anchorEl","canShow","hide","handleShow","handleHide","processOnMount","showPortal","hidePortal","renderPortal","renderPortalContent","clickOutsideProps","onClickOutside","e","value","target","classList","contains","anchorOrigin","lang","rtl","selfOrigin","menuClass","onEvents","onClick","onAutoClose","handlesFocus","val","onEscapeKey","focus","node","document","activeElement","querySelector","preventScroll","evt","onFocusout","contextMenu","pos","left","top","getBoundingClientRect","screen","width","height","updatePosition","blur","platform","is","ios","click","transitionDuration","anchorCleanup","qClickOutside","indexOf","closest","hiding","el","role","tabindex","class","style","Object","assign"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/components/menu/QMenu.js"],"sourcesContent":["import { h, ref, computed, watch, Transition, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport useAnchor, { useAnchorProps } from '../../composables/private/use-anchor.js'\nimport useScrollTarget from '../../composables/private/use-scroll-target.js'\nimport useModelToggle, { useModelToggleProps, useModelToggleEmits } from '../../composables/private/use-model-toggle.js'\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport usePortal from '../../composables/private/use-portal.js'\nimport useTransition, { useTransitionProps } from '../../composables/private/use-transition.js'\nimport useTick from '../../composables/private/use-tick.js'\nimport useTimeout from '../../composables/private/use-timeout.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { closePortalMenus } from '../../utils/private/portal.js'\nimport { getScrollTarget } from '../../utils/scroll.js'\nimport { position, stopAndPrevent } from '../../utils/event.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { addEscapeKey, removeEscapeKey } from '../../utils/private/escape-key.js'\nimport { addFocusout, removeFocusout } from '../../utils/private/focusout.js'\nimport { childHasFocus } from '../../utils/dom.js'\nimport { addClickOutside, removeClickOutside } from '../../utils/private/click-outside.js'\nimport { addFocusFn } from '../../utils/private/focus-manager.js'\n\nimport {\n  validatePosition, validateOffset, setPosition, parsePosition\n} from '../../utils/private/position-engine.js'\n\nexport default createComponent({\n  name: 'QMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    ...useAnchorProps,\n    ...useModelToggleProps,\n    ...useDarkProps,\n    ...useTransitionProps,\n\n    persistent: Boolean,\n    autoClose: Boolean,\n    separateClosePopup: Boolean,\n\n    noRouteDismiss: Boolean,\n    noRefocus: Boolean,\n    noFocus: Boolean,\n\n    fit: Boolean,\n    cover: Boolean,\n\n    square: Boolean,\n\n    anchor: {\n      type: String,\n      validator: validatePosition\n    },\n    self: {\n      type: String,\n      validator: validatePosition\n    },\n    offset: {\n      type: Array,\n      validator: validateOffset\n    },\n\n    scrollTarget: {\n      default: void 0\n    },\n\n    touchPosition: Boolean,\n\n    maxHeight: {\n      type: String,\n      default: null\n    },\n    maxWidth: {\n      type: String,\n      default: null\n    }\n  },\n\n  emits: [\n    ...useModelToggleEmits,\n    'click', 'escapeKey'\n  ],\n\n  setup (props, { slots, emit, attrs }) {\n    let refocusTarget = null, absoluteOffset, unwatchPosition, avoidAutoClose\n\n    const vm = getCurrentInstance()\n    const { proxy } = vm\n    const { $q } = proxy\n\n    const innerRef = ref(null)\n    const showing = ref(false)\n\n    const hideOnRouteChange = computed(() =>\n      props.persistent !== true\n      && props.noRouteDismiss !== true\n    )\n\n    const isDark = useDark(props, $q)\n    const { registerTick, removeTick } = useTick()\n    const { registerTimeout } = useTimeout()\n    const { transitionProps, transitionStyle } = useTransition(props)\n    const { localScrollTarget, changeScrollEvent, unconfigureScrollTarget } = useScrollTarget(props, configureScrollTarget)\n\n    const { anchorEl, canShow } = useAnchor({ showing })\n\n    const { hide } = useModelToggle({\n      showing, canShow, handleShow, handleHide,\n      hideOnRouteChange,\n      processOnMount: true\n    })\n\n    const { showPortal, hidePortal, renderPortal } = usePortal(vm, innerRef, renderPortalContent, 'menu')\n\n    const clickOutsideProps = {\n      anchorEl,\n      innerRef,\n      onClickOutside (e) {\n        if (props.persistent !== true && showing.value === true) {\n          hide(e)\n\n          if (\n            // always prevent touch event\n            e.type === 'touchstart'\n            // prevent click if it's on a dialog backdrop\n            || e.target.classList.contains('q-dialog__backdrop')\n          ) {\n            stopAndPrevent(e)\n          }\n\n          return true\n        }\n      }\n    }\n\n    const anchorOrigin = computed(() =>\n      parsePosition(\n        props.anchor || (\n          props.cover === true ? 'center middle' : 'bottom start'\n        ),\n        $q.lang.rtl\n      )\n    )\n\n    const selfOrigin = computed(() => (\n      props.cover === true\n        ? anchorOrigin.value\n        : parsePosition(props.self || 'top start', $q.lang.rtl)\n    ))\n\n    const menuClass = computed(() =>\n      (props.square === true ? ' q-menu--square' : '')\n      + (isDark.value === true ? ' q-menu--dark q-dark' : '')\n    )\n\n    const onEvents = computed(() => (\n      props.autoClose === true\n        ? { onClick: onAutoClose }\n        : {}\n    ))\n\n    const handlesFocus = computed(() =>\n      showing.value === true && props.persistent !== true\n    )\n\n    watch(handlesFocus, val => {\n      if (val === true) {\n        addEscapeKey(onEscapeKey)\n        addClickOutside(clickOutsideProps)\n      }\n      else {\n        removeEscapeKey(onEscapeKey)\n        removeClickOutside(clickOutsideProps)\n      }\n    })\n\n    function focus () {\n      addFocusFn(() => {\n        let node = innerRef.value\n\n        if (node && node.contains(document.activeElement) !== true) {\n          node = node.querySelector('[autofocus][tabindex], [data-autofocus][tabindex]')\n            || node.querySelector('[autofocus] [tabindex], [data-autofocus] [tabindex]')\n            || node.querySelector('[autofocus], [data-autofocus]')\n            || node\n          node.focus({ preventScroll: true })\n        }\n      })\n    }\n\n    function handleShow (evt) {\n      refocusTarget = props.noRefocus === false\n        ? document.activeElement\n        : null\n\n      addFocusout(onFocusout)\n\n      showPortal()\n      configureScrollTarget()\n\n      absoluteOffset = void 0\n\n      if (evt !== void 0 && (props.touchPosition || props.contextMenu)) {\n        const pos = position(evt)\n\n        if (pos.left !== void 0) {\n          const { top, left } = anchorEl.value.getBoundingClientRect()\n          absoluteOffset = { left: pos.left - left, top: pos.top - top }\n        }\n      }\n\n      if (unwatchPosition === void 0) {\n        unwatchPosition = watch(\n          () => $q.screen.width + '|' + $q.screen.height + '|' + props.self + '|' + props.anchor + '|' + $q.lang.rtl,\n          updatePosition\n        )\n      }\n\n      if (props.noFocus !== true) {\n        document.activeElement.blur()\n      }\n\n      // should removeTick() if this gets removed\n      registerTick(() => {\n        updatePosition()\n        props.noFocus !== true && focus()\n      })\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        // required in order to avoid the \"double-tap needed\" issue\n        if ($q.platform.is.ios === true) {\n          // if auto-close, then this click should\n          // not close the menu\n          avoidAutoClose = props.autoClose\n          innerRef.value.click()\n        }\n\n        updatePosition()\n        showPortal(true) // done showing portal\n        emit('show', evt)\n      }, props.transitionDuration)\n    }\n\n    function handleHide (evt) {\n      removeTick()\n      hidePortal()\n\n      anchorCleanup(true)\n\n      if (\n        refocusTarget !== null\n        && (\n          // menu was hidden from code or ESC plugin\n          evt === void 0\n          // menu was not closed from a mouse or touch clickOutside\n          || evt.qClickOutside !== true\n        )\n      ) {\n        ((evt && evt.type.indexOf('key') === 0\n          ? refocusTarget.closest('[tabindex]:not([tabindex^=\"-\"])')\n          : void 0\n        ) || refocusTarget).focus()\n        refocusTarget = null\n      }\n\n      // should removeTimeout() if this gets removed\n      registerTimeout(() => {\n        hidePortal(true) // done hiding, now destroy\n        emit('hide', evt)\n      }, props.transitionDuration)\n    }\n\n    function anchorCleanup (hiding) {\n      absoluteOffset = void 0\n\n      if (unwatchPosition !== void 0) {\n        unwatchPosition()\n        unwatchPosition = void 0\n      }\n\n      if (hiding === true || showing.value === true) {\n        removeFocusout(onFocusout)\n        unconfigureScrollTarget()\n        removeClickOutside(clickOutsideProps)\n        removeEscapeKey(onEscapeKey)\n      }\n\n      if (hiding !== true) {\n        refocusTarget = null\n      }\n    }\n\n    function configureScrollTarget () {\n      if (anchorEl.value !== null || props.scrollTarget !== void 0) {\n        localScrollTarget.value = getScrollTarget(anchorEl.value, props.scrollTarget)\n        changeScrollEvent(localScrollTarget.value, updatePosition)\n      }\n    }\n\n    function onAutoClose (e) {\n      // if auto-close, then the ios double-tap fix which\n      // issues a click should not close the menu\n      if (avoidAutoClose !== true) {\n        closePortalMenus(proxy, e)\n        emit('click', e)\n      }\n      else {\n        avoidAutoClose = false\n      }\n    }\n\n    function onFocusout (evt) {\n      // the focus is not in a vue child component\n      if (\n        handlesFocus.value === true\n        && props.noFocus !== true\n        && childHasFocus(innerRef.value, evt.target) !== true\n      ) {\n        focus()\n      }\n    }\n\n    function onEscapeKey (evt) {\n      emit('escapeKey')\n      hide(evt)\n    }\n\n    function updatePosition () {\n      const el = innerRef.value\n\n      if (el === null || anchorEl.value === null) {\n        return\n      }\n\n      setPosition({\n        el,\n        offset: props.offset,\n        anchorEl: anchorEl.value,\n        anchorOrigin: anchorOrigin.value,\n        selfOrigin: selfOrigin.value,\n        absoluteOffset,\n        fit: props.fit,\n        cover: props.cover,\n        maxHeight: props.maxHeight,\n        maxWidth: props.maxWidth\n      })\n    }\n\n    function renderPortalContent () {\n      return h(\n        Transition,\n        transitionProps.value,\n        () => (\n          showing.value === true\n            ? h('div', {\n              role: 'menu',\n              ...attrs,\n              ref: innerRef,\n              tabindex: -1,\n              class: [\n                'q-menu q-position-engine scroll' + menuClass.value,\n                attrs.class\n              ],\n              style: [\n                attrs.style,\n                transitionStyle.value\n              ],\n              ...onEvents.value\n            }, hSlot(slots.default))\n            : null\n        )\n      )\n    }\n\n    onBeforeUnmount(anchorCleanup)\n\n    // expose public methods\n    Object.assign(proxy, { focus, updatePosition })\n\n    return renderPortal\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}