{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createCanvas, loadImage } from \"canvas\";\nimport { mapGetters } from \"vuex\";\nimport His from \"./HistoryBox.vue\";\nimport Group from \"./GroupInfo.vue\";\nexport default {\n  components: {\n    His,\n    Group\n  },\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  mounted() {\n    this.Avatar = sessionStorage.getItem(\"Avatar\");\n    this.GetChatGroupList();\n  },\n  methods: {\n    async GroupAvatar(group, idx) {\n      const lsrImg = [];\n      group.INFO.EMP_AVATAR.forEach((el, id) => {\n        if (id <= 3) {\n          if (group.INFO.EMP_AVATAR.length == 2) {\n            if (el.EMP_ID != this.GetUser.EMP_ID) {\n              lsrImg.push(el.AVATAR);\n              return;\n            }\n          } else lsrImg.push(el.AVATAR);\n        } else {\n          return;\n        }\n      });\n      const mergedImageUrl = await this.ImageMerging(lsrImg);\n      if (this.GroupAvatarList[idx]) {\n        this.GroupAvatarList[idx] = mergedImageUrl;\n      } else {\n        this.GroupAvatarList.push(mergedImageUrl);\n      }\n      this.GroupList[idx].INFO.EMP_AVATAR.AVATAR = undefined;\n    },\n    async ImageMerging(imgList) {\n      if (!imgList || imgList.length > 4) {\n        return \"#\";\n      }\n      if (imgList.length <= 2) {\n        return `data:image/png;base64,${imgList[0]}`;\n      }\n      const canvasWidth = 1000;\n      const canvasHeight = 1000;\n      let canvas = createCanvas(500, 500);\n      let ctx = canvas.getContext(\"2d\");\n      var lstSyncIMG = [];\n      return new Promise((resolve, reject) => {\n        const promises = [];\n        imgList.forEach(task => {\n          const promise = new Promise((innerResolve, innerReject) => {\n            try {\n              loadImage(`data:image/png;base64,${task}`).then(res => {\n                ctx.drawImage(res, 0, 0, 500, 500);\n                loadImage(canvas.toDataURL(\"image/png\")).then(img => {\n                  lstSyncIMG.push(img);\n                  innerResolve(img);\n                }).catch(er => innerReject(er));\n              }).catch(err => innerReject(err));\n            } catch (error) {\n              innerReject(error);\n            }\n          });\n          promises.push(promise);\n        });\n        Promise.all(promises).then(() => {\n          canvas = createCanvas(canvasWidth, canvasHeight);\n          ctx = canvas.getContext(\"2d\");\n          lstSyncIMG.forEach((el, idx) => {\n            switch (idx) {\n              case 0:\n                ctx.drawImage(el, 0, 0, 500, 500);\n                break;\n              case 1:\n                ctx.drawImage(el, 500, 0, 500, 500);\n                break;\n              case 2:\n                ctx.drawImage(el, 0, 500, 500, 500);\n                break;\n              case 3:\n                ctx.drawImage(el, 500, 500, 500, 500);\n                break;\n              default:\n                break;\n            }\n          });\n          resolve(canvas.toDataURL(\"image/png\"));\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    QItemClick(id) {\n      this.activeID = id;\n    },\n    GetChatGroupList() {\n      this.axios.get(`api/chatapp/GetEmpAllGroup?emp_id=${this.GetUser.EMP_ID}`).then(res => {\n        this.GroupList = res.data;\n        this.GroupList.forEach((element, idx) => {\n          this.GroupAvatar(element, idx);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    }\n  },\n  data() {\n    return {\n      addUser: false,\n      tab: \"chats\",\n      splitterModel: 20,\n      Avatar: \"\",\n      drawer: false,\n      activeID: 0,\n      GroupName: \"Test-Group\",\n      GroupList: [{\n        GROUP_ID: 0,\n        GROUP_NAME: \"Default\"\n      }],\n      GroupAvatarList: []\n    };\n  }\n};","map":{"version":3,"names":["createCanvas","loadImage","mapGetters","His","Group","components","computed","GetUser","mounted","Avatar","sessionStorage","getItem","GetChatGroupList","methods","GroupAvatar","group","idx","lsrImg","INFO","EMP_AVATAR","forEach","el","id","length","EMP_ID","push","AVATAR","mergedImageUrl","ImageMerging","GroupAvatarList","GroupList","undefined","imgList","canvasWidth","canvasHeight","canvas","ctx","getContext","lstSyncIMG","Promise","resolve","reject","promises","task","promise","innerResolve","innerReject","then","res","drawImage","toDataURL","img","catch","er","err","error","all","QItemClick","activeID","axios","get","data","element","console","log","imageFromByte","strBase64","addUser","tab","splitterModel","drawer","GroupName","GROUP_ID","GROUP_NAME"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MainAppForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-layout\r\n      view=\"lHh Lpr lff\"\r\n      container\r\n      style=\"height: 500px\"\r\n      class=\"shadow-2 rounded-borders\"\r\n    >\r\n      <q-header elevated class=\"bg-cyan-8\">\r\n        <q-toolbar>\r\n          <q-toolbar-title>{{ GroupName }}</q-toolbar-title>\r\n          <q-btn\r\n            flat\r\n            icon=\"person_add\"\r\n            round\r\n            dense\r\n            @click=\"addUser = true\"\r\n          ></q-btn>\r\n          <q-btn flat @click=\"drawer = !drawer\" round dense icon=\"menu\" />\r\n          <q-btn\r\n            flat\r\n            icon=\"cancel\"\r\n            round\r\n            dense\r\n            @click=\"$emit('CloseChatBox')\"\r\n          />\r\n        </q-toolbar>\r\n      </q-header>\r\n\r\n      <q-drawer v-model=\"drawer\" show-if-above :width=\"300\" :breakpoint=\"400\">\r\n        <q-scroll-area\r\n          style=\"\r\n            height: calc(100% - 150px);\r\n            margin-top: 150px;\r\n            border-right: 1px solid #ddd;\r\n          \"\r\n        >\r\n          <div>\r\n            <q-splitter v-model=\"splitterModel\" style=\"height: 100%\">\r\n              <template v-slot:before>\r\n                <q-tabs v-model=\"tab\" vertical class=\"text-teal\">\r\n                  <q-tab name=\"chats\" icon=\"chat\">\r\n                    <q-badge color=\"red\" floating>6</q-badge>\r\n                  </q-tab>\r\n                  <q-tab name=\"friends\" icon=\"group\" />\r\n                  <q-tab name=\"others\" icon=\"favorite\" />\r\n                </q-tabs>\r\n              </template>\r\n\r\n              <template v-slot:after>\r\n                <q-tab-panels\r\n                  v-model=\"tab\"\r\n                  indicator-color=\"transparent\"\r\n                  animated\r\n                  swipeable\r\n                  vertical\r\n                  transition-prev=\"jump-up\"\r\n                  transition-next=\"jump-up\"\r\n                >\r\n                  <q-tab-panel name=\"chats\">\r\n                    <q-list\r\n                      style=\"margin-left: -15px\"\r\n                      v-for=\"(grp, idx) in GroupList\"\r\n                      :key=\"idx\"\r\n                    >\r\n                      <q-item\r\n                        style=\"margin-left: -15px; margin-right: -15px\"\r\n                        :active=\"grp.GROUP_ID == activeID\"\r\n                        clickable\r\n                        v-ripple\r\n                        active-class=\"GroupActiveClass\"\r\n                        @click=\"QItemClick(grp.GROUP_ID)\"\r\n                      >\r\n                        <q-item-section avatar>\r\n                          <q-avatar>\r\n                            <img :src=\"GroupAvatarList[idx]\" />\r\n                          </q-avatar>\r\n                        </q-item-section>\r\n                        <q-item-section style=\"margin: -15px\">\r\n                          <Group :GroupName=\"grp.GROUP_NAME\"> </Group>\r\n                        </q-item-section>\r\n                      </q-item>\r\n                      <q-separator\r\n                        v-show=\"!(grp.GROUP_ID == activeID)\"\r\n                        color=\"grey-4\"\r\n                      />\r\n                    </q-list>\r\n                  </q-tab-panel>\r\n\r\n                  <q-tab-panel name=\"friends\">\r\n                    <div class=\"text-h4 q-mb-md\">Alarms</div>\r\n                    <p>N/A</p>\r\n                  </q-tab-panel>\r\n\r\n                  <q-tab-panel name=\"others\">\r\n                    <div class=\"text-h4 q-mb-md\">Movies</div>\r\n                    <p>\r\n                      Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                      Quis praesentium cumque magnam odio iure quidem, quod\r\n                      illum numquam possimus obcaecati commodi minima assumenda\r\n                      consectetur culpa fuga nulla ullam. In, libero. Lorem\r\n                      ipsum dolor sit, amet consectetur adipisicing elit. Quis\r\n                      praesentium cumque magnam odio iure quidem, quod illum\r\n                      numquam possimus obcaecati commodi minima assumenda\r\n                      consectetur culpa fuga nulla ullam. In, libero.\r\n                    </p>\r\n                  </q-tab-panel>\r\n                </q-tab-panels>\r\n              </template>\r\n            </q-splitter>\r\n          </div>\r\n        </q-scroll-area>\r\n\r\n        <q-img\r\n          class=\"absolute-top\"\r\n          src=\"../../assets/userBGR.png\"\r\n          style=\"height: 150px\"\r\n        >\r\n          <div class=\"absolute-bottom bg-transparent\">\r\n            <q-avatar size=\"56px\" class=\"q-mb-sm\">\r\n              <img :src=\"imageFromByte(Avatar)\" />\r\n            </q-avatar>\r\n            <div class=\"text-weight-bold\">Ninh Le</div>\r\n            <div>VANNINH.LE@LUXSHARE-ICT.COM</div>\r\n          </div>\r\n        </q-img>\r\n      </q-drawer>\r\n\r\n      <q-page-container class=\"custom-page-container\">\r\n        <q-page>\r\n          <His></His>\r\n          <q-dialog v-model=\"addUser\" persistent :boundary=\"'#parent'\">\r\n            <q-card>\r\n              <q-card-section class=\"row items-center q-pb-none\">\r\n                <div class=\"text-h6\">Close icon</div>\r\n                <q-space />\r\n                <q-btn icon=\"close\" flat round dense v-close-popup />\r\n              </q-card-section>\r\n\r\n              <q-card-section>\r\n                Lorem ipsum dolor sit amet consectetur\r\n              </q-card-section>\r\n            </q-card>\r\n          </q-dialog>\r\n        </q-page>\r\n      </q-page-container>\r\n    </q-layout>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { createCanvas, loadImage } from \"canvas\";\r\nimport { mapGetters } from \"vuex\";\r\nimport His from \"./HistoryBox.vue\";\r\nimport Group from \"./GroupInfo.vue\";\r\nexport default {\r\n  components: {\r\n    His,\r\n    Group,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      GetUser: \"getUser\",\r\n    }),\r\n  },\r\n  mounted() {\r\n    this.Avatar = sessionStorage.getItem(\"Avatar\");\r\n    this.GetChatGroupList();\r\n  },\r\n  methods: {\r\n    async GroupAvatar(group, idx) {\r\n      const lsrImg = [];\r\n      group.INFO.EMP_AVATAR.forEach((el, id) => {\r\n        if (id <= 3) {\r\n          if (group.INFO.EMP_AVATAR.length == 2) {\r\n            if (el.EMP_ID != this.GetUser.EMP_ID) {\r\n              lsrImg.push(el.AVATAR);\r\n              return;\r\n            }\r\n          } else lsrImg.push(el.AVATAR);\r\n        } else {\r\n          return;\r\n        }\r\n      });\r\n      const mergedImageUrl = await this.ImageMerging(lsrImg);\r\n      if (this.GroupAvatarList[idx]) {\r\n        this.GroupAvatarList[idx] = mergedImageUrl;\r\n      } else {\r\n        this.GroupAvatarList.push(mergedImageUrl);\r\n      }\r\n      this.GroupList[idx].INFO.EMP_AVATAR.AVATAR = undefined;\r\n    },\r\n    async ImageMerging(imgList) {\r\n      if (!imgList || imgList.length > 4) {\r\n        return \"#\";\r\n      }\r\n      if (imgList.length <= 2) {\r\n        return `data:image/png;base64,${imgList[0]}`;\r\n      }\r\n      const canvasWidth = 1000;\r\n      const canvasHeight = 1000;\r\n      let canvas = createCanvas(500, 500);\r\n      let ctx = canvas.getContext(\"2d\");\r\n      var lstSyncIMG = [];\r\n\r\n      return new Promise((resolve, reject) => {\r\n        const promises = [];\r\n\r\n        imgList.forEach((task) => {\r\n          const promise = new Promise((innerResolve, innerReject) => {\r\n            try {\r\n              loadImage(`data:image/png;base64,${task}`)\r\n                .then((res) => {\r\n                  ctx.drawImage(res, 0, 0, 500, 500);\r\n                  loadImage(canvas.toDataURL(\"image/png\"))\r\n                    .then((img) => {\r\n                      lstSyncIMG.push(img);\r\n                      innerResolve(img);\r\n                    })\r\n                    .catch((er) => innerReject(er));\r\n                })\r\n                .catch((err) => innerReject(err));\r\n            } catch (error) {\r\n              innerReject(error);\r\n            }\r\n          });\r\n\r\n          promises.push(promise);\r\n        });\r\n\r\n        Promise.all(promises)\r\n          .then(() => {\r\n            canvas = createCanvas(canvasWidth, canvasHeight);\r\n            ctx = canvas.getContext(\"2d\");\r\n\r\n            lstSyncIMG.forEach((el, idx) => {\r\n              switch (idx) {\r\n                case 0:\r\n                  ctx.drawImage(el, 0, 0, 500, 500);\r\n                  break;\r\n                case 1:\r\n                  ctx.drawImage(el, 500, 0, 500, 500);\r\n                  break;\r\n                case 2:\r\n                  ctx.drawImage(el, 0, 500, 500, 500);\r\n                  break;\r\n                case 3:\r\n                  ctx.drawImage(el, 500, 500, 500, 500);\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            });\r\n\r\n            resolve(canvas.toDataURL(\"image/png\"));\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    QItemClick(id) {\r\n      this.activeID = id;\r\n    },\r\n    GetChatGroupList() {\r\n      this.axios\r\n        .get(`api/chatapp/GetEmpAllGroup?emp_id=${this.GetUser.EMP_ID}`)\r\n        .then((res) => {\r\n          this.GroupList = res.data;\r\n          this.GroupList.forEach((element, idx) => {\r\n            this.GroupAvatar(element, idx);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    imageFromByte(strBase64) {\r\n      return `data:image/jpeg;base64,${strBase64}`;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      addUser: false,\r\n      tab: \"chats\",\r\n      splitterModel: 20,\r\n      Avatar: \"\",\r\n      drawer: false,\r\n      activeID: 0,\r\n      GroupName: \"Test-Group\",\r\n      GroupList: [{ GROUP_ID: 0, GROUP_NAME: \"Default\" }],\r\n      GroupAvatarList: [],\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.custom-page-container {\r\n  background-color: #1f144b;\r\n}\r\n.GroupActiveClass {\r\n  background-color: aquamarine;\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}