{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-56810952\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"classBo\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"avatar shadow-8\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"Sender\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"msgImg\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"Stamp\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"OwnerContainer\"\n};\nconst _hoisted_11 = {\n  class: \"avatar shadow-8\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"Sender\"\n};\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"msgImg\"\n};\nconst _hoisted_16 = [\"src\"];\nconst _hoisted_17 = {\n  class: \"Stamp\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$props.Owner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $props.avatar,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($props.sender), 1 /* TEXT */), $props.msgType === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, (msg, id) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: id\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"msgText shadow-8\", {\n        lastMSG: id == $props.messages.length - 1\n      }])\n    }, _toDisplayString(msg.text), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $props.msgType === 'img' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: $props.avatar,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_8)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($props.stamp), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $props.Owner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n    src: $props.avatar,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_12)]), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($props.sender), 1 /* TEXT */), $props.msgType === 'text' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, (msg, id) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: id\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"msgText shadow-8\", {\n        lastMSG: id == $props.messages.length - 1\n      }])\n    }, _toDisplayString(msg.text), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $props.msgType === 'img' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n    src: $props.avatar,\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_16)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_17, _toDisplayString($props.stamp), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","Owner","_hoisted_2","_createElementVNode","_hoisted_3","src","avatar","alt","_hoisted_5","_toDisplayString","sender","msgType","_hoisted_6","_Fragment","_renderList","messages","msg","id","key","_normalizeClass","length","text","_hoisted_7","_hoisted_9","stamp","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_17"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MyMessage.vue"],"sourcesContent":["<template>\r\n  <div class=\"classBo\">\r\n    <div v-if=\"!Owner\" class=\"container\">\r\n      <div class=\"avatar shadow-8\">\r\n        <img :src=\"avatar\" alt=\"\" />\r\n      </div>\r\n      <span class=\"Sender\">{{ sender }}</span>\r\n      <div v-if=\"msgType === 'text'\">\r\n        <div v-for=\"(msg, id) in messages\" :key=\"id\">\r\n          <div\r\n            class=\"msgText shadow-8\"\r\n            :class=\"{\r\n              lastMSG: id == messages.length - 1,\r\n            }\"\r\n          >\r\n            {{ msg.text }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"msgImg\" v-if=\"msgType === 'img'\">\r\n        <img :src=\"avatar\" alt=\"\" />\r\n      </div>\r\n      <span class=\"Stamp\">{{ stamp }}</span>\r\n    </div>\r\n\r\n    <div v-if=\"Owner\" class=\"OwnerContainer\">\r\n      <div class=\"avatar shadow-8\">\r\n        <img :src=\"avatar\" alt=\"\" />\r\n      </div>\r\n      <span class=\"Sender\">{{ sender }}</span>\r\n      <div v-if=\"msgType === 'text'\">\r\n        <div v-for=\"(msg, id) in messages\" :key=\"id\">\r\n          <div\r\n            class=\"msgText shadow-8\"\r\n            :class=\"{\r\n              lastMSG: id == messages.length - 1,\r\n            }\"\r\n          >\r\n            {{ msg.text }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"msgImg\" v-if=\"msgType === 'img'\">\r\n        <img :src=\"avatar\" alt=\"\" />\r\n      </div>\r\n      <span class=\"Stamp\">{{ stamp }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => [\r\n        { text: \"m1\" },\r\n        { text: \"m2\" },\r\n        {\r\n          text: \"m3aaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n        },\r\n      ],\r\n    },\r\n    sender: {\r\n      type: String,\r\n      required: false,\r\n      default: \"CHAN QUA NHI\",\r\n    },\r\n    msgType: {\r\n      type: String,\r\n      required: false,\r\n      default: \"text\",\r\n    },\r\n    Owner: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    stamp: {\r\n      type: String,\r\n      required: false,\r\n      default: \"5 minutes ago\",\r\n    },\r\n    avatar: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      noIMG: `${this.axios.defaults.baseURL}Images/noIMG.png`,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.classBo {\r\n  margin: {\r\n    top: 30px;\r\n  }\r\n}\r\n.container {\r\n  position: relative;\r\n  text-align: left;\r\n  .msgImg {\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: {\r\n      left: 40px;\r\n    }\r\n    img {\r\n      width: inherit;\r\n      height: inherit;\r\n    }\r\n  }\r\n\r\n  .avatar {\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    bottom: 0;\r\n    img {\r\n      width: inherit;\r\n      height: inherit;\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n  .Sender {\r\n    color: #809c00;\r\n    margin: {\r\n      left: 45px;\r\n    }\r\n  }\r\n  $msg-bg-color: #b0bec5;\r\n  .msgText {\r\n    background-color: $msg-bg-color;\r\n    color: white;\r\n    width: fit-content;\r\n    position: relative;\r\n    border-radius: 3px 3px 3px 0;\r\n    word-wrap: break-word;\r\n    max-width: 550px;\r\n    min-width: 20px;\r\n    text-align: left;\r\n    padding: {\r\n      left: 5px;\r\n      right: 5px;\r\n      top: 5px;\r\n      bottom: 5px;\r\n    }\r\n    margin: {\r\n      left: 45px;\r\n      bottom: 5px;\r\n      right: 0;\r\n    }\r\n  }\r\n\r\n  .lastMSG {\r\n    padding: {\r\n      top: 15px;\r\n      bottom: 15px;\r\n    }\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: -10px;\r\n      width: 0;\r\n      height: 0;\r\n      border-bottom: 8px solid $msg-bg-color;\r\n      border-left: 15px solid transparent;\r\n    }\r\n  }\r\n  .Stamp {\r\n    float: left;\r\n    margin-left: 45px;\r\n    font-size: x-small;\r\n  }\r\n}\r\n.OwnerContainer {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  .msgImg {\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: {\r\n      right: 45px;\r\n    }\r\n    img {\r\n      width: inherit;\r\n      height: inherit;\r\n    }\r\n  }\r\n\r\n  .avatar {\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    bottom: 0;\r\n    right: 0;\r\n    img {\r\n      width: inherit;\r\n      height: inherit;\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n  .Sender {\r\n    position: absolute;\r\n    color: #ebff38;\r\n    top: -20px;\r\n    right: 48px;\r\n  }\r\n  $msg-bg-color: rgb(17, 0, 255);\r\n  .msgText {\r\n    background-color: $msg-bg-color;\r\n    color: white;\r\n    width: fit-content;\r\n    position: relative;\r\n    border-radius: 3px 3px 0 3px;\r\n    max-width: 550px;\r\n    min-width: 20px;\r\n    word-wrap: break-word;\r\n    text-align: left;\r\n    padding: {\r\n      left: 5px;\r\n      right: 5px;\r\n      top: 5px;\r\n      bottom: 5px;\r\n    }\r\n    margin: {\r\n      left: auto;\r\n      right: 45px;\r\n      top: 3px;\r\n    }\r\n  }\r\n  .lastMSG {\r\n    padding: {\r\n      top: 15px;\r\n      bottom: 15px;\r\n    }\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: 0;\r\n      right: -10px;\r\n      width: 0;\r\n      height: 0;\r\n      border-bottom: 8px solid $msg-bg-color;\r\n      border-right: 15px solid transparent;\r\n    }\r\n  }\r\n  .Stamp {\r\n    position: absolute;\r\n    font-size: x-small;\r\n    bottom: -15px;\r\n    right: 45px;\r\n  }\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;;EACCA,KAAK,EAAC;;;EAClBA,KAAK,EAAC;AAAiB;;;EAGtBA,KAAK,EAAC;AAAQ;;;;;;EAafA,KAAK,EAAC;;;;EAGLA,KAAK,EAAC;AAAO;;;EAGHA,KAAK,EAAC;;;EACjBA,KAAK,EAAC;AAAiB;;;EAGtBA,KAAK,EAAC;AAAQ;;;;;;EAafA,KAAK,EAAC;;;;EAGLA,KAAK,EAAC;AAAO;;uBA5CvBC,mBAAA,CA8CM,OA9CNC,UA8CM,G,CA7CQC,MAAA,CAAAC,KAAK,I,cAAjBH,mBAAA,CAqBM,OArBNI,UAqBM,GApBJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAA4B;IAAtBE,GAAG,EAAEL,MAAA,CAAAM,MAAM;IAAEC,GAAG,EAAC;yCAEzBJ,mBAAA,CAAwC,QAAxCK,UAAwC,EAAAC,gBAAA,CAAhBT,MAAA,CAAAU,MAAM,kBACnBV,MAAA,CAAAW,OAAO,e,cAAlBb,mBAAA,CAWM,OAAAc,UAAA,I,kBAVJd,mBAAA,CASMe,SAAA,QAAAC,WAAA,CATmBd,MAAA,CAAAe,QAAQ,GAApBC,GAAG,EAAEC,EAAE;yBAApBnB,mBAAA,CASM;MAT8BoB,GAAG,EAAED;IAAE,IACzCd,mBAAA,CAOM;MANJN,KAAK,EAAAsB,eAAA,EAAC,kBAAkB;iBACUF,EAAE,IAAIjB,MAAA,CAAAe,QAAQ,CAACK,MAAM;;wBAIpDJ,GAAG,CAACK,IAAI,wB;yEAISrB,MAAA,CAAAW,OAAO,c,cAAjCb,mBAAA,CAEM,OAFNwB,UAEM,GADJnB,mBAAA,CAA4B;IAAtBE,GAAG,EAAEL,MAAA,CAAAM,MAAM;IAAEC,GAAG,EAAC;8EAEzBJ,mBAAA,CAAsC,QAAtCoB,UAAsC,EAAAd,gBAAA,CAAfT,MAAA,CAAAwB,KAAK,iB,wCAGnBxB,MAAA,CAAAC,KAAK,I,cAAhBH,mBAAA,CAqBM,OArBN2B,WAqBM,GApBJtB,mBAAA,CAEM,OAFNuB,WAEM,GADJvB,mBAAA,CAA4B;IAAtBE,GAAG,EAAEL,MAAA,CAAAM,MAAM;IAAEC,GAAG,EAAC;0CAEzBJ,mBAAA,CAAwC,QAAxCwB,WAAwC,EAAAlB,gBAAA,CAAhBT,MAAA,CAAAU,MAAM,kBACnBV,MAAA,CAAAW,OAAO,e,cAAlBb,mBAAA,CAWM,OAAA8B,WAAA,I,kBAVJ9B,mBAAA,CASMe,SAAA,QAAAC,WAAA,CATmBd,MAAA,CAAAe,QAAQ,GAApBC,GAAG,EAAEC,EAAE;yBAApBnB,mBAAA,CASM;MAT8BoB,GAAG,EAAED;IAAE,IACzCd,mBAAA,CAOM;MANJN,KAAK,EAAAsB,eAAA,EAAC,kBAAkB;iBACUF,EAAE,IAAIjB,MAAA,CAAAe,QAAQ,CAACK,MAAM;;wBAIpDJ,GAAG,CAACK,IAAI,wB;yEAISrB,MAAA,CAAAW,OAAO,c,cAAjCb,mBAAA,CAEM,OAFN+B,WAEM,GADJ1B,mBAAA,CAA4B;IAAtBE,GAAG,EAAEL,MAAA,CAAAM,MAAM;IAAEC,GAAG,EAAC;+EAEzBJ,mBAAA,CAAsC,QAAtC2B,WAAsC,EAAArB,gBAAA,CAAfT,MAAA,CAAAwB,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}