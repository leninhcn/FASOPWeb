{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_avatar = _resolveComponent(\"q-avatar\");\n  const _component_q_item_section = _resolveComponent(\"q-item-section\");\n  const _component_q_item = _resolveComponent(\"q-item\");\n  const _component_q_list = _resolveComponent(\"q-list\");\n  const _directive_ripple = _resolveDirective(\"ripple\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.TempList, (emp, idx) => {\n    return _openBlock(), _createBlock(_component_q_list, {\n      key: idx\n    }, {\n      default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_q_item, null, {\n        default: _withCtx(() => [_createVNode(_component_q_item_section, {\n          avatar: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_q_avatar, null, {\n            default: _withCtx(() => [_createElementVNode(\"img\", {\n              src: $setup.NoAvatar,\n              alt: \"\"\n            }, null, 8 /* PROPS */, _hoisted_1)]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_q_item_section, null, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(emp.EMP_NAME), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)), [[_directive_ripple]])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","TempList","emp","idx","_createBlock","_component_q_list","key","_component_q_item","_createVNode","_component_q_item_section","avatar","_component_q_avatar","_createElementVNode","src","NoAvatar","alt","EMP_NAME"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\FriendList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <q-list v-for=\"(emp, idx) in TempList\" :key=\"idx\">\r\n      <q-item v-ripple>\r\n        <q-item-section avatar>\r\n          <q-avatar>\r\n            <img :src=\"NoAvatar\" alt=\"\" />\r\n          </q-avatar>\r\n        </q-item-section>\r\n        <q-item-section>\r\n          {{ emp.EMP_NAME }}\r\n        </q-item-section>\r\n      </q-item>\r\n    </q-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, ref } from \"vue\";\r\nexport default {\r\n  setup() {\r\n    onMounted(() => {\r\n      LoadDefaultImage();\r\n      GetAllFriends();\r\n    });\r\n    const FriendList = ref(null);\r\n    const axios = inject(\"axios\");\r\n    const message = inject(\"$message\");\r\n    function GetAllFriends() {\r\n      axios\r\n        .get(`api/chatapp/EmpSearch?emp=all&avatar=True`)\r\n        .then((res) => {\r\n          FriendList.value = res.data;\r\n          TempList.value = res.data;\r\n          console.log(TempList.value.filter(it=>item.EMP_NAME=='NinhLe'));\r\n        })\r\n        .catch((err) => {\r\n          message({\r\n            type: \"error\",\r\n            message: err,\r\n          });\r\n        });\r\n    }\r\n\r\n    const NoAvatar = ref(null);\r\n\r\n    async function LoadDefaultImage() {\r\n      try {\r\n        const response = await axios.get('Images/noImg.png', {\r\n          responseType: \"blob\",\r\n        });\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(response.data);\r\n\r\n        reader.onloadend = () => {\r\n          NoAvatar.value = reader.result;\r\n        };\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    const TempList = ref(null);\r\n    function EMP_filter(filter) {\r\n      TempList.value = FriendList.value.filter((item) =>\r\n        item.EMP_NAME.includes(filter)\r\n      );\r\n      console.log(TempList);\r\n    }\r\n    return { FriendList, GetAllFriends, EMP_filter, TempList,NoAvatar };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";;;;;;;;uBACEA,mBAAA,CAaM,e,kBAZJA,mBAAA,CAWSC,SAAA,QAAAC,WAAA,CAXoBC,MAAA,CAAAC,QAAQ,GAArBC,GAAG,EAAEC,GAAG;yBAAxBC,YAAA,CAWSC,iBAAA;MAX+BC,GAAG,EAAEH;IAAG;wBAC9C,MASS,C,+BATTC,YAAA,CASSG,iBAAA;0BARP,MAIiB,CAJjBC,YAAA,CAIiBC,yBAAA;UAJDC,MAAM,EAAN;QAAM;4BACpB,MAEW,CAFXF,YAAA,CAEWG,mBAAA;8BADT,MAA8B,CAA9BC,mBAAA,CAA8B;cAAxBC,GAAG,EAAEb,MAAA,CAAAc,QAAQ;cAAEC,GAAG,EAAC;;;;;;YAG7BP,YAAA,CAEiBC,yBAAA;4BADf,MAAkB,C,kCAAfP,GAAG,CAACc,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}