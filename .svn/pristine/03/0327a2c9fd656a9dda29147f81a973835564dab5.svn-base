{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport His from \"./HistoryBox.vue\";\nexport default {\n  components: {\n    His\n  },\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  mounted() {\n    this.Avatar = sessionStorage.getItem(\"Avatar\");\n    this.GetChatGroupList();\n  },\n  methods: {\n    GetChatGroupList() {\n      this.axios.get(`api/chatapp/GetEmpAllGroup?emp_id=${this.GetUser.EMP_ID}`).then(res => {\n        this.GroupList = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    }\n  },\n  data() {\n    return {\n      tab: \"chats\",\n      splitterModel: 20,\n      Avatar: \"\",\n      drawer: false,\n      activeID: 0,\n      GroupName: \"Test-Group\",\n      GroupList: [{\n        GROUP_ID: 0,\n        GROUP_NAME: \"Default\"\n      }]\n    };\n  }\n};","map":{"version":3,"names":["mapGetters","His","components","computed","GetUser","mounted","Avatar","sessionStorage","getItem","GetChatGroupList","methods","axios","get","EMP_ID","then","res","GroupList","data","catch","err","console","log","imageFromByte","strBase64","tab","splitterModel","drawer","activeID","GroupName","GROUP_ID","GROUP_NAME"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MainAppForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-layout\r\n      view=\"lHh Lpr lff\"\r\n      container\r\n      style=\"height: 500px\"\r\n      class=\"shadow-2 rounded-borders\"\r\n    >\r\n      <q-header elevated class=\"bg-cyan-8\">\r\n        <q-toolbar>\r\n          <q-toolbar-title>{{ GroupName }}</q-toolbar-title>\r\n          <q-btn flat @click=\"drawer = !drawer\" round dense icon=\"menu\" />\r\n          <q-btn\r\n            flat\r\n            icon=\"cancel\"\r\n            round\r\n            dense\r\n            @click=\"$emit('CloseChatBox')\"\r\n          />\r\n        </q-toolbar>\r\n      </q-header>\r\n\r\n      <q-drawer v-model=\"drawer\" show-if-above :width=\"200\" :breakpoint=\"400\">\r\n        <q-scroll-area\r\n          style=\"\r\n            height: calc(100% - 150px);\r\n            margin-top: 150px;\r\n            border-right: 1px solid #ddd;\r\n          \"\r\n        >\r\n          <div>\r\n            <q-splitter v-model=\"splitterModel\" style=\"height: 100%\">\r\n              <template v-slot:before>\r\n                <q-tabs v-model=\"tab\" vertical class=\"text-teal\">\r\n                  <q-tab name=\"chats\" icon=\"chat\" />\r\n                  <q-tab name=\"friends\" icon=\"group\" />\r\n                  <q-tab name=\"others\" icon=\"favorite\" />\r\n                </q-tabs>\r\n              </template>\r\n\r\n              <template v-slot:after>\r\n                <q-tab-panels\r\n                  v-model=\"tab\"\r\n                  animated\r\n                  swipeable\r\n                  vertical\r\n                  transition-prev=\"jump-up\"\r\n                  transition-next=\"jump-up\"\r\n                >\r\n                  <q-tab-panel name=\"chats\">\r\n                    <q-list style=\"margin-left: -15px\">\r\n                      <q-item\r\n                        v-for=\"(grp, idx) in GroupList\"\r\n                        :key=\"idx\"\r\n                        style=\"margin-left: -15px; margin-right: -15px\"\r\n                        :active=\"idx == activeID\"\r\n                        clickable\r\n                        v-ripple\r\n                      >\r\n                        <q-item-section avatar>{{ grp.GROUP_NAME }}</q-item-section>\r\n                      </q-item>\r\n                    </q-list>\r\n                  </q-tab-panel>\r\n\r\n                  <q-tab-panel name=\"friends\">\r\n                    <div class=\"text-h4 q-mb-md\">Alarms</div>\r\n                    <p>N/A</p>\r\n                  </q-tab-panel>\r\n\r\n                  <q-tab-panel name=\"others\">\r\n                    <div class=\"text-h4 q-mb-md\">Movies</div>\r\n                    <p>N/A</p>\r\n                  </q-tab-panel>\r\n                </q-tab-panels>\r\n              </template>\r\n            </q-splitter>\r\n          </div>\r\n        </q-scroll-area>\r\n\r\n        <q-img\r\n          class=\"absolute-top\"\r\n          src=\"../../assets/userBGR.png\"\r\n          style=\"height: 150px\"\r\n        >\r\n          <div class=\"absolute-bottom bg-transparent\">\r\n            <q-avatar size=\"56px\" class=\"q-mb-sm\">\r\n              <img :src=\"imageFromByte(Avatar)\" />\r\n            </q-avatar>\r\n            <div class=\"text-weight-bold\">Ninh Le</div>\r\n            <div>VANNINH.LE@LUXSHARE-ICT.COM</div>\r\n          </div>\r\n        </q-img>\r\n      </q-drawer>\r\n\r\n      <q-page-container class=\"custom-page-container\">\r\n        <q-page>\r\n          <His></His>\r\n        </q-page>\r\n      </q-page-container>\r\n    </q-layout>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { mapGetters } from \"vuex\";\r\nimport His from \"./HistoryBox.vue\";\r\nexport default {\r\n  components: {\r\n    His,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      GetUser: \"getUser\",\r\n    }),\r\n  },\r\n  mounted() {\r\n    this.Avatar = sessionStorage.getItem(\"Avatar\");\r\n    this.GetChatGroupList();\r\n  },\r\n  methods: {\r\n    GetChatGroupList() {\r\n      this.axios\r\n        .get(`api/chatapp/GetEmpAllGroup?emp_id=${this.GetUser.EMP_ID}`)\r\n        .then((res) => {\r\n          this.GroupList = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    imageFromByte(strBase64) {\r\n      return `data:image/jpeg;base64,${strBase64}`;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      tab: \"chats\",\r\n      splitterModel: 20,\r\n      Avatar: \"\",\r\n      drawer: false,\r\n      activeID: 0,\r\n      GroupName: \"Test-Group\",\r\n      GroupList: [{ GROUP_ID: 0, GROUP_NAME: \"Default\" }],\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.custom-page-container {\r\n  background-color: #1f144b;\r\n}\r\n</style>\r\n  "],"mappings":"AAwGA,SAASA,UAAS,QAAS,MAAM;AACjC,OAAOC,GAAE,MAAO,kBAAkB;AAClC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC;MACZI,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,MAAK,GAAIC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC9C,IAAI,CAACC,gBAAgB,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACE,KAAI,CACNC,GAAG,CAAE,qCAAoC,IAAI,CAACR,OAAO,CAACS,MAAO,EAAC,EAC9DC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACC,SAAQ,GAAID,GAAG,CAACE,IAAI;MAC3B,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN,CAAC;IACDG,aAAaA,CAACC,SAAS,EAAE;MACvB,OAAQ,0BAAyBA,SAAU,EAAC;IAC9C;EACF,CAAC;EACDN,IAAIA,CAAA,EAAG;IACL,OAAO;MACLO,GAAG,EAAE,OAAO;MACZC,aAAa,EAAE,EAAE;MACjBnB,MAAM,EAAE,EAAE;MACVoB,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,YAAY;MACvBZ,SAAS,EAAE,CAAC;QAAEa,QAAQ,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAU,CAAC;IACpD,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}