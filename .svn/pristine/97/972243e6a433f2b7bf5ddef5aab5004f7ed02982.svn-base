{"ast":null,"code":"import \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\n/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\n\nlet buf,\n  bufIdx = 0;\nconst hexBytes = new Array(256);\n\n// Pre-calculate toString(16) for speed\nfor (let i = 0; i < 256; i++) {\n  hexBytes[i] = (i + 0x100).toString(16).substring(1);\n}\n\n// Use best available PRNG\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined' ? crypto : typeof window !== 'undefined' ? window.crypto || window.msCrypto : void 0;\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes;\n    }\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        const bytes = new Uint8Array(n);\n        lib.getRandomValues(bytes);\n        return bytes;\n      };\n    }\n  }\n  return n => {\n    const r = [];\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256));\n    }\n    return r;\n  };\n})();\n\n// Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\nconst BUFFER_SIZE = 4096;\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || bufIdx + 16 > BUFFER_SIZE) {\n    bufIdx = 0;\n    buf = randomBytes(BUFFER_SIZE);\n  }\n  const b = Array.prototype.slice.call(buf, bufIdx, bufIdx += 16);\n  b[6] = b[6] & 0x0f | 0x40;\n  b[8] = b[8] & 0x3f | 0x80;\n  return hexBytes[b[0]] + hexBytes[b[1]] + hexBytes[b[2]] + hexBytes[b[3]] + '-' + hexBytes[b[4]] + hexBytes[b[5]] + '-' + hexBytes[b[6]] + hexBytes[b[7]] + '-' + hexBytes[b[8]] + hexBytes[b[9]] + '-' + hexBytes[b[10]] + hexBytes[b[11]] + hexBytes[b[12]] + hexBytes[b[13]] + hexBytes[b[14]] + hexBytes[b[15]];\n}","map":{"version":3,"names":["buf","bufIdx","hexBytes","Array","i","toString","substring","randomBytes","lib","crypto","window","msCrypto","getRandomValues","n","bytes","Uint8Array","r","push","Math","floor","random","BUFFER_SIZE","b","prototype","slice","call"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/utils/uid.js"],"sourcesContent":["/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\n\nlet\n  buf,\n  bufIdx = 0\nconst hexBytes = new Array(256)\n\n// Pre-calculate toString(16) for speed\nfor (let i = 0; i < 256; i++) {\n  hexBytes[ i ] = (i + 0x100).toString(16).substring(1)\n}\n\n// Use best available PRNG\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined'\n    ? crypto\n    : (\n        typeof window !== 'undefined'\n          ? window.crypto || window.msCrypto\n          : void 0\n      )\n\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes\n    }\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        const bytes = new Uint8Array(n)\n        lib.getRandomValues(bytes)\n        return bytes\n      }\n    }\n  }\n\n  return n => {\n    const r = []\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256))\n    }\n    return r\n  }\n})()\n\n// Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\nconst BUFFER_SIZE = 4096\n\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || (bufIdx + 16 > BUFFER_SIZE)) {\n    bufIdx = 0\n    buf = randomBytes(BUFFER_SIZE)\n  }\n\n  const b = Array.prototype.slice.call(buf, bufIdx, (bufIdx += 16))\n  b[ 6 ] = (b[ 6 ] & 0x0f) | 0x40\n  b[ 8 ] = (b[ 8 ] & 0x3f) | 0x80\n\n  return hexBytes[ b[ 0 ] ] + hexBytes[ b[ 1 ] ]\n    + hexBytes[ b[ 2 ] ] + hexBytes[ b[ 3 ] ] + '-'\n    + hexBytes[ b[ 4 ] ] + hexBytes[ b[ 5 ] ] + '-'\n    + hexBytes[ b[ 6 ] ] + hexBytes[ b[ 7 ] ] + '-'\n    + hexBytes[ b[ 8 ] ] + hexBytes[ b[ 9 ] ] + '-'\n    + hexBytes[ b[ 10 ] ] + hexBytes[ b[ 11 ] ]\n    + hexBytes[ b[ 12 ] ] + hexBytes[ b[ 13 ] ]\n    + hexBytes[ b[ 14 ] ] + hexBytes[ b[ 15 ] ]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}