{"ast":null,"code":"import { io } from \"socket.io-client\";\nexport default {\n  mounted() {\n    this.socket.on(\"connect\", () => {\n      this.connected = true;\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.connected = false;\n    });\n    this.socket.on(\"message\", data => {\n      this.messages = data.toString();\n    });\n  },\n  data() {\n    return {\n      url: \"ws://localhost:3000\",\n      socket: undefined,\n      connected: false,\n      messages: [],\n      message: \"\"\n    };\n  },\n  methods: {\n    sendMessage() {\n      this.socket.emit(\"message\", this.message);\n      this.message = \"\";\n    }\n  }\n};","map":{"version":3,"names":["io","mounted","socket","on","connected","data","messages","toString","url","undefined","message","methods","sendMessage","emit"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\SocketCom\\TestSocket.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>WebSocket Example</h2>\r\n    <div v-if=\"connected\">\r\n      <h3>Connected to WebSocket server at {{ url }}</h3>\r\n      <form @submit.prevent=\"sendMessage\">\r\n        <label for=\"message\">Message:</label>\r\n        <input type=\"text\" v-model=\"message\" required />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      <ul>\r\n        <li v-for=\"(msg, id) in messages\" :key=\"id\">{{ msg }}</li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <p>Connecting to WebSocket server at {{ url }}...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { io } from \"socket.io-client\";\r\nexport default {\r\n  mounted() {\r\n    this.socket.on(\"connect\", () => {\r\n      this.connected = true;\r\n    });\r\n\r\n    this.socket.on(\"disconnect\", () => {\r\n      this.connected = false;\r\n    });\r\n\r\n    this.socket.on(\"message\", (data) => {\r\n      this.messages = data.toString();\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      url: \"ws://localhost:3000\",\r\n      socket: undefined,\r\n      connected: false,\r\n      messages: [],\r\n      message: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      this.socket.emit(\"message\", this.message);\r\n      this.message = \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"AAqBA,SAASA,EAAC,QAAS,kBAAkB;AACrC,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC9B,IAAI,CAACC,SAAQ,GAAI,IAAI;IACvB,CAAC,CAAC;IAEF,IAAI,CAACF,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MACjC,IAAI,CAACC,SAAQ,GAAI,KAAK;IACxB,CAAC,CAAC;IAEF,IAAI,CAACF,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGE,IAAI,IAAK;MAClC,IAAI,CAACC,QAAO,GAAID,IAAI,CAACE,QAAQ,EAAE;IACjC,CAAC,CAAC;EACJ,CAAC;EACDF,IAAIA,CAAA,EAAG;IACL,OAAO;MACLG,GAAG,EAAE,qBAAqB;MAC1BN,MAAM,EAAEO,SAAS;MACjBL,SAAS,EAAE,KAAK;MAChBE,QAAQ,EAAE,EAAE;MACZI,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACV,MAAM,CAACW,IAAI,CAAC,SAAS,EAAE,IAAI,CAACH,OAAO,CAAC;MACzC,IAAI,CAACA,OAAM,GAAI,EAAE;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}