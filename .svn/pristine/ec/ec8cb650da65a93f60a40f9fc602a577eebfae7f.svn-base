{"ast":null,"code":"import defineReactivePlugin from '../utils/private/define-reactive-plugin.js';\nimport { changeGlobalNodesTarget } from '../utils/private/global-nodes.js';\nconst prefixes = {};\nfunction assignFn(fn) {\n  Object.assign(Plugin, {\n    request: fn,\n    exit: fn,\n    toggle: fn\n  });\n}\nfunction getFullscreenElement() {\n  return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || null;\n}\nfunction updateEl() {\n  const newEl = Plugin.activeEl = Plugin.isActive === false ? null : getFullscreenElement();\n  changeGlobalNodesTarget(newEl === null || newEl === document.documentElement ? document.body : newEl);\n}\nfunction togglePluginState() {\n  Plugin.isActive = Plugin.isActive === false;\n  updateEl();\n}\n\n// needed for consistency across browsers\nfunction promisify(target, fn) {\n  try {\n    const res = target[fn]();\n    return res === void 0 ? Promise.resolve() : res;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nconst Plugin = defineReactivePlugin({\n  isActive: false,\n  activeEl: null\n}, {\n  isCapable: false,\n  install({\n    $q\n  }) {\n    $q.fullscreen = this;\n  }\n});\nif (__QUASAR_SSR_SERVER__ === true) {\n  assignFn(() => Promise.resolve());\n} else {\n  prefixes.request = ['requestFullscreen', 'msRequestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen'].find(request => document.documentElement[request] !== void 0);\n  Plugin.isCapable = prefixes.request !== void 0;\n  if (Plugin.isCapable === false) {\n    // it means the browser does NOT support it\n    assignFn(() => Promise.reject('Not capable'));\n  } else {\n    Object.assign(Plugin, {\n      request(target) {\n        const el = target || document.documentElement;\n        const {\n          activeEl\n        } = Plugin;\n        if (el === activeEl) {\n          return Promise.resolve();\n        }\n        const queue = activeEl !== null && el.contains(activeEl) === true ? Plugin.exit() : Promise.resolve();\n        return queue.finally(() => promisify(el, prefixes.request));\n      },\n      exit() {\n        return Plugin.isActive === true ? promisify(document, prefixes.exit) : Promise.resolve();\n      },\n      toggle(target) {\n        return Plugin.isActive === true ? Plugin.exit() : Plugin.request(target);\n      }\n    });\n    prefixes.exit = ['exitFullscreen', 'msExitFullscreen', 'mozCancelFullScreen', 'webkitExitFullscreen'].find(exit => document[exit]);\n    Plugin.isActive = Boolean(getFullscreenElement());\n    Plugin.isActive === true && updateEl();\n    ['onfullscreenchange', 'onmsfullscreenchange', 'onwebkitfullscreenchange'].forEach(evt => {\n      document[evt] = togglePluginState;\n    });\n  }\n}\nexport default Plugin;","map":{"version":3,"names":["defineReactivePlugin","changeGlobalNodesTarget","prefixes","assignFn","fn","Object","assign","Plugin","request","exit","toggle","getFullscreenElement","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","updateEl","newEl","activeEl","isActive","documentElement","body","togglePluginState","promisify","target","res","Promise","resolve","err","reject","isCapable","install","$q","fullscreen","__QUASAR_SSR_SERVER__","find","el","queue","contains","finally","Boolean","forEach","evt"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/plugins/AppFullscreen.js"],"sourcesContent":["import defineReactivePlugin from '../utils/private/define-reactive-plugin.js'\nimport { changeGlobalNodesTarget } from '../utils/private/global-nodes.js'\n\nconst prefixes = {}\n\nfunction assignFn (fn) {\n  Object.assign(Plugin, {\n    request: fn,\n    exit: fn,\n    toggle: fn\n  })\n}\n\nfunction getFullscreenElement () {\n  return (\n    document.fullscreenElement\n    || document.mozFullScreenElement\n    || document.webkitFullscreenElement\n    || document.msFullscreenElement\n    || null\n  )\n}\n\nfunction updateEl () {\n  const newEl = Plugin.activeEl = Plugin.isActive === false\n    ? null\n    : getFullscreenElement()\n\n  changeGlobalNodesTarget(\n    newEl === null || newEl === document.documentElement\n      ? document.body\n      : newEl\n  )\n}\n\nfunction togglePluginState () {\n  Plugin.isActive = Plugin.isActive === false\n  updateEl()\n}\n\n// needed for consistency across browsers\nfunction promisify (target, fn) {\n  try {\n    const res = target[ fn ]()\n    return res === void 0\n      ? Promise.resolve()\n      : res\n  }\n  catch (err) {\n    return Promise.reject(err)\n  }\n}\n\nconst Plugin = defineReactivePlugin({\n  isActive: false,\n  activeEl: null\n}, {\n  isCapable: false,\n\n  install ({ $q }) {\n    $q.fullscreen = this\n  }\n})\n\nif (__QUASAR_SSR_SERVER__ === true) {\n  assignFn(() => Promise.resolve())\n}\nelse {\n  prefixes.request = [\n    'requestFullscreen',\n    'msRequestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen'\n  ].find(request => document.documentElement[ request ] !== void 0)\n\n  Plugin.isCapable = prefixes.request !== void 0\n\n  if (Plugin.isCapable === false) {\n    // it means the browser does NOT support it\n    assignFn(() => Promise.reject('Not capable'))\n  }\n  else {\n    Object.assign(Plugin, {\n      request (target) {\n        const el = target || document.documentElement\n        const { activeEl } = Plugin\n\n        if (el === activeEl) {\n          return Promise.resolve()\n        }\n\n        const queue = activeEl !== null && el.contains(activeEl) === true\n          ? Plugin.exit()\n          : Promise.resolve()\n\n        return queue.finally(() => promisify(el, prefixes.request))\n      },\n\n      exit () {\n        return Plugin.isActive === true\n          ? promisify(document, prefixes.exit)\n          : Promise.resolve()\n      },\n\n      toggle (target) {\n        return Plugin.isActive === true\n          ? Plugin.exit()\n          : Plugin.request(target)\n      }\n    })\n\n    prefixes.exit = [\n      'exitFullscreen',\n      'msExitFullscreen', 'mozCancelFullScreen', 'webkitExitFullscreen'\n    ].find(exit => document[ exit ])\n\n    Plugin.isActive = Boolean(getFullscreenElement())\n    Plugin.isActive === true && updateEl()\n\n    ;[\n      'onfullscreenchange',\n      'onmsfullscreenchange', 'onwebkitfullscreenchange'\n    ].forEach(evt => {\n      document[ evt ] = togglePluginState\n    })\n  }\n}\n\nexport default Plugin\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}