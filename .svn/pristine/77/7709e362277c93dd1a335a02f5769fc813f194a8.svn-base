{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__tip\"\n}, \" jpg/png files with a size less than 500kb \", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createBlock(_component_el_upload, {\n    ref: \"uploadRef\",\n    class: \"upload-demo\",\n    action: \"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\",\n    \"auto-upload\": false,\n    accept: \"audio/mpeg\"\n  }, {\n    trigger: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"select file\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    tip: _withCtx(() => [_hoisted_1]),\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      class: \"ml-3\",\n      type: \"success\",\n      onClick: _ctx.submitUpload\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" upload to server \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_el_upload","ref","action","accept","trigger","_withCtx","_createVNode","_component_el_button","type","tip","_hoisted_1","onClick","_ctx","submitUpload"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\ContentsManage.vue"],"sourcesContent":["<template>\r\n    <el-upload\r\n      ref=\"uploadRef\"\r\n      class=\"upload-demo\"\r\n      action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\r\n      :auto-upload=\"false\"\r\n      accept=\"audio/mpeg\"\r\n    >\r\n      <template #trigger>\r\n        <el-button type=\"primary\">select file</el-button>\r\n      </template>\r\n  \r\n      <el-button class=\"ml-3\" type=\"success\" @click=\"submitUpload\">\r\n        upload to server\r\n      </el-button>\r\n  \r\n      <template #tip>\r\n        <div class=\"el-upload__tip\">\r\n          jpg/png files with a size less than 500kb\r\n        </div>\r\n      </template>\r\n    </el-upload>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";gCAiBQA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAgB,GAAC,6CAE5B;;;;;uBAlBJC,YAAA,CAoBYC,oBAAA;IAnBVC,GAAG,EAAC,WAAW;IACfH,KAAK,EAAC,aAAa;IACnBI,MAAM,EAAC,8DAA8D;IACpE,aAAW,EAAE,KAAK;IACnBC,MAAM,EAAC;;IAEIC,OAAO,EAAAC,QAAA,CAChB,MAAiD,CAAjDC,YAAA,CAAiDC,oBAAA;MAAtCC,IAAI,EAAC;IAAS;wBAAC,MAAW,C,iBAAX,aAAW,E;;;;IAO5BC,GAAG,EAAAJ,QAAA,CACZ,MAEM,CAFNK,UAEM,C;sBAPR,MAEY,CAFZJ,YAAA,CAEYC,oBAAA;MAFDT,KAAK,EAAC,MAAM;MAACU,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAEC,IAAA,CAAAC;;wBAAc,MAE7D,C,iBAF6D,oBAE7D,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}