{"ast":null,"code":"export default {\n  name: \"AudioPlayer\",\n  props: {\n    src: {\n      type: String,\n      required: false\n    },\n    title: {\n      type: String,\n      default: \"Code For Fun\"\n    }\n  },\n  data() {\n    return {\n      trackList: [{}],\n      playing_src: \"\",\n      trackinfo: {\n        src: \"\",\n        title: \"chan lam roi\",\n        current_time: 0,\n        totaltime: 0\n      },\n      ttvisible: false,\n      tooltipRef: {\n        getBoundingClientRect: () => this.position\n      },\n      isPlaying: false,\n      position: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      }\n    };\n  },\n  mounted() {\n    var parent = this;\n    this.$refs.player.addEventListener(\"pause\", function () {\n      if (parent.isPlaying) parent.isPlaying = false;\n      console.log(\"paused!!!\");\n    });\n    this.$refs.player.addEventListener(\"play\", function () {\n      if (!parent.isPlaying) parent.isPlaying = true;\n      console.log(\"played!!!\");\n    });\n    this.$refs.player.addEventListener(\"seeked\", function () {\n      this.play();\n      console.log(\"seeked!!!\");\n    });\n  },\n  methods: {\n    play() {\n      if (!this.isPlaying) {\n        if (!this.playing_src) this.playing_src = `${this.axios.defaults.baseURL}api/Funapp/StreamAudio?id=8`; //api/Funapp/Playback  api/Funapp/StreamAudio\n        this.$refs.player.load();\n        this.$refs.player.play();\n      }\n    },\n    ShowCurrentTime() {\n      if (this.ttvisible) return;\n      if (this.$refs.player) this.trackinfo.current_time = this.$refs.player.currentTime;\n      if (this.$refs.player) this.trackinfo.totaltime = this.$refs.player.duration;\n    },\n    pause() {\n      this.$refs.player.pause();\n    },\n    pg_mouseDown() {\n      this.ttvisible = true;\n    },\n    pg_mouseUp() {\n      this.ttvisible = false;\n      this.$refs.player.currentTime = this.trackinfo.current_time;\n    },\n    valueOnMouse: function (e) {\n      if (this.ttvisible) {\n        const rec = this.$refs.pcTime.getBoundingClientRect();\n        this.position = DOMRect.fromRect({\n          width: 10,\n          height: 10,\n          x: e.clientX,\n          y: rec.top\n        });\n      }\n    },\n    timetostring: function (time) {\n      var sec_num = parseInt(time, 10);\n      var hours = Math.floor(sec_num / 3600);\n      var minutes = Math.floor((sec_num - hours * 3600) / 60);\n      var seconds = sec_num - hours * 3600 - minutes * 60;\n      if (hours < 10) {\n        hours = \"0\" + hours;\n      }\n      if (minutes < 10) {\n        minutes = \"0\" + minutes;\n      }\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n      return hours + \":\" + minutes + \":\" + seconds;\n    }\n  }\n};","map":{"version":3,"names":["name","props","src","type","String","required","title","default","data","trackList","playing_src","trackinfo","current_time","totaltime","ttvisible","tooltipRef","getBoundingClientRect","position","isPlaying","top","left","bottom","right","mounted","parent","$refs","player","addEventListener","console","log","play","methods","axios","defaults","baseURL","load","ShowCurrentTime","currentTime","duration","pause","pg_mouseDown","pg_mouseUp","valueOnMouse","e","rec","pcTime","DOMRect","fromRect","width","height","x","clientX","y","timetostring","time","sec_num","parseInt","hours","Math","floor","minutes","seconds"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\MediaPlayer.vue"],"sourcesContent":["<template>\r\n  <tr style=\"text-align: center\">\r\n    <td style=\"border-style: solid; text-align: center\">\r\n      <div>\r\n        <audio ref=\"player\" @timeupdate=\"ShowCurrentTime\" preload=\"none\">\r\n          <source :src=\"playing_src\" type=\"audio/mpeg\" />\r\n        </audio>\r\n        <el-tooltip\r\n          v-model:visible=\"ttvisible\"\r\n          :content=\"timetostring(trackinfo.current_time)\"\r\n          placement=\"top\"\r\n          effect=\"light\"\r\n          trigger=\"click\"\r\n          virtual-triggering\r\n          :virtual-ref=\"tooltipRef\"\r\n        />\r\n\r\n        <div class=\"mainPlayer\">\r\n          <input\r\n            ref=\"pcTime\"\r\n            @mousedown=\"pg_mouseDown\"\r\n            @mouseup=\"pg_mouseUp\"\r\n            @mousemove=\"valueOnMouse\"\r\n            type=\"range\"\r\n            name=\"myRange\"\r\n            id=\"myRange\"\r\n            min=\"0\"\r\n            :max=\"Math.floor(trackinfo.totaltime)\"\r\n            class=\"slider\"\r\n            v-model=\"trackinfo.current_time\"\r\n          />\r\n\r\n          <div class=\"btnGroupControl\">\r\n            <button class=\"btnPrev\">\r\n              <i class=\"fa-solid fa-backward-fast\"></i>\r\n            </button>\r\n            <button class=\"btnPlay\" @click=\"play\">\r\n              <i class=\"fa-solid fa-play\"></i>\r\n            </button>\r\n            <button class=\"btnNext\">\r\n              <i class=\"fa-solid fa-forward-fast\"></i>\r\n            </button>\r\n            <button class=\"btnMarquee\">\r\n              <marquee scrollamount=\"2\">{{ trackinfo.title }}</marquee>\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"showTime\">\r\n            <p style=\"display: inline\">\r\n              {{ timetostring(trackinfo.current_time) }}\r\n            </p>\r\n            <p style=\"display: inline\">\r\n              / {{ timetostring(trackinfo.totaltime) }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td style=\"border-style: solid; text-align: center\">\r\n      <div style=\"width: 200px; height: fit-content; background-color: red\">\r\n        <p>test contents</p>\r\n        <p>test contents</p>\r\n        <p>test contents</p>\r\n        <p>test contents</p>\r\n        <p>test contents</p>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  name: \"AudioPlayer\",\r\n  props: {\r\n    src: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"Code For Fun\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      trackList: [{}],\r\n      playing_src: \"\",\r\n      trackinfo: {\r\n        src: \"\",\r\n        title: \"chan lam roi\",\r\n        current_time: 0,\r\n        totaltime: 0,\r\n      },\r\n      ttvisible: false,\r\n      tooltipRef: {\r\n        getBoundingClientRect: () => this.position,\r\n      },\r\n      isPlaying: false,\r\n      position: {\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    var parent = this;\r\n    this.$refs.player.addEventListener(\"pause\", function () {\r\n      if (parent.isPlaying) parent.isPlaying = false;\r\n      console.log(\"paused!!!\");\r\n    });\r\n    this.$refs.player.addEventListener(\"play\", function () {\r\n      if (!parent.isPlaying) parent.isPlaying = true;\r\n      console.log(\"played!!!\");\r\n    });\r\n    this.$refs.player.addEventListener(\"seeked\", function () {\r\n      this.play();\r\n      console.log(\"seeked!!!\");\r\n    });\r\n  },\r\n  methods: {\r\n    play() {\r\n      if (!this.isPlaying) {\r\n        if (!this.playing_src)\r\n          this.playing_src = `${this.axios.defaults.baseURL}api/Funapp/StreamAudio?id=8`; //api/Funapp/Playback  api/Funapp/StreamAudio\r\n        this.$refs.player.load();\r\n        this.$refs.player.play();\r\n      }\r\n    },\r\n    ShowCurrentTime() {\r\n      if (this.ttvisible) return;\r\n      if (this.$refs.player)\r\n        this.trackinfo.current_time = this.$refs.player.currentTime;\r\n      if (this.$refs.player)\r\n        this.trackinfo.totaltime = this.$refs.player.duration;\r\n    },\r\n    pause() {\r\n      this.$refs.player.pause();\r\n    },\r\n    pg_mouseDown() {\r\n      this.ttvisible = true;\r\n    },\r\n    pg_mouseUp() {\r\n      this.ttvisible = false;\r\n      this.$refs.player.currentTime = this.trackinfo.current_time;\r\n    },\r\n    valueOnMouse: function (e) {\r\n      if (this.ttvisible) {\r\n        const rec = this.$refs.pcTime.getBoundingClientRect();\r\n        this.position = DOMRect.fromRect({\r\n          width: 10,\r\n          height: 10,\r\n          x: e.clientX,\r\n          y: rec.top,\r\n        });\r\n      }\r\n    },\r\n    timetostring: function (time) {\r\n      var sec_num = parseInt(time, 10);\r\n      var hours = Math.floor(sec_num / 3600);\r\n      var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n      var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n      if (hours < 10) {\r\n        hours = \"0\" + hours;\r\n      }\r\n      if (minutes < 10) {\r\n        minutes = \"0\" + minutes;\r\n      }\r\n      if (seconds < 10) {\r\n        seconds = \"0\" + seconds;\r\n      }\r\n      return hours + \":\" + minutes + \":\" + seconds;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.mainPlayer {\r\n  position: relative;\r\n  background-color: #262727c7;\r\n  #myRange {\r\n    width: 100%;\r\n  }\r\n  .showTime {\r\n    position: absolute;\r\n    top: 20%;\r\n    right: 0px;\r\n    padding: {\r\n      left: 5px;\r\n      right: 12px;\r\n    }\r\n    margin: {\r\n      right: 0;\r\n    }\r\n    p {\r\n      color: rgb(255, 251, 1);\r\n    }\r\n    text-align: right;\r\n  }\r\n\r\n  .btnGroupControl {\r\n    text-align: left;\r\n    .btnPrev,\r\n    .btnNext,\r\n    .btnPlay {\r\n      background: transparent;\r\n      cursor: pointer;\r\n      box-shadow: 2px 2px 4px 2px rgba(221, 197, 197, 0.336);\r\n      transition: box-shadow 0.1s ease-out;\r\n      &:active {\r\n        outline: none;\r\n        box-shadow: 0 0 50px 20px rgba(53, 166, 247, 0.7);\r\n        background-color: rgba(145, 201, 241, 0.7);\r\n      }\r\n    }\r\n    padding: {\r\n      top: 5px;\r\n      bottom: 5px;\r\n    }\r\n  }\r\n  .btnPlay {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin: {\r\n      left: 8px;\r\n      right: 8px;\r\n    }\r\n  }\r\n  .btnPrev,\r\n  .btnNext {\r\n    border: none;\r\n  }\r\n  .btnMarquee {\r\n    border: none;\r\n    width: 70%;\r\n    margin-left: 10px;\r\n    background-color: transparent;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n    marquee {\r\n      color: rgb(255, 174, 0);\r\n      margin: {\r\n        bottom: -8px;\r\n      }\r\n    }\r\n  }\r\n  .btnPrev {\r\n    margin: {\r\n      left: 8px;\r\n    }\r\n  }\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n  border-radius: 50%;\r\n  box-shadow: 0px 0px 15px 0px rgb(253, 255, 142);\r\n}\r\n</style>\r\n  "],"mappings":"AAuEA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;MACfC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE;QACTT,GAAG,EAAE,EAAE;QACPI,KAAK,EAAE,cAAc;QACrBM,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE;MACb,CAAC;MACDC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE;QACVC,qBAAqB,EAAEA,CAAA,KAAM,IAAI,CAACC;MACpC,CAAC;MACDC,SAAS,EAAE,KAAK;MAChBD,QAAQ,EAAE;QACRE,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAK,GAAI,IAAI;IACjB,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,YAAY;MACtD,IAAIH,MAAM,CAACN,SAAS,EAAEM,MAAM,CAACN,SAAQ,GAAI,KAAK;MAC9CU,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC;IACF,IAAI,CAACJ,KAAK,CAACC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,YAAY;MACrD,IAAI,CAACH,MAAM,CAACN,SAAS,EAAEM,MAAM,CAACN,SAAQ,GAAI,IAAI;MAC9CU,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC;IACF,IAAI,CAACJ,KAAK,CAACC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAY;MACvD,IAAI,CAACG,IAAI,EAAE;MACXF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EACDE,OAAO,EAAE;IACPD,IAAIA,CAAA,EAAG;MACL,IAAI,CAAC,IAAI,CAACZ,SAAS,EAAE;QACnB,IAAI,CAAC,IAAI,CAACR,WAAW,EACnB,IAAI,CAACA,WAAU,GAAK,GAAE,IAAI,CAACsB,KAAK,CAACC,QAAQ,CAACC,OAAQ,6BAA4B,EAAE;QAClF,IAAI,CAACT,KAAK,CAACC,MAAM,CAACS,IAAI,EAAE;QACxB,IAAI,CAACV,KAAK,CAACC,MAAM,CAACI,IAAI,EAAE;MAC1B;IACF,CAAC;IACDM,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACtB,SAAS,EAAE;MACpB,IAAI,IAAI,CAACW,KAAK,CAACC,MAAM,EACnB,IAAI,CAACf,SAAS,CAACC,YAAW,GAAI,IAAI,CAACa,KAAK,CAACC,MAAM,CAACW,WAAW;MAC7D,IAAI,IAAI,CAACZ,KAAK,CAACC,MAAM,EACnB,IAAI,CAACf,SAAS,CAACE,SAAQ,GAAI,IAAI,CAACY,KAAK,CAACC,MAAM,CAACY,QAAQ;IACzD,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACd,KAAK,CAACC,MAAM,CAACa,KAAK,EAAE;IAC3B,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC1B,SAAQ,GAAI,IAAI;IACvB,CAAC;IACD2B,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC3B,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACW,KAAK,CAACC,MAAM,CAACW,WAAU,GAAI,IAAI,CAAC1B,SAAS,CAACC,YAAY;IAC7D,CAAC;IACD8B,YAAY,EAAE,SAAAA,CAAUC,CAAC,EAAE;MACzB,IAAI,IAAI,CAAC7B,SAAS,EAAE;QAClB,MAAM8B,GAAE,GAAI,IAAI,CAACnB,KAAK,CAACoB,MAAM,CAAC7B,qBAAqB,EAAE;QACrD,IAAI,CAACC,QAAO,GAAI6B,OAAO,CAACC,QAAQ,CAAC;UAC/BC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,EAAE;UACVC,CAAC,EAAEP,CAAC,CAACQ,OAAO;UACZC,CAAC,EAAER,GAAG,CAACzB;QACT,CAAC,CAAC;MACJ;IACF,CAAC;IACDkC,YAAY,EAAE,SAAAA,CAAUC,IAAI,EAAE;MAC5B,IAAIC,OAAM,GAAIC,QAAQ,CAACF,IAAI,EAAE,EAAE,CAAC;MAChC,IAAIG,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACJ,OAAM,GAAI,IAAI,CAAC;MACtC,IAAIK,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAC,CAACJ,OAAM,GAAIE,KAAI,GAAI,IAAI,IAAI,EAAE,CAAC;MACvD,IAAII,OAAM,GAAIN,OAAM,GAAIE,KAAI,GAAI,IAAG,GAAIG,OAAM,GAAI,EAAE;MAEnD,IAAIH,KAAI,GAAI,EAAE,EAAE;QACdA,KAAI,GAAI,GAAE,GAAIA,KAAK;MACrB;MACA,IAAIG,OAAM,GAAI,EAAE,EAAE;QAChBA,OAAM,GAAI,GAAE,GAAIA,OAAO;MACzB;MACA,IAAIC,OAAM,GAAI,EAAE,EAAE;QAChBA,OAAM,GAAI,GAAE,GAAIA,OAAO;MACzB;MACA,OAAOJ,KAAI,GAAI,GAAE,GAAIG,OAAM,GAAI,GAAE,GAAIC,OAAO;IAC9C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}