{"ast":null,"code":"import { inject, onMounted, ref } from \"vue\";\nexport default {\n  setup() {\n    onMounted(() => {\n      GetAllFriends();\n      EMP_filter('');\n    });\n    const FriendList = ref(null);\n    const axios = inject(\"axios\");\n    const message = inject(\"$message\");\n    function GetAllFriends() {\n      axios.get(`api/chatapp/EmpSearch?emp=all&avatar=True`).then(res => {\n        FriendList.value = res.data;\n        console.log(FriendList.value[0]);\n      }).catch(err => {\n        message({\n          type: \"error\",\n          message: err\n        });\n      });\n    }\n    const TempList = ref(null);\n    function EMP_filter(filter) {\n      TempList = FriendList.filter(item => item.EMP_NAME.include(filter));\n    }\n    return {\n      FriendList,\n      GetAllFriends,\n      EMP_filter\n    };\n  }\n};","map":{"version":3,"names":["inject","onMounted","ref","setup","GetAllFriends","EMP_filter","FriendList","axios","message","get","then","res","value","data","console","log","catch","err","type","TempList","filter","item","EMP_NAME","include"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\FriendList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <q-list v-for=\"(emp, idx) in TempList\" :key=\"idx\">\r\n      <q-item clickable v-ripple>\r\n        <q-item-section avatar>\r\n          <q-avatar>\r\n            <img src=\"#\" alt=\"\" />\r\n          </q-avatar>\r\n        </q-item-section>\r\n        <q-item-section>\r\n          {{ emp.EMP_NAME }}\r\n        </q-item-section>\r\n      </q-item>\r\n    </q-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, ref } from \"vue\";\r\nexport default {\r\n  setup() {\r\n    onMounted(() => {\r\n      GetAllFriends();\r\n      EMP_filter('');\r\n    });\r\n    const FriendList = ref(null);\r\n    const axios = inject(\"axios\");\r\n    const message = inject(\"$message\");\r\n    function GetAllFriends() {\r\n      axios\r\n        .get(`api/chatapp/EmpSearch?emp=all&avatar=True`)\r\n        .then((res) => {\r\n          FriendList.value = res.data;\r\n          console.log(FriendList.value[0]);\r\n        })\r\n        .catch((err) => {\r\n          message({\r\n            type: \"error\",\r\n            message: err,\r\n          });\r\n        });\r\n    }\r\n    const TempList = ref(null);\r\n    function EMP_filter(filter) {\r\n      TempList = FriendList.filter((item) => item.EMP_NAME.include(filter));\r\n    }\r\n    return { FriendList, GetAllFriends, EMP_filter };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"AAkBA,SAASA,MAAM,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC5C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACNF,SAAS,CAAC,MAAM;MACdG,aAAa,EAAE;MACfC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;IACF,MAAMC,UAAS,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMK,KAAI,GAAIP,MAAM,CAAC,OAAO,CAAC;IAC7B,MAAMQ,OAAM,GAAIR,MAAM,CAAC,UAAU,CAAC;IAClC,SAASI,aAAaA,CAAA,EAAG;MACvBG,KAAI,CACDE,GAAG,CAAE,2CAA0C,EAC/CC,IAAI,CAAEC,GAAG,IAAK;QACbL,UAAU,CAACM,KAAI,GAAID,GAAG,CAACE,IAAI;QAC3BC,OAAO,CAACC,GAAG,CAACT,UAAU,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,EACAI,KAAK,CAAEC,GAAG,IAAK;QACdT,OAAO,CAAC;UACNU,IAAI,EAAE,OAAO;UACbV,OAAO,EAAES;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;IACA,MAAME,QAAO,GAAIjB,GAAG,CAAC,IAAI,CAAC;IAC1B,SAASG,UAAUA,CAACe,MAAM,EAAE;MAC1BD,QAAO,GAAIb,UAAU,CAACc,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACC,OAAO,CAACH,MAAM,CAAC,CAAC;IACvE;IACA,OAAO;MAAEd,UAAU;MAAEF,aAAa;MAAEC;IAAW,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}