{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport GetOption from \"./Datas/rateCommon\";\nexport default {\n  data() {\n    return {\n      option: GetOption(),\n      myChart: undefined\n    };\n  },\n  methods: {\n    DataUpdate(iLine) {\n      this.myChart.clear();\n      this.axios.post(\"api/FATPKanban/GetYieldDetail\", iLine).then(res => {\n        const [sr, grp] = this.GetSeries(res.data.data);\n        if (sr.length > 0) {\n          this.option.series = sr;\n          this.option.graphic = grp;\n          this.myChart.setOption(this.option);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    GetSeries(data) {\n      const rs = [];\n      const grp = [];\n      const offset = data.length > 0 ? Math.floor(this.myChart.getWidth() / data.length) : 1;\n      for (let id = 0; id < data.length; id++) {\n        const el = data[id];\n        grp.push({\n          type: \"text\",\n          style: {\n            text: el.PROCESS_NAME,\n            x: id == 0 ? id * offset + 60 : id * offset + 40,\n            y: 240,\n            fill: \"#fff\",\n            font: \"20px verdana\"\n          }\n        });\n        let datas = [{\n          value: el.PERCENT,\n          name: \"Final Rate\",\n          title: {\n            show: false,\n            offsetCenter: [\"0%\", \"-3%\"]\n          },\n          detail: {\n            valueAnimation: true,\n            offsetCenter: [\"0%\", \"-20%\"]\n          }\n        }, {\n          value: el.FIRST_RATE,\n          name: \"First Pass Rate\",\n          title: {\n            show: false,\n            offsetCenter: [\"0%\", \"27%\"]\n          },\n          detail: {\n            valueAnimation: true,\n            offsetCenter: [\"0%\", \"8%\"]\n          }\n        }];\n        rs.push({\n          type: \"gauge\",\n          startAngle: 90,\n          endAngle: -270,\n          center: [id == 0 ? id * offset + 80 : id * offset + 60, \"50%\"],\n          pointer: {\n            show: false\n          },\n          progress: {\n            show: true,\n            overlap: false,\n            roundCap: false,\n            clip: true,\n            itemStyle: {\n              borderWidth: 1,\n              borderColor: \"#464646\"\n            }\n          },\n          color: [\"#04B404\", \"rgb(253, 2, 253)\", \"purple\", \"#cccccc\"],\n          axisLine: {\n            lineStyle: {\n              width: 20\n            }\n          },\n          splitLine: {\n            show: false,\n            distance: 0,\n            length: 15\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: false,\n            distance: 20\n          },\n          radius: \"50%\",\n          data: datas,\n          title: {\n            fontSize: 8\n          },\n          detail: {\n            width: 25,\n            height: 5,\n            fontSize: 10,\n            color: \"inherit\",\n            borderColor: \"inherit\",\n            borderRadius: 20,\n            borderWidth: 1,\n            formatter: \"{value}%\"\n          }\n        });\n      }\n      return [rs, grp];\n    }\n  },\n  mounted() {\n    var dom = document.getElementById(\"rate-chart\");\n    this.myChart = this.$Echart.init(dom, null, {\n      renderer: \"canvas\",\n      useDirtyRect: false\n    });\n    if (this.option && typeof this.option === \"object\") {\n      this.myChart.setOption(this.option);\n    }\n    window.addEventListener(\"resize\", this.myChart.resize);\n  }\n};","map":{"version":3,"names":["GetOption","data","option","myChart","undefined","methods","DataUpdate","iLine","clear","axios","post","then","res","sr","grp","GetSeries","length","series","graphic","setOption","catch","err","console","log","rs","offset","Math","floor","getWidth","id","el","push","type","style","text","PROCESS_NAME","x","y","fill","font","datas","value","PERCENT","name","title","show","offsetCenter","detail","valueAnimation","FIRST_RATE","startAngle","endAngle","center","pointer","progress","overlap","roundCap","clip","itemStyle","borderWidth","borderColor","color","axisLine","lineStyle","width","splitLine","distance","axisTick","axisLabel","radius","fontSize","height","borderRadius","formatter","mounted","dom","document","getElementById","$Echart","init","renderer","useDirtyRect","window","addEventListener","resize"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FATPkanban\\PassRateCommon.vue"],"sourcesContent":["<template>\r\n  <div id=\"rate-chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport GetOption from \"./Datas/rateCommon\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      option: GetOption(),\r\n      myChart: undefined,\r\n    };\r\n  },\r\n  methods: {\r\n    DataUpdate(iLine) {\r\n      this.myChart.clear();\r\n      this.axios\r\n        .post(\"api/FATPKanban/GetYieldDetail\",iLine)\r\n        .then((res) => {\r\n          const [sr, grp] = this.GetSeries(res.data.data);\r\n          if (sr.length > 0) {\r\n            this.option.series = sr;\r\n            this.option.graphic = grp;\r\n            this.myChart.setOption(this.option);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    GetSeries(data) {\r\n      const rs = [];\r\n      const grp = [];\r\n      const offset =\r\n        data.length > 0 ? Math.floor(this.myChart.getWidth() / data.length) : 1;\r\n      for (let id = 0; id < data.length; id++) {\r\n        const el = data[id];\r\n        grp.push({\r\n          type: \"text\",\r\n          style: {\r\n            text: el.PROCESS_NAME,\r\n            x: id == 0 ? id * offset + 60 : id * offset + 40,\r\n            y: 240,\r\n            fill: \"#fff\",\r\n            font: \"20px verdana\",\r\n          },\r\n        });\r\n\r\n        let datas = [\r\n          {\r\n            value: el.PERCENT,\r\n            name: \"Final Rate\",\r\n            title: {\r\n              show: false,\r\n              offsetCenter: [\"0%\", \"-3%\"],\r\n            },\r\n            detail: {\r\n              valueAnimation: true,\r\n              offsetCenter: [\"0%\", \"-20%\"],\r\n            },\r\n          },\r\n          {\r\n            value: el.FIRST_RATE,\r\n            name: \"First Pass Rate\",\r\n            title: {\r\n              show: false,\r\n              offsetCenter: [\"0%\", \"27%\"],\r\n            },\r\n            detail: {\r\n              valueAnimation: true,\r\n              offsetCenter: [\"0%\", \"8%\"],\r\n            },\r\n          },\r\n        ];\r\n        rs.push({\r\n          type: \"gauge\",\r\n          startAngle: 90,\r\n          endAngle: -270,\r\n          center: [id == 0 ? id * offset + 80 : id * offset + 60, \"50%\"],\r\n          pointer: {\r\n            show: false,\r\n          },\r\n          progress: {\r\n            show: true,\r\n            overlap: false,\r\n            roundCap: false,\r\n            clip: true,\r\n            itemStyle: {\r\n              borderWidth: 1,\r\n              borderColor: \"#464646\",\r\n            },\r\n          },\r\n          color: [\"#04B404\", \"rgb(253, 2, 253)\", \"purple\", \"#cccccc\"],\r\n          axisLine: {\r\n            lineStyle: {\r\n              width: 20,\r\n            },\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n            distance: 0,\r\n            length: 15,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            show: false,\r\n            distance: 20,\r\n          },\r\n          radius: \"50%\",\r\n          data: datas,\r\n          title: {\r\n            fontSize: 8,\r\n          },\r\n          detail: {\r\n            width: 25,\r\n            height: 5,\r\n            fontSize: 10,\r\n            color: \"inherit\",\r\n            borderColor: \"inherit\",\r\n            borderRadius: 20,\r\n            borderWidth: 1,\r\n            formatter: \"{value}%\",\r\n          },\r\n        });\r\n      }\r\n      return [rs, grp];\r\n    },\r\n  },\r\n  mounted() {\r\n    var dom = document.getElementById(\"rate-chart\");\r\n    this.myChart = this.$Echart.init(dom, null, {\r\n      renderer: \"canvas\",\r\n      useDirtyRect: false,\r\n    });\r\n    if (this.option && typeof this.option === \"object\") {\r\n      this.myChart.setOption(this.option);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", this.myChart.resize);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#rate-chart {\r\n  height: 30vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}