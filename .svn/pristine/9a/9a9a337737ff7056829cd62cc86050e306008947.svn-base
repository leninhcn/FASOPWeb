{"ast":null,"code":"import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\ndayjs.extend(relativeTime);\nexport default {\n  name: \"qmsg-1\",\n  props: {\n    Name: {\n      type: String,\n      required: true\n    },\n    MemberID: {\n      type: Number,\n      required: false\n    },\n    Stamp: Date,\n    Sent: Boolean,\n    TextColor: String,\n    BGColor: String,\n    Message: Array\n  },\n  mounted() {\n    this.getMember(this.MemberID);\n  },\n  methods: {\n    GenStampTime(time) {\n      if (!time) {\n        return \"N/A\";\n      }\n      const pastDate = new Date(time);\n      const currentDate = new Date();\n      const timeDiff = currentDate.getTime() - pastDate.getTime();\n      const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\n      if (daysDiff > 2) {\n        return time;\n      }\n      return dayjs(new Date(time)).fromNow();\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    },\n    async getMember(id) {\n      await this.axios.get(`api/chatapp/MemberInfo?emp_id=${id}`).then(res => {\n        this.MemberInfo = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  data() {\n    return {\n      msg_size: 6,\n      MemberInfo: undefined,\n      noIMG: `${this.axios.defaults.baseURL}Images/noImg.png`\n    };\n  }\n};","map":{"version":3,"names":["dayjs","relativeTime","extend","name","props","Name","type","String","required","MemberID","Number","Stamp","Date","Sent","Boolean","TextColor","BGColor","Message","Array","mounted","getMember","methods","GenStampTime","time","pastDate","currentDate","timeDiff","getTime","daysDiff","Math","floor","fromNow","imageFromByte","strBase64","id","axios","get","then","res","MemberInfo","data","catch","err","console","log","msg_size","undefined","noIMG","defaults","baseURL"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\Qmsg.vue"],"sourcesContent":["<template>\r\n  <q-chat-message\r\n    :name=\"Name\"\r\n    :avatar=\"MemberInfo ? imageFromByte(MemberInfo.AVATAR) : noIMG\"\r\n    :stamp=\"GenStampTime(Stamp)\"\r\n    :sent=\"Sent\"\r\n    :text-color=\"TextColor\"\r\n    :bg-color=\"BGColor\"\r\n    :size=\"msg_size\"\r\n  >\r\n    <div v-for=\"(msg, id) in Message\" :key=\"id\">\r\n      {{ msg.text }}\r\n      <img v-if=\"msg.icon\" :src=\"imageFromByte(msg.icon)\" class=\"my-emoticon\" />\r\n    </div>\r\n  </q-chat-message>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\ndayjs.extend(relativeTime);\r\n\r\nexport default {\r\n  name: \"qmsg-1\",\r\n  props: {\r\n    Name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    MemberID: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n    Stamp: Date,\r\n    Sent: Boolean,\r\n    TextColor: String,\r\n    BGColor: String,\r\n    Message: Array,\r\n  },\r\n  mounted() {\r\n    this.getMember(this.MemberID);\r\n  },\r\n  methods: {\r\n    GenStampTime(time) {\r\n      if (!time) {\r\n        return \"N/A\";\r\n      }\r\n      const pastDate = new Date(time);\r\n      const currentDate = new Date();\r\n      const timeDiff = currentDate.getTime() - pastDate.getTime();\r\n      const daysDiff = Math.floor(timeDiff / (1000 * 3600 * 24));\r\n\r\n      if (daysDiff > 2) {\r\n        return time;\r\n      }\r\n      return dayjs(new Date(time)).fromNow();\r\n    },\r\n    imageFromByte(strBase64) {\r\n      return `data:image/jpeg;base64,${strBase64}`;\r\n    },\r\n    async getMember(id) {\r\n      await this.axios\r\n        .get(`api/chatapp/MemberInfo?emp_id=${id}`)\r\n        .then((res) => {\r\n          this.MemberInfo = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      msg_size: 6,\r\n      MemberInfo: undefined,\r\n      noIMG: `${this.axios.defaults.baseURL}Images/noImg.png`,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.my-emoticon {\r\n  vertical-align: middle;\r\n  height: 2em;\r\n  width: 2em;\r\n}\r\n</style>"],"mappings":"AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,YAAW,MAAO,2BAA2B;AACpDD,KAAK,CAACE,MAAM,CAACD,YAAY,CAAC;AAE1B,eAAe;EACbE,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ,CAAC;IACDG,KAAK,EAAEC,IAAI;IACXC,IAAI,EAAEC,OAAO;IACbC,SAAS,EAAER,MAAM;IACjBS,OAAO,EAAET,MAAM;IACfU,OAAO,EAAEC;EACX,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,QAAQ,CAAC;EAC/B,CAAC;EACDY,OAAO,EAAE;IACPC,YAAYA,CAACC,IAAI,EAAE;MACjB,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,KAAK;MACd;MACA,MAAMC,QAAO,GAAI,IAAIZ,IAAI,CAACW,IAAI,CAAC;MAC/B,MAAME,WAAU,GAAI,IAAIb,IAAI,EAAE;MAC9B,MAAMc,QAAO,GAAID,WAAW,CAACE,OAAO,EAAC,GAAIH,QAAQ,CAACG,OAAO,EAAE;MAC3D,MAAMC,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACJ,QAAO,IAAK,IAAG,GAAI,IAAG,GAAI,EAAE,CAAC,CAAC;MAE1D,IAAIE,QAAO,GAAI,CAAC,EAAE;QAChB,OAAOL,IAAI;MACb;MACA,OAAOvB,KAAK,CAAC,IAAIY,IAAI,CAACW,IAAI,CAAC,CAAC,CAACQ,OAAO,EAAE;IACxC,CAAC;IACDC,aAAaA,CAACC,SAAS,EAAE;MACvB,OAAQ,0BAAyBA,SAAU,EAAC;IAC9C,CAAC;IACD,MAAMb,SAASA,CAACc,EAAE,EAAE;MAClB,MAAM,IAAI,CAACC,KAAI,CACZC,GAAG,CAAE,iCAAgCF,EAAG,EAAC,EACzCG,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACC,UAAS,GAAID,GAAG,CAACE,IAAI;MAC5B,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC;EACDF,IAAIA,CAAA,EAAG;IACL,OAAO;MACLK,QAAQ,EAAE,CAAC;MACXN,UAAU,EAAEO,SAAS;MACrBC,KAAK,EAAG,GAAE,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,OAAQ;IACxC,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}