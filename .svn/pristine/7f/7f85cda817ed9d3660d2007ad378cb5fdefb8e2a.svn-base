{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5adc7e86\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"top10-chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FATPkanban\\Top10Issue.vue"],"sourcesContent":["<template>\r\n  <div id=\"top10-chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport GetOption from \"./Datas/top10\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myChart: undefined,\r\n      option: GetOption(),\r\n    };\r\n  },\r\n  methods: {\r\n    DataUpdate(iLine) {\r\n      this.myChart.clear();\r\n      this.axios\r\n        .post(\"api/FATPKanban/GetTOP10Fail\", iLine)\r\n        .then((res) => {\r\n          if (res.data.status == \"OK\") {\r\n            console.log(res.data.data);\r\n            var lgData = [],\r\n              srData = [];\r\n            res.data.data.forEach((el) => {\r\n              lgData.push(el.DEFECT_CODE);\r\n              srData.push({\r\n                value: el.QTY,\r\n                name: el.DEFECT_CODE,\r\n                station: el.PROCESS_NAME,\r\n              });\r\n            });\r\n            this.option.legend.data = lgData;\r\n            this.option.series[0].data = srData;\r\n            this.myChart.setOption(this.option);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    var dom = document.getElementById(\"top10-chart\");\r\n    this.myChart = this.$Echart.init(dom, null, {\r\n      renderer: \"canvas\",\r\n      useDirtyRect: false,\r\n    });\r\n\r\n    if (this.option && typeof this.option === \"object\") {\r\n      this.myChart.setOption(this.option);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", this.myChart.resize);\r\n    // setTimeout(() => {\r\n    //   this.DataUpdate({ PDLINE_ID: \"10003\", DB: \"BU20\" });\r\n    // }, 5000);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#top10-chart {\r\n  height: 30vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":";;;EACOA,EAAE,EAAC;AAAa;;uBAArBC,mBAAA,CAA4B,OAA5BC,UAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}