{"ast":null,"code":"export default {\n  async Login({\n    commit\n  }, credentials) {\n    const response = axios.post('api/FAOnlineSOP/CheckLogin', credentials);\n    return new Promise((resolve, reject) => {\n      response.then(result => {\n        commit('UpdateUser', result.data.data);\n        if (result.data.status === 'OK') {\n          const user = result.data.data;\n          const isLogin = true;\n          sessionStorage.setItem(\"UserName\", user.NAME);\n          sessionStorage.setItem(\"isLogin\", isLogin);\n          resolve(result);\n        } else {\n          sessionStorage.removeItem(\"isLogin\");\n          reject(\"User Name or Password is incorrect\");\n        }\n      }).catch(err => {\n        sessionStorage.removeItem(\"isLogin\");\n        reject(err);\n      });\n    });\n  },\n  async GetSOPStepbyID({\n    commit\n  }, sop_id) {\n    const response = axios.get(`api/FAOnlineSOP/GetSopStep/sop_id/${sop_id}`);\n    return new Promise((resolve, reject) => {\n      response.then(result => {\n        commit('UpdateSOPstep', result.data.data);\n        commit('setSOPStatus', true);\n        if (result.data.status === 'OK') {\n          resolve(result);\n        } else {\n          commit('UpdateSOPstep', undefined);\n          commit('setSOPStatus', false);\n          reject(result.data.data);\n        }\n      }).catch(err => {\n        commit('UpdateSOPstep', undefined);\n        commit('setSOPStatus', false);\n        reject(err);\n      });\n    });\n  },\n  async GetSOPErrorCode({\n    commit\n  }, error_code) {\n    if (!error_code || !error_code.trim()) {\n      alert('Error Code cannot be empty!');\n      return null;\n    }\n    const response = axios.get(`api/FAOnlineSOP/GetAllSop?error_code=${error_code}`);\n    return new Promise((resolve, reject) => {\n      response.then(result => {\n        commit('UpdateSOP', result.data.data);\n        if (result.data.status === 'OK') {\n          resolve(result);\n        } else {\n          reject(result.data.data);\n        }\n      }).catch(err => {\n        //alert(err.response.data);\n        reject(err);\n      });\n    });\n  }\n};","map":{"version":3,"names":["Login","commit","credentials","response","axios","post","Promise","resolve","reject","then","result","data","status","user","isLogin","sessionStorage","setItem","NAME","removeItem","catch","err","GetSOPStepbyID","sop_id","get","undefined","GetSOPErrorCode","error_code","trim","alert"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/src/store/actions.js"],"sourcesContent":["\r\nexport default {\r\n  async Login({ commit }, credentials) {\r\n\r\n    const response = axios.post('api/FAOnlineSOP/CheckLogin', credentials);\r\n    return new Promise((resolve, reject) => {\r\n      response\r\n        .then((result) => {\r\n          commit('UpdateUser', result.data.data);\r\n          if (result.data.status === 'OK') {\r\n            const user = result.data.data;\r\n            const isLogin = true;\r\n            sessionStorage.setItem(\"UserName\", user.NAME);\r\n            sessionStorage.setItem(\"isLogin\", isLogin);\r\n            resolve(result);\r\n          } else {\r\n            sessionStorage.removeItem(\"isLogin\");\r\n            reject(\"User Name or Password is incorrect\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          sessionStorage.removeItem(\"isLogin\");\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n  async GetSOPStepbyID({ commit }, sop_id) {\r\n\r\n    const response = axios.get(`api/FAOnlineSOP/GetSopStep/sop_id/${sop_id}`);\r\n    return new Promise((resolve, reject) => {\r\n      response\r\n        .then((result) => {\r\n          commit('UpdateSOPstep', result.data.data);\r\n          commit('setSOPStatus', true);\r\n          if (result.data.status === 'OK') {\r\n            resolve(result);\r\n          } else {\r\n            commit('UpdateSOPstep', undefined);\r\n            commit('setSOPStatus', false);\r\n            reject(result.data.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          commit('UpdateSOPstep', undefined);\r\n          commit('setSOPStatus', false);\r\n          reject(err);\r\n        });\r\n    });\r\n  }, async GetSOPErrorCode({ commit }, error_code) {\r\n    if (!error_code || !error_code.trim()) {\r\n      alert('Error Code cannot be empty!');\r\n      return null;\r\n    }\r\n    const response = axios.get(`api/FAOnlineSOP/GetAllSop?error_code=${error_code}`);\r\n    return new Promise((resolve, reject) => {\r\n      response\r\n        .then((result) => {\r\n          commit('UpdateSOP', result.data.data);\r\n          if (result.data.status === 'OK') {\r\n            resolve(result);\r\n          } else {\r\n            reject(result.data.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          //alert(err.response.data);\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}