{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from 'vue';\nfunction getVal(val) {\n  return Array.isArray(val) ? val.slice() : [];\n}\nexport const useTableRowExpandProps = {\n  expanded: Array // v-model:expanded\n};\n\nexport const useTableRowExpandEmits = ['update:expanded'];\nexport function useTableRowExpand(props, emit) {\n  const innerExpanded = ref(getVal(props.expanded));\n  watch(() => props.expanded, val => {\n    innerExpanded.value = getVal(val);\n  });\n  function isRowExpanded(key) {\n    return innerExpanded.value.includes(key);\n  }\n  function setExpanded(val) {\n    if (props.expanded !== void 0) {\n      emit('update:expanded', val);\n    } else {\n      innerExpanded.value = val;\n    }\n  }\n  function updateExpanded(key, add) {\n    const target = innerExpanded.value.slice();\n    const index = target.indexOf(key);\n    if (add === true) {\n      if (index === -1) {\n        target.push(key);\n        setExpanded(target);\n      }\n    } else if (index !== -1) {\n      target.splice(index, 1);\n      setExpanded(target);\n    }\n  }\n  return {\n    isRowExpanded,\n    setExpanded,\n    updateExpanded\n  };\n}","map":{"version":3,"names":["ref","watch","getVal","val","Array","isArray","slice","useTableRowExpandProps","expanded","useTableRowExpandEmits","useTableRowExpand","props","emit","innerExpanded","value","isRowExpanded","key","includes","setExpanded","updateExpanded","add","target","index","indexOf","push","splice"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/components/table/table-row-expand.js"],"sourcesContent":["import { ref, watch } from 'vue'\n\nfunction getVal (val) {\n  return Array.isArray(val)\n    ? val.slice()\n    : []\n}\n\nexport const useTableRowExpandProps = {\n  expanded: Array // v-model:expanded\n}\n\nexport const useTableRowExpandEmits = [ 'update:expanded' ]\n\nexport function useTableRowExpand (props, emit) {\n  const innerExpanded = ref(getVal(props.expanded))\n\n  watch(() => props.expanded, val => {\n    innerExpanded.value = getVal(val)\n  })\n\n  function isRowExpanded (key) {\n    return innerExpanded.value.includes(key)\n  }\n\n  function setExpanded (val) {\n    if (props.expanded !== void 0) {\n      emit('update:expanded', val)\n    }\n    else {\n      innerExpanded.value = val\n    }\n  }\n\n  function updateExpanded (key, add) {\n    const target = innerExpanded.value.slice()\n    const index = target.indexOf(key)\n\n    if (add === true) {\n      if (index === -1) {\n        target.push(key)\n        setExpanded(target)\n      }\n    }\n    else if (index !== -1) {\n      target.splice(index, 1)\n      setExpanded(target)\n    }\n  }\n\n  return {\n    isRowExpanded,\n    setExpanded,\n    updateExpanded\n  }\n}\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAEhC,SAASC,MAAMA,CAAEC,GAAG,EAAE;EACpB,OAAOC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,GACrBA,GAAG,CAACG,KAAK,EAAE,GACX,EAAE;AACR;AAEA,OAAO,MAAMC,sBAAsB,GAAG;EACpCC,QAAQ,EAAEJ,KAAK,CAAC;AAClB,CAAC;;AAED,OAAO,MAAMK,sBAAsB,GAAG,CAAE,iBAAiB,CAAE;AAE3D,OAAO,SAASC,iBAAiBA,CAAEC,KAAK,EAAEC,IAAI,EAAE;EAC9C,MAAMC,aAAa,GAAGb,GAAG,CAACE,MAAM,CAACS,KAAK,CAACH,QAAQ,CAAC,CAAC;EAEjDP,KAAK,CAAC,MAAMU,KAAK,CAACH,QAAQ,EAAEL,GAAG,IAAI;IACjCU,aAAa,CAACC,KAAK,GAAGZ,MAAM,CAACC,GAAG,CAAC;EACnC,CAAC,CAAC;EAEF,SAASY,aAAaA,CAAEC,GAAG,EAAE;IAC3B,OAAOH,aAAa,CAACC,KAAK,CAACG,QAAQ,CAACD,GAAG,CAAC;EAC1C;EAEA,SAASE,WAAWA,CAAEf,GAAG,EAAE;IACzB,IAAIQ,KAAK,CAACH,QAAQ,KAAK,KAAK,CAAC,EAAE;MAC7BI,IAAI,CAAC,iBAAiB,EAAET,GAAG,CAAC;IAC9B,CAAC,MACI;MACHU,aAAa,CAACC,KAAK,GAAGX,GAAG;IAC3B;EACF;EAEA,SAASgB,cAAcA,CAAEH,GAAG,EAAEI,GAAG,EAAE;IACjC,MAAMC,MAAM,GAAGR,aAAa,CAACC,KAAK,CAACR,KAAK,EAAE;IAC1C,MAAMgB,KAAK,GAAGD,MAAM,CAACE,OAAO,CAACP,GAAG,CAAC;IAEjC,IAAII,GAAG,KAAK,IAAI,EAAE;MAChB,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBD,MAAM,CAACG,IAAI,CAACR,GAAG,CAAC;QAChBE,WAAW,CAACG,MAAM,CAAC;MACrB;IACF,CAAC,MACI,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MACrBD,MAAM,CAACI,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MACvBJ,WAAW,CAACG,MAAM,CAAC;IACrB;EACF;EAEA,OAAO;IACLN,aAAa;IACbG,WAAW;IACXC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}