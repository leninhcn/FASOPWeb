{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"img\", {\n    src: $data.mergedImageUrl,\n    alt: \"Merged Image\"\n  }, null, 8 /* PROPS */, _hoisted_1)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","src","$data","mergedImageUrl","alt"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\ImageMerging.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <img :src=\"mergedImageUrl\" alt=\"Merged Image\" />\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { createCanvas, loadImage } from \"canvas\";\r\n\r\nexport default {\r\n  name: \"ImageMerging\",\r\n  data() {\r\n    return {\r\n      mergedImageUrl: \"#\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.axios\r\n      .get(`api/chatapp/GetEmpAllGroup?emp_id=10003367`)\r\n      .then(async (res) => {\r\n        const img1 = res.data[0].INFO.EMP_AVATAR[0].AVATAR;\r\n        const img2 = res.data[0].INFO.EMP_AVATAR[1].AVATAR;\r\n        const newimg = await this.ImageMerging(img1, img2);\r\n        console.log(newimg);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  methods: {\r\n    async ImageMerging(img1Data, img2Data) {\r\n      const canvasWidth = 900;\r\n      const canvasHeight = 300;\r\n\r\n      // Tạo đối tượng canvas với kích thước tương ứng\r\n      const canvas = createCanvas(canvasWidth, canvasHeight);\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      const img1 = await loadImage(`data:image/png;base64,${img1Data}`);\r\n\r\n      const img2 = await loadImage(`data:image/png;base64,${img2Data}`);\r\n\r\n      // Đợi cho tất cả các ảnh được tải xong\r\n      Promise.all([\r\n        new Promise((resolve) => img1.addEventListener(\"load\", resolve)),\r\n        new Promise((resolve) => img2.addEventListener(\"load\", resolve)),\r\n      ]).then(() => {\r\n        // Vẽ ảnh thứ nhất từ điểm (0, 0)\r\n        ctx.drawImage(img1, 0, 0);\r\n\r\n        // Vẽ ảnh thứ hai từ điểm (300, 0)\r\n        ctx.drawImage(img2, 300, 0);\r\n        console.log(canvas);\r\n        return canvas.toDataURL(\"image/png\"); //canvas.toBuffer(\"image/png\");\r\n      }).catch((err)=>{\r\n        console.log(err);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n  "],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,mBAAA,CAAgD;IAA1CC,GAAG,EAAEC,KAAA,CAAAC,cAAc;IAAEC,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}