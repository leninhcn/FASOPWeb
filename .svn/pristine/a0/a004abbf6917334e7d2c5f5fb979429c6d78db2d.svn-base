{"ast":null,"code":"import { computed, getCurrentInstance } from 'vue';\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js';\nimport usePanel, { usePanelProps, usePanelEmits } from '../../composables/private/use-panel.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { hDir } from '../../utils/private/render.js';\nexport default createComponent({\n  name: 'QTabPanels',\n  props: {\n    ...usePanelProps,\n    ...useDarkProps\n  },\n  emits: usePanelEmits,\n  setup(props, {\n    slots\n  }) {\n    const vm = getCurrentInstance();\n    const isDark = useDark(props, vm.proxy.$q);\n    const {\n      updatePanelsList,\n      getPanelContent,\n      panelDirectives\n    } = usePanel();\n    const classes = computed(() => 'q-tab-panels q-panel-parent' + (isDark.value === true ? ' q-tab-panels--dark q-dark' : ''));\n    return () => {\n      updatePanelsList(slots);\n      return hDir('div', {\n        class: classes.value\n      }, getPanelContent(), 'pan', props.swipeable, () => panelDirectives.value);\n    };\n  }\n});","map":{"version":3,"names":["computed","getCurrentInstance","useDark","useDarkProps","usePanel","usePanelProps","usePanelEmits","createComponent","hDir","name","props","emits","setup","slots","vm","isDark","proxy","$q","updatePanelsList","getPanelContent","panelDirectives","classes","value","class","swipeable"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/components/tab-panels/QTabPanels.js"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue'\n\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport usePanel, { usePanelProps, usePanelEmits } from '../../composables/private/use-panel.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hDir } from '../../utils/private/render.js'\n\nexport default createComponent({\n  name: 'QTabPanels',\n\n  props: {\n    ...usePanelProps,\n    ...useDarkProps\n  },\n\n  emits: usePanelEmits,\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance()\n    const isDark = useDark(props, vm.proxy.$q)\n\n    const { updatePanelsList, getPanelContent, panelDirectives } = usePanel()\n\n    const classes = computed(() =>\n      'q-tab-panels q-panel-parent'\n      + (isDark.value === true ? ' q-tab-panels--dark q-dark' : '')\n    )\n\n    return () => {\n      updatePanelsList(slots)\n\n      return hDir(\n        'div',\n        { class: classes.value },\n        getPanelContent(),\n        'pan',\n        props.swipeable,\n        () => panelDirectives.value\n      )\n    }\n  }\n})\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,kBAAkB,QAAQ,KAAK;AAElD,OAAOC,OAAO,IAAIC,YAAY,QAAQ,uCAAuC;AAC7E,OAAOC,QAAQ,IAAIC,aAAa,EAAEC,aAAa,QAAQ,wCAAwC;AAE/F,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,IAAI,QAAQ,+BAA+B;AAEpD,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAE;IACL,GAAGL,aAAa;IAChB,GAAGF;EACL,CAAC;EAEDQ,KAAK,EAAEL,aAAa;EAEpBM,KAAKA,CAAEF,KAAK,EAAE;IAAEG;EAAM,CAAC,EAAE;IACvB,MAAMC,EAAE,GAAGb,kBAAkB,EAAE;IAC/B,MAAMc,MAAM,GAAGb,OAAO,CAACQ,KAAK,EAAEI,EAAE,CAACE,KAAK,CAACC,EAAE,CAAC;IAE1C,MAAM;MAAEC,gBAAgB;MAAEC,eAAe;MAAEC;IAAgB,CAAC,GAAGhB,QAAQ,EAAE;IAEzE,MAAMiB,OAAO,GAAGrB,QAAQ,CAAC,MACvB,6BAA6B,IAC1Be,MAAM,CAACO,KAAK,KAAK,IAAI,GAAG,4BAA4B,GAAG,EAAE,CAAC,CAC9D;IAED,OAAO,MAAM;MACXJ,gBAAgB,CAACL,KAAK,CAAC;MAEvB,OAAOL,IAAI,CACT,KAAK,EACL;QAAEe,KAAK,EAAEF,OAAO,CAACC;MAAM,CAAC,EACxBH,eAAe,EAAE,EACjB,KAAK,EACLT,KAAK,CAACc,SAAS,EACf,MAAMJ,eAAe,CAACE,KAAK,CAC5B;IACH,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}