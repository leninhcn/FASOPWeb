{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.FriendList, (emp, idx) => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: idx\n    }, [_createElementVNode(\"li\", null, _toDisplayString(emp.EMP_NAME), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <q-list v-for=\\\"(emp, idx) in FriendList\\\" :key=\\\"idx\\\">\\r\\n      <q-item clickable v-ripple>\\r\\n        <q-item-section avatar>\\r\\n          <q-avatar>\\r\\n            <img src=\\\"#\\\" alt=\\\"\\\" />\\r\\n          </q-avatar>\\r\\n        </q-item-section>\\r\\n        <q-item-section>\\r\\n          {{ emp.EMP_NAME }}\\r\\n        </q-item-section>\\r\\n      </q-item>\\r\\n    </q-list> \")]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","FriendList","emp","idx","key","_createElementVNode","_toDisplayString","EMP_NAME","_createCommentVNode"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\FriendList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ul v-for=\"(emp, idx) in FriendList\" :key=\"idx\">\r\n        <li>{{ emp.EMP_NAME }}</li>\r\n    </ul>\r\n    <!-- <q-list v-for=\"(emp, idx) in FriendList\" :key=\"idx\">\r\n      <q-item clickable v-ripple>\r\n        <q-item-section avatar>\r\n          <q-avatar>\r\n            <img src=\"#\" alt=\"\" />\r\n          </q-avatar>\r\n        </q-item-section>\r\n        <q-item-section>\r\n          {{ emp.EMP_NAME }}\r\n        </q-item-section>\r\n      </q-item>\r\n    </q-list> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, ref } from \"vue\";\r\nexport default {\r\n  setup() {\r\n    onMounted(() => {\r\n      GetAllFriends();\r\n    });\r\n    let FriendList = ref(null);\r\n    const axios = inject(\"axios\");\r\n    const message = inject(\"message\");\r\n    function GetAllFriends() {\r\n      axios\r\n        .get(`api/chatapp/EmpSearch?emp=all&avatar=True`)\r\n        .then((res) => {\r\n          FriendList = res.data;\r\n          console.log(FriendList.value[0]);\r\n        })\r\n        .catch((err) => {\r\n          message({\r\n            type: \"error\",\r\n            message: err.response.data,\r\n          });\r\n        });\r\n    }\r\n    return { FriendList };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAgBM,e,kBAfJA,mBAAA,CAEKC,SAAA,QAAAC,WAAA,CAFoBC,MAAA,CAAAC,UAAU,GAAvBC,GAAG,EAAEC,GAAG;yBAApBN,mBAAA,CAEK;MAFiCO,GAAG,EAAED;IAAG,IAC1CE,mBAAA,CAA2B,YAAAC,gBAAA,CAApBJ,GAAG,CAACK,QAAQ,iB;kCAEvBC,mBAAA,2XAWa,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}