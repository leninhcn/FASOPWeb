{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { io } from \"socket.io-client\";\nimport { mapGetters } from \"vuex\";\nimport Qmsg from \"./Qmsg.vue\";\nimport ctlBar from \"./MsgSender.vue\";\nexport default {\n  name: \"HistoryBox\",\n  components: {\n    Qmsg,\n    ctlBar\n  },\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  props: {},\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  },\n  mounted() {\n    this.RefreshData();\n    // this.InitSocket();\n  },\n\n  data() {\n    return {\n      url: \"http://localhost:3001\",\n      socket: undefined,\n      connected: false,\n      GroupID: 0,\n      testIMG: \"\",\n      MSGTextColor: {\n        Sender: \"indigo-14\",\n        Receiver: \"blue-grey-3\"\n      },\n      members: undefined,\n      ChatHis: []\n    };\n  },\n  methods: {\n    InitSocket() {\n      this.socket = io(this.url);\n      this.socket.on(\"connect\", () => {\n        this.connected = true;\n      });\n      this.socket.on(\"disconnect\", () => {\n        this.connected = false;\n      });\n      this.socket.on(\"msgFromServer\", data => {\n        console.log(data);\n        this.messages.push(`${data.sender}: ${data.content}`);\n      });\n    },\n    sendMessage() {\n      const sent_msg = this.message;\n      this.message = \"\";\n      console.log(sent_msg);\n      setTimeout(() => {\n        this.socket.emit(\"sendMsg\", {\n          type: \"ownMsg\",\n          msg: {\n            content: sent_msg,\n            type: \"text\",\n            sender: this.GetUser.EMP_ID,\n            receiver: 0,\n            group_id: 2,\n            media_id: 0\n          }\n        });\n        this.$emit(\"MessageSent\", sent_msg);\n      }, 100);\n    },\n    LocalSentMSG(msg) {\n      const localMSG = {\n        Sender: this.GetUser.Name,\n        ID: this.GetUser.EMP_ID,\n        message: [{\n          text: \"testttttt\"\n        }]\n      };\n      console.log(localMSG);\n      this.ChatHis.push(localMSG, msg);\n    },\n    RefreshData(group_id) {\n      if (group_id > 0 && group_id != this.GroupID) {\n        this.GroupID = group_id;\n        this.GetMemberInfor();\n        this.GetChatHistory();\n      }\n    },\n    ShowAvatar(member) {\n      if (this.members) this.members.forEach(item => {\n        if (item.EMP_ID == member) {\n          return {\n            img: this.imageFromByte(item.AVATAR)\n          };\n        }\n      });\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    },\n    async GetMemberInfor() {\n      await this.axios.get(`api/chatapp/GetGroupMemberInfo?groupID=${this.GroupID}`).then(res => {\n        this.members = res.data;\n        this.testIMG = this.members[0].AVATAR;\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    },\n    async GetChatHistory() {\n      await this.axios.get(`api/chatapp/GetHistory?groupID=${this.GroupID}`).then(res => {\n        var sentEMP = res.data[0].SENDER_ID;\n        var msg = undefined;\n        res.data.forEach(item => {\n          if (!msg) {\n            msg = {\n              Sender: item.SENDER,\n              ID: item.SENDER_ID,\n              message: [{\n                text: item.MES_CONTENT\n              }]\n            };\n          } else {\n            if (sentEMP == item.SENDER_ID) {\n              msg.message.push({\n                text: item.MES_CONTENT\n              });\n            } else {\n              this.ChatHis.push(msg);\n              msg = {\n                Sender: item.SENDER,\n                ID: item.SENDER_ID,\n                message: [{\n                  text: item.MES_CONTENT\n                }]\n              };\n            }\n          }\n          sentEMP = item.SENDER_ID;\n        });\n        this.ChatHis.push(msg);\n        setTimeout(() => {\n          this.$refs.hisScroll.setScrollPercentage(\"vertical\", 1, 300);\n        }, 100);\n      }).catch(err => {\n        this.ChatHis = [];\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["io","mapGetters","Qmsg","ctlBar","name","components","computed","GetUser","props","beforeUnmount","socket","disconnect","mounted","RefreshData","data","url","undefined","connected","GroupID","testIMG","MSGTextColor","Sender","Receiver","members","ChatHis","methods","InitSocket","on","console","log","messages","push","sender","content","sendMessage","sent_msg","message","setTimeout","emit","type","msg","EMP_ID","receiver","group_id","media_id","$emit","LocalSentMSG","localMSG","Name","ID","text","GetMemberInfor","GetChatHistory","ShowAvatar","member","forEach","item","img","imageFromByte","AVATAR","strBase64","axios","get","then","res","catch","err","response","sentEMP","SENDER_ID","SENDER","MES_CONTENT","$refs","hisScroll","setScrollPercentage"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\HistoryBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <q-scroll-area\r\n      dark\r\n      class=\"text-white rounded-borders\"\r\n      style=\"width: 100%; height: 370px\"\r\n      ref=\"hisScroll\"\r\n    >\r\n      <div class=\"q-pa-md row justify-center\" style=\"padding: 0 !important\">\r\n        <div style=\"width: 100%\">\r\n          <Qmsg\r\n            v-for=\"(msg, id) in ChatHis\"\r\n            :key=\"id\"\r\n            :Name=\"msg.Sender\"\r\n            :MemberID=\"msg.ID\"\r\n            :BGColor=\"\r\n              msg.ID == GetUser.EMP_ID\r\n                ? MSGTextColor.Sender\r\n                : MSGTextColor.Receiver\r\n            \"\r\n            :Message=\"msg.message\"\r\n            :Sent=\"msg.ID == GetUser.EMP_ID\"\r\n            Stamp=\"7 minutes ago\"\r\n            TextColor=\"white\"\r\n          ></Qmsg>\r\n        </div>\r\n      </div>\r\n    </q-scroll-area>\r\n    <ctlBar @MessageSent=\"LocalSentMSG(msg)\"></ctlBar>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { io } from \"socket.io-client\";\r\nimport { mapGetters } from \"vuex\";\r\nimport Qmsg from \"./Qmsg.vue\";\r\nimport ctlBar from \"./MsgSender.vue\";\r\nexport default {\r\n  name: \"HistoryBox\",\r\n  components: {\r\n    Qmsg,\r\n    ctlBar,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      GetUser: \"getUser\",\r\n    }),\r\n  },\r\n  props: {},\r\n  beforeUnmount() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.RefreshData();\r\n   // this.InitSocket();\r\n  },\r\n  data() {\r\n    return {\r\n      url: \"http://localhost:3001\",\r\n      socket: undefined,\r\n      connected: false,\r\n      GroupID: 0,\r\n      testIMG: \"\",\r\n      MSGTextColor: { Sender: \"indigo-14\", Receiver: \"blue-grey-3\" },\r\n      members: undefined,\r\n      ChatHis: [],\r\n    };\r\n  },\r\n  methods: {\r\n    InitSocket() {\r\n      this.socket = io(this.url);\r\n      this.socket.on(\"connect\", () => {\r\n        this.connected = true;\r\n      });\r\n\r\n      this.socket.on(\"disconnect\", () => {\r\n        this.connected = false;\r\n      });\r\n\r\n      this.socket.on(\"msgFromServer\", (data) => {\r\n        console.log(data);\r\n        this.messages.push(`${data.sender}: ${data.content}`);\r\n      });\r\n    },\r\n    sendMessage() {\r\n      const sent_msg = this.message;\r\n      this.message = \"\";\r\n      console.log(sent_msg);\r\n      setTimeout(() => {\r\n        this.socket.emit(\"sendMsg\", {\r\n          type: \"ownMsg\",\r\n          msg: {\r\n            content: sent_msg,\r\n            type: \"text\",\r\n            sender: this.GetUser.EMP_ID,\r\n            receiver: 0,\r\n            group_id: 2,\r\n            media_id: 0,\r\n          },\r\n        });\r\n        this.$emit(\"MessageSent\", sent_msg);\r\n      }, 100);\r\n    },\r\n    LocalSentMSG(msg) {\r\n      const localMSG = {\r\n        Sender: this.GetUser.Name,\r\n        ID: this.GetUser.EMP_ID,\r\n        message: [{ text: \"testttttt\" }],\r\n      };\r\n      console.log(localMSG);\r\n      this.ChatHis.push(localMSG, msg);\r\n    },\r\n    RefreshData(group_id) {\r\n      if (group_id > 0 && group_id != this.GroupID) {\r\n        this.GroupID = group_id;\r\n        this.GetMemberInfor();\r\n        this.GetChatHistory();\r\n      }\r\n    },\r\n    ShowAvatar(member) {\r\n      if (this.members)\r\n        this.members.forEach((item) => {\r\n          if (item.EMP_ID == member) {\r\n            return { img: this.imageFromByte(item.AVATAR) };\r\n          }\r\n        });\r\n    },\r\n    imageFromByte(strBase64) {\r\n      return `data:image/jpeg;base64,${strBase64}`;\r\n    },\r\n    async GetMemberInfor() {\r\n      await this.axios\r\n        .get(`api/chatapp/GetGroupMemberInfo?groupID=${this.GroupID}`)\r\n        .then((res) => {\r\n          this.members = res.data;\r\n          this.testIMG = this.members[0].AVATAR;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        });\r\n    },\r\n    async GetChatHistory() {\r\n      await this.axios\r\n        .get(`api/chatapp/GetHistory?groupID=${this.GroupID}`)\r\n        .then((res) => {\r\n          var sentEMP = res.data[0].SENDER_ID;\r\n          var msg = undefined;\r\n          res.data.forEach((item) => {\r\n            if (!msg) {\r\n              msg = {\r\n                Sender: item.SENDER,\r\n                ID: item.SENDER_ID,\r\n                message: [{ text: item.MES_CONTENT }],\r\n              };\r\n            } else {\r\n              if (sentEMP == item.SENDER_ID) {\r\n                msg.message.push({ text: item.MES_CONTENT });\r\n              } else {\r\n                this.ChatHis.push(msg);\r\n                msg = {\r\n                  Sender: item.SENDER,\r\n                  ID: item.SENDER_ID,\r\n                  message: [{ text: item.MES_CONTENT }],\r\n                };\r\n              }\r\n            }\r\n            sentEMP = item.SENDER_ID;\r\n          });\r\n          this.ChatHis.push(msg);\r\n          setTimeout(() => {\r\n            this.$refs.hisScroll.setScrollPercentage(\"vertical\", 1, 300);\r\n          }, 100);\r\n        })\r\n        .catch((err) => {\r\n          this.ChatHis = [];\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style lang=\"scss\" scoped>\r\n.hello {\r\n  margin: {\r\n    left: 5px;\r\n    right: 5px;\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}