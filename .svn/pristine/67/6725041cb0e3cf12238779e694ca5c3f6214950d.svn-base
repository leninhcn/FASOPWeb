{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nimport { Files, Tickets, Collection, Postcard, SetUp, DocumentChecked, DataBoard, DataAnalysis } from '@element-plus/icons-vue';\nexport default {\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  mounted() {\n    if (this.GetUser) this.UserName = this.GetUser.Name;\n    this.getMenu();\n  },\n  name: 'menu-bar',\n  data() {\n    return {\n      mColap: true,\n      UserName: '',\n      Menu: [],\n      icons: [Files, Tickets, Collection, Postcard, SetUp, DocumentChecked, DataBoard, DataAnalysis]\n    };\n  },\n  methods: {\n    ...mapActions(['Logout']),\n    logout: function () {\n      this.Logout();\n    },\n    toggleCollapse: function () {\n      this.mColap = !this.mColap;\n    },\n    async getMenu() {\n      await this.axios.get('api/FAOnlineSOP/GetMainMenu').then(res => {\n        this.Menu = res.data;\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    },\n    GetIcon(id) {\n      if (id <= this.icons.length - 1) return this.icons[id];else return this.icons[this.icons.length - 1];\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","Files","Tickets","Collection","Postcard","SetUp","DocumentChecked","DataBoard","DataAnalysis","computed","GetUser","mounted","UserName","Name","getMenu","name","data","mColap","Menu","icons","methods","logout","Logout","toggleCollapse","axios","get","then","res","catch","err","console","log","response","GetIcon","id","length"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\Menu.vue"],"sourcesContent":["<template>\r\n    <div class=\"home_container\">\r\n        <el-container class=\"home_container\">\r\n            <el-header>\r\n                <div>\r\n                    <img src=\"../assets/logo.png\" style=\"cursor: pointer;\" alt=\"\" @click=\"$router.push('/wellcome')\"/>\r\n                    <span @click=\"$router.push('/wellcome')\" style=\"cursor: pointer;\">CPBG MES-VN</span>\r\n                </div>\r\n                <div>\r\n                    <nav>\r\n                        <el-dropdown>\r\n                            <span style=\"font-size: 1.3em; margin-top: 5px; cursor: pointer;\" class=\"el-dropdown-link\">\r\n                                {{ UserName }}\r\n                                <ArrowDown style=\"width: 1em; height: 1em; margin-bottom: -3px;\" />\r\n                            </span>\r\n                            <template #dropdown>\r\n                                <el-dropdown-menu>\r\n                                    <el-dropdown-item>\r\n                                        <router-link to=\"#\"><i class=\"icofont-ui-password\"></i> Change\r\n                                            Password</router-link>\r\n                                    </el-dropdown-item>\r\n                                    <el-dropdown-item>\r\n                                        <a href=\"#\" @click.prevent=\"logout\"><i class=\"icofont-logout\"></i> Logout</a>\r\n                                    </el-dropdown-item>\r\n                                </el-dropdown-menu>\r\n                            </template>\r\n                        </el-dropdown>\r\n                    </nav>\r\n                </div>\r\n            </el-header>\r\n            <el-container>\r\n                <el-aside :width=\"!mColap ? '64px' : '200px'\">\r\n                    <div class=\"toggle-button\" @click=\"toggleCollapse\" id=\"toggle-button\">\r\n                        <Expand v-if=!mColap style=\"width: 2em; height: 2em; \" />\r\n                        <Fold v-if=mColap style=\"width: 2em; height: 2em; \" />\r\n                    </div>\r\n                    <el-menu class=\"elmenu\" background-color=\"#333744\" text-color=\"#fff\" active-text-color=\"#409eff\"\r\n                        :unique-opened=\"true\" :collapse=!mColap :collapse-transition=\"false\" :router=\"true\"\r\n                        :default-active=\"activePath\">\r\n                        <el-sub-menu v-for=\"(item, id) in Menu.filter(item => item.TYPE === 'SUB_MENU')\" :key=\"id\"\r\n                            :index=\"id\" :disabled=\"!item.DISPLAY_STATUS.includes('ENABLE')\">\r\n                            <template #title>\r\n                                <el-icon>\r\n                                    <Folder />\r\n                                </el-icon>\r\n                                <span>{{ item.NAME }}</span>\r\n                            </template>\r\n                            <el-menu-item-group v-for=\"(itg, idx) in item.CHILDREN\" :key=\"idx\" :title=\"itg.NAME\">\r\n                                <el-menu-item v-for=\"(it, idxt) in itg.CHILDREN\" :key=\"idxt\" :index=\"it.LINK_TO\"\r\n                                    :disabled=\"!it.DISPLAY_STATUS.includes('ENABLE') || GetUser.AdminRole < it.ROLE_REQUIRE\">\r\n                                    <el-icon>\r\n                                        <component :is=\"GetIcon(idxt)\" />\r\n                                    </el-icon>\r\n                                    {{ it.NAME }}\r\n                                </el-menu-item>\r\n                            </el-menu-item-group>\r\n                        </el-sub-menu>\r\n                        <el-menu-item v-for=\"(item, id) in Menu.filter(item => item.TYPE === 'MENU_ITEM')\" :key=\"id\"\r\n                            :index=\"item.LINK_TO\" :disabled=\"!item.DISPLAY_STATUS.includes('ENABLE')\">\r\n                            <i class=\"icofont-code\" style=\"margin-left: 3px; margin-right: 6px;\"></i>\r\n                            <span>{{ item.NAME }}</span>\r\n                        </el-menu-item>\r\n                        <el-sub-menu :disabled=\"GetUser.AdminRole <= 8\" index=\"2\">\r\n                            <template #title>\r\n                                <i style=\"margin-left: 3px; margin-right: 6px;\" class=\"icofont-ui-settings\"></i>\r\n                                <span>Maintenance Area</span>\r\n                            </template>\r\n                            <el-menu-item-group title=\"Menu\">\r\n                                <el-menu-item index=\"/menumana\"><el-icon>\r\n                                        <Menu />\r\n                                    </el-icon> New Menu</el-menu-item>\r\n                                <el-menu-item index=\"#\"><el-icon>\r\n                                        <Edit />\r\n                                    </el-icon> Menu Edit</el-menu-item>\r\n                            </el-menu-item-group>\r\n                        </el-sub-menu>\r\n                        <el-menu-item index=\"/about\">\r\n                            <i class=\"icofont-code\" style=\"margin-left: 3px; margin-right: 6px;\"></i>\r\n                            <span>Development Team</span>\r\n                        </el-menu-item>\r\n                    </el-menu>\r\n                </el-aside>\r\n                <el-main>\r\n                    <router-view></router-view>\r\n                </el-main>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport {\r\n    mapGetters, mapActions\r\n} from \"vuex\";\r\nimport { Files, Tickets, Collection, Postcard, SetUp, DocumentChecked, DataBoard, DataAnalysis } from '@element-plus/icons-vue'\r\nexport default {\r\n    computed: {\r\n        ...mapGetters({\r\n            GetUser: \"getUser\"\r\n        }),\r\n    },\r\n    mounted() {\r\n        if (this.GetUser) this.UserName = this.GetUser.Name;\r\n        this.getMenu();\r\n    },\r\n    name: 'menu-bar',\r\n    data() {\r\n        return {\r\n            mColap: true,\r\n            UserName: '',\r\n            Menu: [\r\n\r\n            ],\r\n            icons: [Files, Tickets, Collection, Postcard, SetUp, DocumentChecked, DataBoard, DataAnalysis]\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(['Logout']),\r\n        logout: function () {\r\n            this.Logout();\r\n        },\r\n        toggleCollapse: function () {\r\n            this.mColap = !this.mColap;\r\n        },\r\n        async getMenu() {\r\n            await this.axios.get('api/FAOnlineSOP/GetMainMenu').then((res) => {\r\n                this.Menu = res.data;\r\n            }).catch((err) => {\r\n                console.log(err.response.data);\r\n            });\r\n        },\r\n        GetIcon(id) {\r\n            if (id <= this.icons.length - 1) return this.icons[id]; else return this.icons[this.icons.length - 1];\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n.elmenu {\r\n    i {\r\n        margin-right: 3px;\r\n        font-size: 1.3em;\r\n        color: rgb(255, 252, 57);\r\n    }\r\n}\r\n\r\ni:active {\r\n    color: red;\r\n}\r\n\r\n.el-header {\r\n    background-color: #37314d;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-left: 0%;\r\n    align-items: center;\r\n    color: #fff;\r\n    font-size: 20px;\r\n}\r\n\r\n.el-header>div {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.el-header>div>span {\r\n    margin-left: 15px;\r\n}\r\n\r\n.drawer__footer {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.el-header>div>img {\r\n    height: 60px;\r\n    background-color: #eee\r\n}\r\n\r\n.el-aside {\r\n    background-color: #333744;\r\n}\r\n\r\n.el-aside>.el-menu {\r\n    border-right: none;\r\n}\r\n\r\n.el-main {\r\n    background-color: #1f144b;\r\n}\r\n\r\n.home_container {\r\n    height: 100%;\r\n}\r\n\r\n.el-submenu {\r\n    text-align: left;\r\n}\r\n\r\n.iconfont {\r\n    margin-right: 10px;\r\n}\r\n\r\n.toggle-button {\r\n    background-color: #4a5064;\r\n    font-size: 10px;\r\n    line-height: 20px;\r\n    color: #fff;\r\n    text-align: center;\r\n    letter-spacing: 0.2em;\r\n    cursor: pointer;\r\n    width: auto;\r\n}\r\n\r\n.el-button {\r\n    margin-left: 15px;\r\n}\r\n\r\n.drawer {\r\n    padding-top: 10px;\r\n\r\n    span {\r\n        text-align: center;\r\n    }\r\n}\r\n\r\n.drawer_content {\r\n    padding: 20px;\r\n}\r\n\r\n.el-col {\r\n    padding: 10px;\r\n}\r\n\r\n.el-icon-position {\r\n    color: #eee;\r\n    size: 50px;\r\n}\r\n\r\n.drop_item {\r\n    font-size: 20px;\r\n}\r\n\r\n.el-icon-position {\r\n    cursor: pointer;\r\n}\r\n</style>\r\n  "],"mappings":"AA2FA,SACIA,UAAU,EAAEC,UAAS,QAClB,MAAM;AACb,SAASC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,eAAe,EAAEC,SAAS,EAAEC,YAAW,QAAS,yBAAwB;AAC9H,eAAe;EACXC,QAAQ,EAAE;IACN,GAAGV,UAAU,CAAC;MACVW,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACD,OAAO,EAAE,IAAI,CAACE,QAAO,GAAI,IAAI,CAACF,OAAO,CAACG,IAAI;IACnD,IAAI,CAACC,OAAO,EAAE;EAClB,CAAC;EACDC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI;MACZL,QAAQ,EAAE,EAAE;MACZM,IAAI,EAAE,EAEL;MACDC,KAAK,EAAE,CAAClB,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,eAAe,EAAEC,SAAS,EAAEC,YAAY;IACjG;EACJ,CAAC;EACDY,OAAO,EAAE;IACL,GAAGpB,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;IACzBqB,MAAM,EAAE,SAAAA,CAAA,EAAY;MAChB,IAAI,CAACC,MAAM,EAAE;IACjB,CAAC;IACDC,cAAc,EAAE,SAAAA,CAAA,EAAY;MACxB,IAAI,CAACN,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;IAC9B,CAAC;IACD,MAAMH,OAAOA,CAAA,EAAG;MACZ,MAAM,IAAI,CAACU,KAAK,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QAC9D,IAAI,CAACT,IAAG,GAAIS,GAAG,CAACX,IAAI;MACxB,CAAC,CAAC,CAACY,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,QAAQ,CAAChB,IAAI,CAAC;MAClC,CAAC,CAAC;IACN,CAAC;IACDiB,OAAOA,CAACC,EAAE,EAAE;MACR,IAAIA,EAAC,IAAK,IAAI,CAACf,KAAK,CAACgB,MAAK,GAAI,CAAC,EAAE,OAAO,IAAI,CAAChB,KAAK,CAACe,EAAE,CAAC,MAAO,OAAO,IAAI,CAACf,KAAK,CAAC,IAAI,CAACA,KAAK,CAACgB,MAAK,GAAI,CAAC,CAAC;IACzG;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}