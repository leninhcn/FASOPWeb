{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e2d71c7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"mainPlayer\"\n};\nconst _hoisted_3 = [\"max\"];\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div data-v-5e2d71c7><div class=\\\"btnGroupControl\\\" data-v-5e2d71c7><button class=\\\"btnPrev\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-backward-fast\\\" data-v-5e2d71c7></i></button><button class=\\\"btnPlay\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-play\\\" data-v-5e2d71c7></i></button><button class=\\\"btnNext\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-forward-fast\\\" data-v-5e2d71c7></i></button></div><div class=\\\"showTime\\\" data-v-5e2d71c7><p style=\\\"display:inline;\\\" data-v-5e2d71c7>00:00:00</p><p style=\\\"display:inline;\\\" data-v-5e2d71c7>/ 01:00:00</p></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($props.title), 1 /* TEXT */), _createElementVNode(\"audio\", {\n    ref: \"player\",\n    onTimeupdate: _cache[0] || (_cache[0] = (...args) => $options.ShowCurrentTime && $options.ShowCurrentTime(...args)),\n    preload: \"none\"\n  }, [_createElementVNode(\"source\", {\n    src: $data.playing_src,\n    type: \"audio/mpeg\"\n  }, null, 8 /* PROPS */, _hoisted_1)], 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.play && $options.play(...args))\n  }, \"Choi\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.pause && $options.pause(...args))\n  }, \"Nghi\"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    onMousedown: _cache[3] || (_cache[3] = (...args) => _ctx.pg_mouseDown && _ctx.pg_mouseDown(...args)),\n    onMouseup: _cache[4] || (_cache[4] = (...args) => _ctx.pg_mouseUp && _ctx.pg_mouseUp(...args)),\n    onMousemove: _cache[5] || (_cache[5] = (...args) => _ctx.valueOnMouse && _ctx.valueOnMouse(...args)),\n    type: \"range\",\n    name: \"myRange\",\n    id: \"myRange\",\n    min: \"1\",\n    max: Math.floor($data.trackinfo.totaltime),\n    class: \"slider\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.trackinfo.current_time = $event)\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3), [[_vModelText, $data.trackinfo.current_time]]), _hoisted_4])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$props","title","ref","onTimeupdate","_cache","args","$options","ShowCurrentTime","preload","src","$data","playing_src","type","onClick","play","pause","_hoisted_2","onMousedown","_ctx","pg_mouseDown","onMouseup","pg_mouseUp","onMousemove","valueOnMouse","name","id","min","max","Math","floor","trackinfo","totaltime","current_time","$event","_hoisted_4"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\MediaPlayer.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>{{ title }}</h1>\r\n    <audio ref=\"player\" @timeupdate=\"ShowCurrentTime\" preload=\"none\">\r\n      <source :src=\"playing_src\" type=\"audio/mpeg\" />\r\n    </audio>\r\n    <button @click=\"play\">Choi</button>\r\n    <button @click=\"pause\">Nghi</button>\r\n\r\n    <div class=\"mainPlayer\">\r\n      <input\r\n        @mousedown=\"pg_mouseDown\"\r\n        @mouseup=\"pg_mouseUp\"\r\n        @mousemove=\"valueOnMouse\"\r\n        type=\"range\"\r\n        name=\"myRange\"\r\n        id=\"myRange\"\r\n        min=\"1\"\r\n        :max=\"Math.floor(trackinfo.totaltime)\"\r\n        class=\"slider\"\r\n        v-model=\"trackinfo.current_time\"\r\n      />\r\n      <div>\r\n        <div class=\"btnGroupControl\">\r\n          <button class=\"btnPrev\">\r\n            <i class=\"fa-solid fa-backward-fast\"></i>\r\n          </button>\r\n          <button class=\"btnPlay\"><i class=\"fa-solid fa-play\"></i></button>\r\n          <button class=\"btnNext\">\r\n            <i class=\"fa-solid fa-forward-fast\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"showTime\">\r\n          <p style=\"display: inline\">00:00:00</p>\r\n          <p style=\"display: inline\">/ 01:00:00</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  name: \"AudioPlayer\",\r\n  props: {\r\n    src: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"Audio Player\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      playing_src: \"\",\r\n      trackinfo: { title: \"\", current_time: 0, totaltime: 200 },\r\n    };\r\n  },\r\n  methods: {\r\n    play() {\r\n      if (!this.playing_src)\r\n        this.playing_src = `${this.axios.defaults.baseURL}api/Funapp/StreamAudio?id=8`; //api/Funapp/Playback  api/Funapp/StreamAudio\r\n      this.$refs.player.load();\r\n      this.$refs.player.play();\r\n    },\r\n    ShowCurrentTime() {},\r\n    pause() {\r\n      //this.$refs.player.pause();\r\n      this.$refs.player.currentTime = 205;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.mainPlayer {\r\n  position: relative;\r\n  background-color: rgba(105, 11, 114, 0.185);\r\n  #myRange {\r\n    width: 100%;\r\n  }\r\n  .showTime {\r\n    position: absolute;\r\n    top: 20%;\r\n    right: 0px;\r\n    padding: {\r\n      left: 5px;\r\n      right: 12px;\r\n    }\r\n    margin: {\r\n      right: 0;\r\n    }\r\n    p {\r\n      color: white;\r\n    }\r\n    text-align: right;\r\n  }\r\n  .btnGroupControl {\r\n    button {\r\n      background: transparent;\r\n      cursor: pointer;\r\n      box-shadow: 2px 2px 2px 1px rgba(221, 197, 197, 0.336);\r\n      transition: box-shadow 0.1s ease-out;\r\n    }\r\n    button:active {\r\n      outline: none;\r\n      box-shadow: 0 0 50px 20px rgba(53, 166, 247, 0.7);\r\n      background-color: rgba(145, 201, 241, 0.7);\r\n    }\r\n    padding: {\r\n      top: 5px;\r\n      bottom: 5px;\r\n    }\r\n    width: 20%;\r\n  }\r\n  .btnPlay {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin: {\r\n      left: 5px;\r\n      right: 5px;\r\n    }\r\n  }\r\n  .btnPrev,\r\n  .btnNext {\r\n    border: none;\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":";;;;EASSA,KAAK,EAAC;AAAY;;;;uBARzBC,mBAAA,CAqCM,cApCJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZH,mBAAA,CAEQ;IAFDI,GAAG,EAAC,QAAQ;IAAEC,YAAU,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEG,OAAO,EAAC;MACxDV,mBAAA,CAA+C;IAAtCW,GAAG,EAAEC,KAAA,CAAAC,WAAW;IAAEC,IAAI,EAAC;+EAElCd,mBAAA,CAAmC;IAA1Be,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAQ,IAAA,IAAAR,QAAA,CAAAQ,IAAA,IAAAT,IAAA,CAAI;KAAE,MAAI,GAC1BP,mBAAA,CAAoC;IAA3Be,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,KAAA,IAAAT,QAAA,CAAAS,KAAA,IAAAV,IAAA,CAAK;KAAE,MAAI,GAE3BP,mBAAA,CA4BM,OA5BNkB,UA4BM,G,gBA3BJlB,mBAAA,CAWE;IAVCmB,WAAS,EAAAb,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEa,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAd,IAAA,CAAY;IACvBe,SAAO,EAAAhB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEa,IAAA,CAAAG,UAAA,IAAAH,IAAA,CAAAG,UAAA,IAAAhB,IAAA,CAAU;IACnBiB,WAAS,EAAAlB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEa,IAAA,CAAAK,YAAA,IAAAL,IAAA,CAAAK,YAAA,IAAAlB,IAAA,CAAY;IACxBO,IAAI,EAAC,OAAO;IACZY,IAAI,EAAC,SAAS;IACdC,EAAE,EAAC,SAAS;IACZC,GAAG,EAAC,GAAG;IACNC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACnB,KAAA,CAAAoB,SAAS,CAACC,SAAS;IACpCnC,KAAK,EAAC,QAAQ;+DACLc,KAAA,CAAAoB,SAAS,CAACE,YAAY,GAAAC,MAAA;uEAAtBvB,KAAA,CAAAoB,SAAS,CAACE,YAAY,E,GAEjCE,UAcM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}