{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createCanvas, loadImage } from \"canvas\";\nexport default {\n  name: \"ImageMerging\",\n  data() {\n    return {\n      mergedImageUrl: \"#\"\n    };\n  },\n  mounted() {\n    this.axios.get(`api/chatapp/GetEmpAllGroup?emp_id=10003367`).then(async res => {\n      const img1 = res.data[0].INFO.EMP_AVATAR[0].AVATAR;\n      const img2 = res.data[0].INFO.EMP_AVATAR[1].AVATAR;\n      this.mergedImageUrl = await this.ImageMerging(img1, img2);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    async ImageMerging(imgList) {\n      const canvasWidth = 1000;\n      const canvasHeight = 1000;\n\n      // Tạo đối tượng canvas với kích thước tương ứng\n      let canvas = createCanvas(500, 500);\n      let ctx = canvas.getContext(\"2d\");\n      const lstSyncIMG = [];\n      let imgTemp = undefined;\n      imgList.forEach(async el => {\n        imgTemp = await loadImage(`data:image/png;base64,${el}`);\n        ctx.drawImage(imgTemp, 0, 0, 500, 500);\n        const temp1 = await loadImage(canvas.toDataURL(\"image/png\"));\n        lstSyncIMG.push(temp1);\n      });\n      canvas = createCanvas(canvasWidth, canvasHeight);\n      ctx = canvas.getContext(\"2d\");\n      lstSyncIMG.forEach((el, idx) => {\n        switch (idx) {\n          case 0:\n            ctx.drawImage(el, 0, 0, 500, 500);\n            break;\n          case 1:\n            ctx.drawImage(el, 500, 0, 500, 500);\n            break;\n          case 2:\n            ctx.drawImage(el, 0, 500, 500, 500);\n            break;\n          case 3:\n            ctx.drawImage(el, 500, 500, 500, 500);\n            break;\n          default:\n            break;\n        }\n      });\n      return canvas.toDataURL(\"image/png\");\n    }\n  }\n};","map":{"version":3,"names":["createCanvas","loadImage","name","data","mergedImageUrl","mounted","axios","get","then","res","img1","INFO","EMP_AVATAR","AVATAR","img2","ImageMerging","catch","err","console","log","methods","imgList","canvasWidth","canvasHeight","canvas","ctx","getContext","lstSyncIMG","imgTemp","undefined","forEach","el","drawImage","temp1","toDataURL","push","idx"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\ImageMerging.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <img :src=\"mergedImageUrl\" alt=\"Merged Image\" />\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { createCanvas, loadImage } from \"canvas\";\r\n\r\nexport default {\r\n  name: \"ImageMerging\",\r\n  data() {\r\n    return {\r\n      mergedImageUrl: \"#\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.axios\r\n      .get(`api/chatapp/GetEmpAllGroup?emp_id=10003367`)\r\n      .then(async (res) => {\r\n        const img1 = res.data[0].INFO.EMP_AVATAR[0].AVATAR;\r\n        const img2 = res.data[0].INFO.EMP_AVATAR[1].AVATAR;\r\n        this.mergedImageUrl = await this.ImageMerging(img1, img2);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  methods: {\r\n    async ImageMerging(imgList) {\r\n      const canvasWidth = 1000;\r\n      const canvasHeight = 1000;\r\n\r\n      // Tạo đối tượng canvas với kích thước tương ứng\r\n      let canvas = createCanvas(500, 500);\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const lstSyncIMG = [];\r\n      let imgTemp = undefined;\r\n      imgList.forEach(async (el) => {\r\n        imgTemp = await loadImage(`data:image/png;base64,${el}`);\r\n        ctx.drawImage(imgTemp, 0, 0, 500, 500);\r\n        const temp1 = await loadImage(canvas.toDataURL(\"image/png\"));\r\n        lstSyncIMG.push(temp1);\r\n      });\r\n\r\n      canvas = createCanvas(canvasWidth, canvasHeight);\r\n      ctx = canvas.getContext(\"2d\");\r\n\r\n      lstSyncIMG.forEach((el, idx) => {\r\n        switch (idx) {\r\n          case 0:\r\n            ctx.drawImage(el, 0, 0, 500, 500);\r\n            break;\r\n          case 1:\r\n            ctx.drawImage(el, 500, 0, 500, 500);\r\n            break;\r\n          case 2:\r\n            ctx.drawImage(el, 0, 500, 500, 500);\r\n            break;\r\n          case 3:\r\n            ctx.drawImage(el, 500, 500, 500, 500);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      return canvas.toDataURL(\"image/png\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n  "],"mappings":";AAOA,SAASA,YAAY,EAAEC,SAAQ,QAAS,QAAQ;AAEhD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAI,CACNC,GAAG,CAAE,4CAA2C,EAChDC,IAAI,CAAC,MAAOC,GAAG,IAAK;MACnB,MAAMC,IAAG,GAAID,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM;MAClD,MAAMC,IAAG,GAAIL,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM;MAClD,IAAI,CAACT,cAAa,GAAI,MAAM,IAAI,CAACW,YAAY,CAACL,IAAI,EAAEI,IAAI,CAAC;IAC3D,CAAC,EACAE,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EACDG,OAAO,EAAE;IACP,MAAML,YAAYA,CAACM,OAAO,EAAE;MAC1B,MAAMC,WAAU,GAAI,IAAI;MACxB,MAAMC,YAAW,GAAI,IAAI;;MAEzB;MACA,IAAIC,MAAK,GAAIxB,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC;MACnC,IAAIyB,GAAE,GAAID,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACjC,MAAMC,UAAS,GAAI,EAAE;MACrB,IAAIC,OAAM,GAAIC,SAAS;MACvBR,OAAO,CAACS,OAAO,CAAC,MAAOC,EAAE,IAAK;QAC5BH,OAAM,GAAI,MAAM3B,SAAS,CAAE,yBAAwB8B,EAAG,EAAC,CAAC;QACxDN,GAAG,CAACO,SAAS,CAACJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QACtC,MAAMK,KAAI,GAAI,MAAMhC,SAAS,CAACuB,MAAM,CAACU,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5DP,UAAU,CAACQ,IAAI,CAACF,KAAK,CAAC;MACxB,CAAC,CAAC;MAEFT,MAAK,GAAIxB,YAAY,CAACsB,WAAW,EAAEC,YAAY,CAAC;MAChDE,GAAE,GAAID,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MAE7BC,UAAU,CAACG,OAAO,CAAC,CAACC,EAAE,EAAEK,GAAG,KAAK;QAC9B,QAAQA,GAAG;UACT,KAAK,CAAC;YACJX,GAAG,CAACO,SAAS,CAACD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;YACjC;UACF,KAAK,CAAC;YACJN,GAAG,CAACO,SAAS,CAACD,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC;UACF,KAAK,CAAC;YACJN,GAAG,CAACO,SAAS,CAACD,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACnC;UACF,KAAK,CAAC;YACJN,GAAG,CAACO,SAAS,CAACD,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACrC;UACF;YACE;QAAK;MAEX,CAAC,CAAC;MACF,OAAOP,MAAM,CAACU,SAAS,CAAC,WAAW,CAAC;IACtC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}