{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-gray-500\"\n};\nconst _hoisted_2 = {\n  class: \"text-gray-500\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"text-gray-500\"\n};\nconst _hoisted_5 = {\n  class: \"text-gray-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_Plus = _resolveComponent(\"Plus\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_form, {\n    \"label-position\": \"left\",\n    ref: \"ruleFormRef\",\n    model: $data.stepModel,\n    \"label-width\": \"120px\",\n    class: \"demo-ruleForm\",\n    \"status-icon\": \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"SOP ID\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($data.stepModel.SOP_ID), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Step Name\",\n      required: \"\",\n      prop: \"STEP_NAME\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.stepModel.STEP_NAME,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.stepModel.STEP_NAME = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Step Contents\",\n      prop: \"STEP_CONTENTS\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.stepModel.STEP_CONTENTS,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.stepModel.STEP_CONTENTS = $event),\n        type: \"textarea\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Sequence\",\n      prop: \"SEQ\",\n      required: \"\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($data.stepModel.SEQ), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Step Image\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_upload, {\n        \"file-list\": $data.fileList,\n        \"onUpdate:fileList\": _cache[2] || (_cache[2] = $event => $data.fileList = $event),\n        action: \"#\",\n        \"list-type\": \"picture-card\",\n        \"auto-upload\": false,\n        \"on-preview\": $options.handlePictureCardPreview,\n        \"on-remove\": $options.handleRemove,\n        limit: 1\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Plus)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"file-list\", \"on-preview\", \"on-remove\"]), _createVNode(_component_el_dialog, {\n        modelValue: $data.dialogVisible,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.dialogVisible = $event),\n        style: {\n          \"width\": \"fit-content\"\n        }\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          \"w-full\": \"\",\n          src: $data.dialogImageUrl,\n          alt: \"Preview Image\"\n        }, null, 8 /* PROPS */, _hoisted_3)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Image ID\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($data.stepModel.STEP_IMG.STEP_IMG_ID), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"Update User\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.stepModel.UPDATE_USER), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = $event => _ctx.$emit('CancelEvent'))\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Cancel\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_el_form","ref","model","$data","stepModel","_component_el_form_item","label","_createElementVNode","_hoisted_1","_toDisplayString","SOP_ID","required","prop","_component_el_input","STEP_NAME","$event","STEP_CONTENTS","type","_hoisted_2","SEQ","_component_el_upload","fileList","action","$options","handlePictureCardPreview","handleRemove","limit","_component_el_icon","_component_Plus","_component_el_dialog","dialogVisible","style","src","dialogImageUrl","alt","_hoisted_4","STEP_IMG","STEP_IMG_ID","_hoisted_5","UPDATE_USER","_component_el_button","onClick","submitForm","_cache","_ctx","$emit"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FAComs\\NewStep.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-form label-position=\"left\" ref=\"ruleFormRef\" :model=\"stepModel\" label-width=\"120px\" class=\"demo-ruleForm\"\r\n            status-icon>\r\n            <el-form-item label=\"SOP ID\">\r\n                <span class=\"text-gray-500\">{{ stepModel.SOP_ID }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"Step Name\" required prop=\"STEP_NAME\">\r\n                <el-input v-model=\"stepModel.STEP_NAME\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Step Contents\" prop=\"STEP_CONTENTS\" required>\r\n                <el-input v-model=\"stepModel.STEP_CONTENTS\" type=\"textarea\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Sequence\" prop=\"SEQ\" required>\r\n                <span class=\"text-gray-500\">{{ stepModel.SEQ }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"Step Image\">\r\n                <el-upload v-model:file-list=\"fileList\" action=\"#\" list-type=\"picture-card\" :auto-upload=\"false\"\r\n                    :on-preview=\"handlePictureCardPreview\" :on-remove=\"handleRemove\" :limit=\"1\">\r\n                    <el-icon>\r\n                        <Plus />\r\n                    </el-icon>\r\n                </el-upload>\r\n\r\n                <el-dialog v-model=\"dialogVisible\" style=\"width: fit-content;\">\r\n                    <img w-full :src=\"dialogImageUrl\" alt=\"Preview Image\" />\r\n                </el-dialog>\r\n\r\n            </el-form-item>\r\n            <el-form-item label=\"Image ID\"><span class=\"text-gray-500\">{{ stepModel.STEP_IMG.STEP_IMG_ID }}</span>\r\n            </el-form-item>\r\n            <el-form-item label=\"Update User\">\r\n                <span class=\"text-gray-500\">{{ stepModel.UPDATE_USER }}</span>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm\">\r\n                    Submit\r\n                </el-button>\r\n                <el-button @click=\"$emit('CancelEvent')\">Cancel</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    computed: {\r\n        ...mapGetters({\r\n            LoginUser: 'getUser'\r\n        })\r\n    },\r\n    data() {\r\n        return {\r\n            disabled: false,\r\n            dialogVisible: false,\r\n            dialogImageUrl: '',\r\n            stepModel: {\r\n                SOP_ID: 0,\r\n                STEP_NAME: '',\r\n                STEP_CONTENTS: '',\r\n                SEQ: 0,\r\n                STEP_IMG: { STEP_IMG_ID: 0, IMG_NAME: '', STEP_IMG_DATA: undefined },\r\n                UPDATE_TIME: new Date(),\r\n                UPDATE_USER: this.LoginUser\r\n            },\r\n            fileList: undefined,\r\n            newIMG: false,\r\n            oldStepName: ''\r\n        }\r\n    }, props: {\r\n        AddNew: Boolean,\r\n        Data: Object\r\n    }, async mounted() {\r\n\r\n        if (!this.AddNew) {\r\n            await this.axios.get(`api/FAOnlineSOP/GetSopStepbyStepName?sop_id=${this.Data.sop.SOP_ID}&step_name=${this.Data.step_name}`).then((res) => {\r\n                this.stepModel = {\r\n                    SOP_ID: this.Data.sop.SOP_ID,\r\n                    STEP_NAME: this.Data.step_name,\r\n                    STEP_CONTENTS: res.data.step.STEP_CONTENTS,\r\n                    SEQ: res.data.step.STEP_SEQ,\r\n                    STEP_IMG: { STEP_IMG_ID: res.data.step.STEP_IMG.STEP_IMG_ID, IMG_NAME: res.data.step.STEP_IMG.IMG_NAME, STEP_IMG_DATA: res.data.step.STEP_IMG.STEP_IMG_DATA },\r\n                    UPDATE_TIME: new Date(),\r\n                    UPDATE_USER: this.LoginUser\r\n                };\r\n                this.oldStepName = this.Data.step_name;\r\n                this.fileList = [{\r\n                    name: this.stepModel.STEP_IMG.IMG_NAME,\r\n                    url: this.imageFromByte(this.stepModel.STEP_IMG.STEP_IMG_DATA),\r\n                }]\r\n            }).catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n        } else {\r\n            this.stepModel = {\r\n                SOP_ID: this.Data.sop.SOP_ID,\r\n                STEP_NAME: '',\r\n                STEP_CONTENTS: '',\r\n                SEQ: 0,\r\n                STEP_IMG: { STEP_IMG_ID: 0, IMG_NAME: '', STEP_IMG_DATA: undefined },\r\n                UPDATE_TIME: new Date(),\r\n                UPDATE_USER: this.LoginUser\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        handlePictureCardPreview: function (uploadFile) {\r\n            this.dialogImageUrl = uploadFile.url;\r\n            this.dialogVisible = true;\r\n        }, imageFromByte(strBase64) {\r\n            return `data:image/jpeg;base64,${strBase64}`;\r\n        },\r\n        handleRemove: function () {\r\n            this.newIMG = true;\r\n        }, async NewStep(formData) {\r\n            await this.axios.post('api/FAOnlineSOP/UploadSopImage/user/10003367', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then(async (response) => {\r\n                this.stepModel.STEP_IMG.STEP_IMG_ID = response.data.img_id;\r\n                await this.axios.post(`api/FAOnlineSOP/AddNewSOPStep/sop_id/${this.stepModel.SOP_ID}`, this.stepModel).then((res) => {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        type: \"success\",\r\n                        message: res.data,\r\n                    });\r\n                    this.$emit('CancelEvent', true);\r\n                }).catch((err) => {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        type: \"error\",\r\n                        message: err.response.data,\r\n                    });\r\n                });\r\n            }).catch((err) => {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"error\",\r\n                    message: err.response.data,\r\n                });\r\n                console.log(err.response.data);\r\n            });\r\n        }, async EditStep(formData) {\r\n            if (this.newIMG) await this.axios.post(`api/FAOnlineSOP/UpdateSopImage/user/10003367/old_id/${this.stepModel.STEP_IMG.STEP_IMG_ID}`, formData).\r\n                then(console.log('Update IMG success!')).catch((err) => {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        type: \"error\",\r\n                        message: err.response.data,\r\n                    });\r\n                    return;\r\n                });\r\n\r\n            const updateModel = {\r\n                OLD_SOP: this.stepModel.SOP_ID,\r\n                OLD_STEP_NAME: this.oldStepName,\r\n                STEP_DETAILS: this.stepModel\r\n            }\r\n            await this.axios.post('api/FAOnlineSOP/UpdateSOPStep', updateModel).then((res) => {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"success\",\r\n                    message: res.data,\r\n                });\r\n                this.$emit('CancelEvent', true);\r\n            }).catch((err) => {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"error\",\r\n                    message: err.response.data,\r\n                });\r\n            });\r\n        },\r\n        submitForm() {\r\n            if (!this.stepModel.STEP_NAME || !this.stepModel.STEP_CONTENTS) {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"error\",\r\n                    message: \"The information has not been entered completely\",\r\n                });\r\n                return;\r\n            }\r\n            if (this.fileList.length < 1) {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"error\",\r\n                    message: \"Step Image can't be null\",\r\n                });\r\n                return;\r\n            }\r\n\r\n            const file = this.fileList[0];\r\n            const formData = new FormData();\r\n            formData.append('file', file.raw);\r\n\r\n            if (this.AddNew) this.NewStep(formData); else this.EditStep(formData);\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}