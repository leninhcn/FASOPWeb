{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5cca9b29\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"myTextBox\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (msg, id) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: id,\n      style: {\n        \"color\": \"yellow\"\n      }\n    }, [msg.img_src ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: msg.img_src,\n      alt: \"\",\n      style: {\n        \"width\": \"100px\",\n        \"height\": \"100px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString(msg.value), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","messages","msg","id","key","style","img_src","src","alt","_toDisplayString","value"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MyTextBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"myTextBox\">\r\n    <p v-for=\"(msg, id) in messages\" :key=\"id\" style=\"color: yellow;\">\r\n      <img v-if=\"msg.img_src\" :src=\"msg.img_src\" alt=\"\" style=\"width: 100px; height: 100px;\" />\r\n      {{ msg.value }}\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      messages: [\r\n        { type: \"text\", value: \"chan luon\", img_src: undefined },\r\n        {\r\n          type: \"img\",\r\n          value: \"\",\r\n          img_src: `${this.axios.defaults.baseURL}Images/noImg.png`,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.myTextBox {\r\n  border: 1px solid red;\r\n  text-align: left;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;;uBAAtBC,mBAAA,CAKM,OALNC,UAKM,I,kBAJJD,mBAAA,CAGIE,SAAA,QAAAC,WAAA,CAHmBC,KAAA,CAAAC,QAAQ,GAApBC,GAAG,EAAEC,EAAE;yBAAlBP,mBAAA,CAGI;MAH8BQ,GAAG,EAAED,EAAE;MAAEE,KAAsB,EAAtB;QAAA;MAAA;QAC9BH,GAAG,CAACI,OAAO,I,cAAtBV,mBAAA,CAAyF;;MAAhEW,GAAG,EAAEL,GAAG,CAACI,OAAO;MAAEE,GAAG,EAAC,EAAE;MAACH,KAAoC,EAApC;QAAA;QAAA;MAAA;+FAAuC,GACzF,GAAAI,gBAAA,CAAGP,GAAG,CAACQ,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}