{"ast":null,"code":"import { ref, watch, onBeforeMount, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport History from '../../history.js';\nimport { vmHasRouter } from '../../utils/private/vm.js';\nlet counter = 0;\nexport const useFullscreenProps = {\n  fullscreen: Boolean,\n  noRouteFullscreenExit: Boolean\n};\nexport const useFullscreenEmits = ['update:fullscreen', 'fullscreen'];\nexport default function () {\n  const vm = getCurrentInstance();\n  const {\n    props,\n    emit,\n    proxy\n  } = vm;\n  let historyEntry, fullscreenFillerNode, container;\n  const inFullscreen = ref(false);\n  vmHasRouter(vm) === true && watch(() => proxy.$route.fullPath, () => {\n    props.noRouteFullscreenExit !== true && exitFullscreen();\n  });\n  watch(() => props.fullscreen, v => {\n    if (inFullscreen.value !== v) {\n      toggleFullscreen();\n    }\n  });\n  watch(inFullscreen, v => {\n    emit('update:fullscreen', v);\n    emit('fullscreen', v);\n  });\n  function toggleFullscreen() {\n    if (inFullscreen.value === true) {\n      exitFullscreen();\n    } else {\n      setFullscreen();\n    }\n  }\n  function setFullscreen() {\n    if (inFullscreen.value === true) {\n      return;\n    }\n    inFullscreen.value = true;\n    container = proxy.$el.parentNode;\n    container.replaceChild(fullscreenFillerNode, proxy.$el);\n    document.body.appendChild(proxy.$el);\n    counter++;\n    if (counter === 1) {\n      document.body.classList.add('q-body--fullscreen-mixin');\n    }\n    historyEntry = {\n      handler: exitFullscreen\n    };\n    History.add(historyEntry);\n  }\n  function exitFullscreen() {\n    if (inFullscreen.value !== true) {\n      return;\n    }\n    if (historyEntry !== void 0) {\n      History.remove(historyEntry);\n      historyEntry = void 0;\n    }\n    container.replaceChild(proxy.$el, fullscreenFillerNode);\n    inFullscreen.value = false;\n    counter = Math.max(0, counter - 1);\n    if (counter === 0) {\n      document.body.classList.remove('q-body--fullscreen-mixin');\n      if (proxy.$el.scrollIntoView !== void 0) {\n        setTimeout(() => {\n          proxy.$el.scrollIntoView();\n        });\n      }\n    }\n  }\n  onBeforeMount(() => {\n    fullscreenFillerNode = document.createElement('span');\n  });\n  onMounted(() => {\n    props.fullscreen === true && setFullscreen();\n  });\n  onBeforeUnmount(exitFullscreen);\n\n  // expose public methods\n  Object.assign(proxy, {\n    toggleFullscreen,\n    setFullscreen,\n    exitFullscreen\n  });\n  return {\n    inFullscreen,\n    toggleFullscreen\n  };\n}","map":{"version":3,"names":["ref","watch","onBeforeMount","onMounted","onBeforeUnmount","getCurrentInstance","History","vmHasRouter","counter","useFullscreenProps","fullscreen","Boolean","noRouteFullscreenExit","useFullscreenEmits","vm","props","emit","proxy","historyEntry","fullscreenFillerNode","container","inFullscreen","$route","fullPath","exitFullscreen","v","value","toggleFullscreen","setFullscreen","$el","parentNode","replaceChild","document","body","appendChild","classList","add","handler","remove","Math","max","scrollIntoView","setTimeout","createElement","Object","assign"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/composables/private/use-fullscreen.js"],"sourcesContent":["import { ref, watch, onBeforeMount, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport History from '../../history.js'\nimport { vmHasRouter } from '../../utils/private/vm.js'\n\nlet counter = 0\n\nexport const useFullscreenProps = {\n  fullscreen: Boolean,\n  noRouteFullscreenExit: Boolean\n}\n\nexport const useFullscreenEmits = [ 'update:fullscreen', 'fullscreen' ]\n\nexport default function () {\n  const vm = getCurrentInstance()\n  const { props, emit, proxy } = vm\n\n  let historyEntry, fullscreenFillerNode, container\n  const inFullscreen = ref(false)\n\n  vmHasRouter(vm) === true && watch(() => proxy.$route.fullPath, () => {\n    props.noRouteFullscreenExit !== true && exitFullscreen()\n  })\n\n  watch(() => props.fullscreen, v => {\n    if (inFullscreen.value !== v) {\n      toggleFullscreen()\n    }\n  })\n\n  watch(inFullscreen, v => {\n    emit('update:fullscreen', v)\n    emit('fullscreen', v)\n  })\n\n  function toggleFullscreen () {\n    if (inFullscreen.value === true) {\n      exitFullscreen()\n    }\n    else {\n      setFullscreen()\n    }\n  }\n\n  function setFullscreen () {\n    if (inFullscreen.value === true) {\n      return\n    }\n\n    inFullscreen.value = true\n    container = proxy.$el.parentNode\n    container.replaceChild(fullscreenFillerNode, proxy.$el)\n    document.body.appendChild(proxy.$el)\n\n    counter++\n    if (counter === 1) {\n      document.body.classList.add('q-body--fullscreen-mixin')\n    }\n\n    historyEntry = {\n      handler: exitFullscreen\n    }\n    History.add(historyEntry)\n  }\n\n  function exitFullscreen () {\n    if (inFullscreen.value !== true) {\n      return\n    }\n\n    if (historyEntry !== void 0) {\n      History.remove(historyEntry)\n      historyEntry = void 0\n    }\n\n    container.replaceChild(proxy.$el, fullscreenFillerNode)\n    inFullscreen.value = false\n\n    counter = Math.max(0, counter - 1)\n\n    if (counter === 0) {\n      document.body.classList.remove('q-body--fullscreen-mixin')\n\n      if (proxy.$el.scrollIntoView !== void 0) {\n        setTimeout(() => { proxy.$el.scrollIntoView() })\n      }\n    }\n  }\n\n  onBeforeMount(() => {\n    fullscreenFillerNode = document.createElement('span')\n  })\n\n  onMounted(() => {\n    props.fullscreen === true && setFullscreen()\n  })\n\n  onBeforeUnmount(exitFullscreen)\n\n  // expose public methods\n  Object.assign(proxy, {\n    toggleFullscreen,\n    setFullscreen,\n    exitFullscreen\n  })\n\n  return {\n    inFullscreen,\n    toggleFullscreen\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}