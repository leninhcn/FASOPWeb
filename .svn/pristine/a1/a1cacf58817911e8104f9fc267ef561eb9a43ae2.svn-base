{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Qmsg from \"./Qmsg.vue\";\nexport default {\n  name: \"HistoryBox\",\n  components: {\n    Qmsg\n  },\n  props: {},\n  mounted() {\n    this.GetMemberInfor();\n    this.GetChatHistory();\n  },\n  data() {\n    return {\n      testIMG: '',\n      MSGTextColor: {\n        Sender: \"amber-5\",\n        Receiver: \"blue-grey-3\"\n      },\n      members: undefined,\n      groupID: 2,\n      ChatHis: []\n    };\n  },\n  methods: {\n    ShowAvatar(member) {\n      if (this.members) this.members.forEach(item => {\n        if (item.EMP_ID == member) {\n          return {\n            img: this.imageFromByte(item.PICUSER)\n          };\n        }\n      });\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    },\n    async GetMemberInfor() {\n      await this.axios.get(`api/chatapp/GetGroupMemberInfo?groupID=${this.groupID}`).then(res => {\n        this.members = res.data;\n        this.testIMG = this.members[0].PICUSER;\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    },\n    async GetChatHistory() {\n      await this.axios.get(`api/chatapp/GetHistory?groupID=${this.groupID}`).then(res => {\n        var sentEMP = res.data[0].SENDER_ID;\n        var msg = undefined;\n        res.data.forEach(item => {\n          if (!msg) {\n            msg = {\n              Sender: item.SENDER,\n              ID: item.SENDER_ID,\n              message: [{\n                text: item.MES_CONTENT\n              }]\n            };\n          } else {\n            if (sentEMP == item.SENDER_ID) {\n              msg.message.push({\n                text: item.MES_CONTENT\n              });\n            } else {\n              this.ChatHis.push(msg);\n              msg = {\n                Sender: item.SENDER,\n                ID: item.SENDER_ID,\n                message: [{\n                  text: item.MES_CONTENT\n                }]\n              };\n            }\n          }\n          sentEMP = item.SENDER_ID;\n        });\n        this.ChatHis.push(msg);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Qmsg","name","components","props","mounted","GetMemberInfor","GetChatHistory","data","testIMG","MSGTextColor","Sender","Receiver","members","undefined","groupID","ChatHis","methods","ShowAvatar","member","forEach","item","EMP_ID","img","imageFromByte","PICUSER","strBase64","axios","get","then","res","catch","err","console","log","response","sentEMP","SENDER_ID","msg","SENDER","ID","message","text","MES_CONTENT","push"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\HistoryBox.vue"],"sourcesContent":["<template>\r\n    <div class=\"hello\">\r\n      <div class=\"q-pa-md row justify-center\">\r\n        <div style=\"width: 100%;\">\r\n          <Qmsg\r\n            v-for=\"(msg, id) in ChatHis\"\r\n            :key=\"id\"\r\n            :Name=\"msg.Sender\"\r\n            :MemberID=\"msg.ID\"\r\n            :BGColor=\"\r\n              msg.Sender == 'NinhLe' ? MSGTextColor.Sender : MSGTextColor.Receiver\r\n            \"\r\n            :Message=\"msg.message\"\r\n            :Sent=\"msg.Sender == 'NinhLe'\"\r\n            Stamp=\"7 minutes ago\"\r\n            TextColor=\"white\"\r\n          ></Qmsg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Qmsg from \"./Qmsg.vue\";\r\n  export default {\r\n    name: \"HistoryBox\",\r\n    components: {\r\n      Qmsg,\r\n    },\r\n    props: {},\r\n    mounted() {\r\n      this.GetMemberInfor();\r\n      this.GetChatHistory();\r\n    },\r\n    data() {\r\n      return {\r\n        testIMG:'',\r\n        MSGTextColor: { Sender: \"amber-5\", Receiver: \"blue-grey-3\" },\r\n        members: undefined,\r\n        groupID: 2,\r\n        ChatHis: [],\r\n      };\r\n    },\r\n    methods: {\r\n      ShowAvatar(member) {\r\n        if (this.members)\r\n          this.members.forEach((item) => {\r\n            if (item.EMP_ID == member) {\r\n              return { img: this.imageFromByte(item.PICUSER) };\r\n            }\r\n          });\r\n      },\r\n      imageFromByte(strBase64) {\r\n        return `data:image/jpeg;base64,${strBase64}`;\r\n      },\r\n      async GetMemberInfor() {\r\n        await this.axios\r\n          .get(`api/chatapp/GetGroupMemberInfo?groupID=${this.groupID}`)\r\n          .then((res) => {\r\n            this.members = res.data;\r\n            this.testIMG=this.members[0].PICUSER;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response.data);\r\n          });\r\n      },\r\n      async GetChatHistory() {\r\n        await this.axios\r\n          .get(`api/chatapp/GetHistory?groupID=${this.groupID}`)\r\n          .then((res) => {\r\n            var sentEMP = res.data[0].SENDER_ID;\r\n            var msg = undefined;\r\n            res.data.forEach((item) => {\r\n              if (!msg) {\r\n                msg = {\r\n                  Sender: item.SENDER,\r\n                  ID: item.SENDER_ID,\r\n                  message: [{ text: item.MES_CONTENT }],\r\n                };\r\n              } else {\r\n                if (sentEMP == item.SENDER_ID) {\r\n                  msg.message.push({ text: item.MES_CONTENT });\r\n                } else {\r\n                  this.ChatHis.push(msg);\r\n                  msg = {\r\n                    Sender: item.SENDER,\r\n                    ID: item.SENDER_ID,\r\n                    message: [{ text: item.MES_CONTENT }],\r\n                  };\r\n                }\r\n              }\r\n              sentEMP = item.SENDER_ID;\r\n            });\r\n            this.ChatHis.push(msg);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style scoped>\r\n  .my-emoticon {\r\n    vertical-align: middle;\r\n    height: 2em;\r\n    width: 2em;\r\n  }\r\n  \r\n  h3 {\r\n    margin: 40px 0 0;\r\n  }\r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    display: inline-block;\r\n    margin: 0 10px;\r\n  }\r\n  a {\r\n    color: #42b983;\r\n  }\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}