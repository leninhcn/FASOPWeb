{"ast":null,"code":"import { createCanvas, loadImage } from \"canvas\";\nexport default {\n  name: \"ImageMerging\",\n  data() {\n    return {\n      mergedImageUrl: \"#\"\n    };\n  },\n  mounted() {\n    this.axios.get(`api/chatapp/GetEmpAllGroup?emp_id=10003367`).then(async res => {\n      console.log(res);\n      const img1 = res.data[0].INFO.EMP_AVATAR[0].AVATAR;\n      const img2 = res.data[0].INFO.EMP_AVATAR[2].AVATAR;\n      const newimg = await this.ImageMerging(img1, img2);\n      console.log(newimg);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  methods: {\n    async ImageMerging(img1Data, img2Data) {\n      const canvasWidth = 900;\n      const canvasHeight = 300;\n\n      // Tạo đối tượng canvas với kích thước tương ứng\n      const canvas = createCanvas(canvasWidth, canvasHeight);\n      const ctx = canvas.getContext(\"2d\");\n      const img1 = await loadImage(Buffer.from(img1Data));\n      const img2 = await loadImage(Buffer.from(img2Data));\n\n      // Đợi cho tất cả các ảnh được tải xong\n      Promise.all([new Promise(resolve => img1.addEventListener(\"load\", resolve)), new Promise(resolve => img2.addEventListener(\"load\", resolve))]).then(() => {\n        // Vẽ ảnh thứ nhất từ điểm (0, 0)\n        ctx.drawImage(img1, 0, 0);\n\n        // Vẽ ảnh thứ hai từ điểm (300, 0)\n        ctx.drawImage(img2, 300, 0);\n\n        // Lấy ảnh đầu ra từ canvas dưới dạng buffer\n        return canvas.toDataURL(); //canvas.toBuffer(\"image/png\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["createCanvas","loadImage","name","data","mergedImageUrl","mounted","axios","get","then","res","console","log","img1","INFO","EMP_AVATAR","AVATAR","img2","newimg","ImageMerging","catch","err","methods","img1Data","img2Data","canvasWidth","canvasHeight","canvas","ctx","getContext","Buffer","from","Promise","all","resolve","addEventListener","drawImage","toDataURL"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\ImageMerging.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <img :src=\"mergedImageUrl\" alt=\"Merged Image\" />\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { createCanvas, loadImage } from \"canvas\";\r\n\r\nexport default {\r\n  name: \"ImageMerging\",\r\n  data() {\r\n    return {\r\n      mergedImageUrl: \"#\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.axios\r\n      .get(`api/chatapp/GetEmpAllGroup?emp_id=10003367`)\r\n      .then(async (res) => {\r\n        console.log(res);\r\n        const img1 = res.data[0].INFO.EMP_AVATAR[0].AVATAR;\r\n        const img2 = res.data[0].INFO.EMP_AVATAR[2].AVATAR;\r\n        const newimg = await this.ImageMerging(img1, img2);\r\n        console.log(newimg);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  },\r\n  methods: {\r\n    async ImageMerging(img1Data, img2Data) {\r\n      const canvasWidth = 900;\r\n      const canvasHeight = 300;\r\n\r\n      // Tạo đối tượng canvas với kích thước tương ứng\r\n      const canvas = createCanvas(canvasWidth, canvasHeight);\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      const img1 = await loadImage(Buffer.from(img1Data));\r\n\r\n      const img2 = await loadImage(Buffer.from(img2Data));\r\n\r\n      // Đợi cho tất cả các ảnh được tải xong\r\n      Promise.all([\r\n        new Promise((resolve) => img1.addEventListener(\"load\", resolve)),\r\n        new Promise((resolve) => img2.addEventListener(\"load\", resolve)),\r\n      ]).then(() => {\r\n        // Vẽ ảnh thứ nhất từ điểm (0, 0)\r\n        ctx.drawImage(img1, 0, 0);\r\n\r\n        // Vẽ ảnh thứ hai từ điểm (300, 0)\r\n        ctx.drawImage(img2, 300, 0);\r\n\r\n        // Lấy ảnh đầu ra từ canvas dưới dạng buffer\r\n        return canvas.toDataURL(); //canvas.toBuffer(\"image/png\");\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n  "],"mappings":"AAOA,SAASA,YAAY,EAAEC,SAAQ,QAAS,QAAQ;AAEhD,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAI,CACNC,GAAG,CAAE,4CAA2C,EAChDC,IAAI,CAAC,MAAOC,GAAG,IAAK;MACnBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAMG,IAAG,GAAIH,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM;MAClD,MAAMC,IAAG,GAAIP,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAACU,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,MAAM;MAClD,MAAME,MAAK,GAAI,MAAM,IAAI,CAACC,YAAY,CAACN,IAAI,EAAEI,IAAI,CAAC;MAClDN,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;IACrB,CAAC,EACAE,KAAK,CAAEC,GAAG,IAAK;MACdV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACP,MAAMH,YAAYA,CAACI,QAAQ,EAAEC,QAAQ,EAAE;MACrC,MAAMC,WAAU,GAAI,GAAG;MACvB,MAAMC,YAAW,GAAI,GAAG;;MAExB;MACA,MAAMC,MAAK,GAAI1B,YAAY,CAACwB,WAAW,EAAEC,YAAY,CAAC;MACtD,MAAME,GAAE,GAAID,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MAEnC,MAAMhB,IAAG,GAAI,MAAMX,SAAS,CAAC4B,MAAM,CAACC,IAAI,CAACR,QAAQ,CAAC,CAAC;MAEnD,MAAMN,IAAG,GAAI,MAAMf,SAAS,CAAC4B,MAAM,CAACC,IAAI,CAACP,QAAQ,CAAC,CAAC;;MAEnD;MACAQ,OAAO,CAACC,GAAG,CAAC,CACV,IAAID,OAAO,CAAEE,OAAO,IAAKrB,IAAI,CAACsB,gBAAgB,CAAC,MAAM,EAAED,OAAO,CAAC,CAAC,EAChE,IAAIF,OAAO,CAAEE,OAAO,IAAKjB,IAAI,CAACkB,gBAAgB,CAAC,MAAM,EAAED,OAAO,CAAC,CAAC,CACjE,CAAC,CAACzB,IAAI,CAAC,MAAM;QACZ;QACAmB,GAAG,CAACQ,SAAS,CAACvB,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEzB;QACAe,GAAG,CAACQ,SAAS,CAACnB,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;;QAE3B;QACA,OAAOU,MAAM,CAACU,SAAS,EAAE,EAAE;MAC7B,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}