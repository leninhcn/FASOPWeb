{"ast":null,"code":"export default {\n  data() {\n    return {\n      DataLoading: false,\n      newlang: false,\n      columns: [{\n        name: \"ENG\",\n        required: true,\n        label: \"English\",\n        align: \"left\",\n        field: row => row[\"ENG\"],\n        format: val => `${val}`,\n        sortable: true\n      }, {\n        name: \"ZHCN\",\n        required: true,\n        label: \"Chinese\",\n        align: \"left\",\n        field: row => row[\"ZHCN\"],\n        format: val => `${val}`,\n        sortable: true\n      }, {\n        name: \"VNI\",\n        required: true,\n        label: \"Vietnamese\",\n        align: \"left\",\n        field: row => row[\"VNI\"],\n        format: val => `${val}`,\n        sortable: true\n      }, {\n        name: \"ACTIONS\",\n        required: true,\n        label: \"ACTIONS\",\n        align: \"center\",\n        headerStyle: \"width: 150px\"\n      }],\n      rows: [],\n      OriginalRows: [],\n      stringOptions: [],\n      filterOptions: []\n    };\n  },\n  mounted() {\n    this.InitData();\n  },\n  methods: {\n    async InitData() {\n      this.rows = [];\n      this.DataLoading = true;\n      await this.axios.get(\"api/LanguageBar/GetAll\").then(res => {\n        this.rows = res.data;\n        this.OriginalRows = res.data.map(function (item) {\n          return {\n            ...item\n          };\n        });\n      }).catch(err => {\n        this.$message({\n          type: \"error\",\n          message: err\n        });\n      });\n      this.DataLoading = false;\n    }\n  }\n};","map":{"version":3,"names":["data","DataLoading","newlang","columns","name","required","label","align","field","row","format","val","sortable","headerStyle","rows","OriginalRows","stringOptions","filterOptions","mounted","InitData","methods","axios","get","then","res","map","item","catch","err","$message","type","message"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MesUtitils\\langTrans.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\">\r\n    <q-table\r\n      table-class=\"MyBodySticky\"\r\n      table-header-class=\"MyHeaderSticky\"\r\n      flat\r\n      bordered\r\n      title=\"Respective language\"\r\n      :rows=\"rows\"\r\n      :columns=\"columns\"\r\n      row-key=\"ID\"\r\n      binary-state-sort\r\n      :rows-per-page-options=\"[10, 20, 50, 100, 0]\"\r\n      :loading=\"DataLoading\"\r\n    >\r\n      <template v-slot:top-right>\r\n        <q-input dense debounce=\"300\" v-model=\"filter\" placeholder=\"Search\">\r\n          <template v-slot:append>\r\n            <q-icon name=\"search\" />\r\n          </template>\r\n        </q-input>\r\n        <div style=\"margin-left: 15px; margin-bottom: -8px\">\r\n          <q-btn\r\n            outline\r\n            color=\"primary\"\r\n            dense\r\n            class=\"glossy\"\r\n            no-caps\r\n            label=\"Add new\"\r\n            @click=\"newlang = true\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template v-slot:body=\"props\">\r\n        <q-tr :props=\"props\">\r\n          <q-td key=\"ENG\" :props=\"props\">\r\n            {{ props.row.ENG }}\r\n          </q-td>\r\n          <q-td key=\"ZHCN\" :props=\"props\">\r\n            {{ props.row.ZHCN }}\r\n          </q-td>\r\n          <q-td key=\"VNI\" :props=\"props\">\r\n            {{ props.row.VNI }}\r\n          </q-td>\r\n          <q-td key=\"ACTIONS\" :props=\"props\">\r\n            <q-btn\r\n              glossy\r\n              rounded\r\n              dense\r\n              color=\"primary\"\r\n              icon=\"done\"\r\n              @click=\"SubmitEdit(props.row)\"\r\n            >\r\n              <q-tooltip transition-show=\"scale\" transition-hide=\"scale\">\r\n                Submit\r\n              </q-tooltip></q-btn\r\n            >\r\n            <q-btn\r\n              glossy\r\n              rounded\r\n              dense\r\n              color=\"red\"\r\n              icon=\"cancel\"\r\n              style=\"margin-left: 5px; margin-right: 5px\"\r\n              @click=\"CancelEdit(props.row)\"\r\n            >\r\n              <q-tooltip transition-show=\"scale\" transition-hide=\"scale\">\r\n                Cancel\r\n              </q-tooltip></q-btn\r\n            >\r\n            <q-btn\r\n              glossy\r\n              rounded\r\n              dense\r\n              color=\"positive\"\r\n              icon=\"refresh\"\r\n              @click=\"InitData\"\r\n            >\r\n              <q-tooltip transition-show=\"scale\" transition-hide=\"scale\">\r\n                Refresh\r\n              </q-tooltip></q-btn\r\n            >\r\n          </q-td>\r\n        </q-tr>\r\n      </template>\r\n    </q-table>\r\n\r\n    <q-dialog v-model=\"newlang\" persistent>\r\n      <q-card>\r\n        <q-toolbar>\r\n          <q-avatar>\r\n            <img src=\"../../assets/3898150.png\">\r\n          </q-avatar>\r\n\r\n          <q-toolbar-title><span class=\"text-weight-bold\">Application</span> Languages</q-toolbar-title>\r\n\r\n          <q-btn flat round dense icon=\"close\" v-close-popup />\r\n        </q-toolbar>\r\n\r\n        <q-card-section>\r\n          <q-input v-model=\"text\" :dense=\"dense\">\r\n        <template v-slot:append>\r\n          <q-avatar>\r\n            <img src=\"https://cdn.quasar.dev/logo-v2/svg/logo.svg\">\r\n          </q-avatar>\r\n        </template>\r\n      </q-input>\r\n        </q-card-section>\r\n        <q-card-actions align=\"right\" class=\"text-primary\">\r\n          <q-btn flat dense label=\"Cancel\" v-close-popup />\r\n          <q-btn flat dense label=\"Submit\" v-close-popup />\r\n        </q-card-actions>\r\n      </q-card>\r\n    </q-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      DataLoading: false,\r\n      newlang: false,\r\n      columns: [\r\n        {\r\n          name: \"ENG\",\r\n          required: true,\r\n          label: \"English\",\r\n          align: \"left\",\r\n          field: (row) => row[\"ENG\"],\r\n          format: (val) => `${val}`,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: \"ZHCN\",\r\n          required: true,\r\n          label: \"Chinese\",\r\n          align: \"left\",\r\n          field: (row) => row[\"ZHCN\"],\r\n          format: (val) => `${val}`,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: \"VNI\",\r\n          required: true,\r\n          label: \"Vietnamese\",\r\n          align: \"left\",\r\n          field: (row) => row[\"VNI\"],\r\n          format: (val) => `${val}`,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: \"ACTIONS\",\r\n          required: true,\r\n          label: \"ACTIONS\",\r\n          align: \"center\",\r\n          headerStyle: \"width: 150px\",\r\n        },\r\n      ],\r\n      rows: [],\r\n      OriginalRows: [],\r\n      stringOptions: [],\r\n      filterOptions: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.InitData();\r\n  },\r\n  methods: {\r\n    async InitData() {\r\n      this.rows = [];\r\n      this.DataLoading = true;\r\n      await this.axios\r\n        .get(\"api/LanguageBar/GetAll\")\r\n        .then((res) => {\r\n          this.rows = res.data;\r\n          this.OriginalRows = res.data.map(function (item) {\r\n            return { ...item };\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: err,\r\n          });\r\n        });\r\n      this.DataLoading = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.NewLangCard {\r\n  background-color: rgb(255, 255, 255);\r\n}\r\n</style>"],"mappings":"AAsHA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,CACP;QACEC,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAGC,GAAG,IAAKA,GAAG,CAAC,KAAK,CAAC;QAC1BC,MAAM,EAAGC,GAAG,IAAM,GAAEA,GAAI,EAAC;QACzBC,QAAQ,EAAE;MACZ,CAAC,EACD;QACER,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAGC,GAAG,IAAKA,GAAG,CAAC,MAAM,CAAC;QAC3BC,MAAM,EAAGC,GAAG,IAAM,GAAEA,GAAI,EAAC;QACzBC,QAAQ,EAAE;MACZ,CAAC,EACD;QACER,IAAI,EAAE,KAAK;QACXC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAGC,GAAG,IAAKA,GAAG,CAAC,KAAK,CAAC;QAC1BC,MAAM,EAAGC,GAAG,IAAM,GAAEA,GAAI,EAAC;QACzBC,QAAQ,EAAE;MACZ,CAAC,EACD;QACER,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,QAAQ;QACfM,WAAW,EAAE;MACf,CAAC,CACF;MACDC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,IAAI,CAACL,IAAG,GAAI,EAAE;MACd,IAAI,CAACb,WAAU,GAAI,IAAI;MACvB,MAAM,IAAI,CAACoB,KAAI,CACZC,GAAG,CAAC,wBAAwB,EAC5BC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACV,IAAG,GAAIU,GAAG,CAACxB,IAAI;QACpB,IAAI,CAACe,YAAW,GAAIS,GAAG,CAACxB,IAAI,CAACyB,GAAG,CAAC,UAAUC,IAAI,EAAE;UAC/C,OAAO;YAAE,GAAGA;UAAK,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACd,IAAI,CAACC,QAAQ,CAAC;UACZC,IAAI,EAAE,OAAO;UACbC,OAAO,EAAEH;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;MACJ,IAAI,CAAC3B,WAAU,GAAI,KAAK;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}