{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e2d71c7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"mainPlayer\"\n};\nconst _hoisted_3 = [\"max\"];\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div data-v-5e2d71c7><div class=\\\"btnGroupControl\\\" data-v-5e2d71c7><button class=\\\"btnPrev\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-backward-fast\\\" data-v-5e2d71c7></i></button><button class=\\\"btnPlay\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-play\\\" data-v-5e2d71c7></i></button><button class=\\\"btnNext\\\" data-v-5e2d71c7><i class=\\\"fa-solid fa-forward-fast\\\" data-v-5e2d71c7></i></button></div><div class=\\\"showTime\\\" data-v-5e2d71c7><p style=\\\"display:inline;\\\" data-v-5e2d71c7>00:00:00</p><p style=\\\"display:inline;\\\" data-v-5e2d71c7>/ 01:00:00</p></div></div>\", 1);\nexport function render(_ctx, _cache) {\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.title), 1 /* TEXT */), _createElementVNode(\"audio\", {\n    ref: \"player\",\n    onTimeupdate: _cache[0] || (_cache[0] = (...args) => _ctx.ShowCurrentTime && _ctx.ShowCurrentTime(...args)),\n    preload: \"none\"\n  }, [_createElementVNode(\"source\", {\n    src: _ctx.playing_src,\n    type: \"audio/mpeg\"\n  }, null, 8 /* PROPS */, _hoisted_1)], 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.play && _ctx.play(...args))\n  }, \"Choi\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.pause && _ctx.pause(...args))\n  }, \"Nghi\"), _createVNode(_component_el_tooltip, {\n    visible: _ctx.ttvisible,\n    \"onUpdate:visible\": _cache[3] || (_cache[3] = $event => _ctx.ttvisible = $event),\n    content: \"Bottom center\",\n    placement: \"bottom\",\n    effect: \"light\",\n    trigger: \"click\",\n    \"virtual-triggering\": \"\",\n    \"virtual-ref\": _ctx.triggerRef\n  }, null, 8 /* PROPS */, [\"visible\", \"virtual-ref\"]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    onMousedown: _cache[4] || (_cache[4] = (...args) => _ctx.pg_mouseDown && _ctx.pg_mouseDown(...args)),\n    onMouseup: _cache[5] || (_cache[5] = (...args) => _ctx.pg_mouseUp && _ctx.pg_mouseUp(...args)),\n    onMousemove: _cache[6] || (_cache[6] = (...args) => _ctx.valueOnMouse && _ctx.valueOnMouse(...args)),\n    type: \"range\",\n    name: \"myRange\",\n    id: \"myRange\",\n    min: \"1\",\n    max: Math.floor(_ctx.trackinfo.totaltime),\n    class: \"slider\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.trackinfo.current_time = $event)\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3), [[_vModelText, _ctx.trackinfo.current_time]]), _hoisted_4])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","title","ref","onTimeupdate","_cache","args","ShowCurrentTime","preload","src","playing_src","type","onClick","play","pause","_createVNode","_component_el_tooltip","visible","ttvisible","$event","content","placement","effect","trigger","triggerRef","_hoisted_2","onMousedown","pg_mouseDown","onMouseup","pg_mouseUp","onMousemove","valueOnMouse","name","id","min","max","Math","floor","trackinfo","totaltime","current_time","_hoisted_4"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\MediaPlayer.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>{{ title }}</h1>\r\n    <audio ref=\"player\" @timeupdate=\"ShowCurrentTime\" preload=\"none\">\r\n      <source :src=\"playing_src\" type=\"audio/mpeg\" />\r\n    </audio>\r\n    <button @click=\"play\">Choi</button>\r\n    <button @click=\"pause\">Nghi</button>\r\n    <el-tooltip\r\n      v-model:visible=\"ttvisible\"\r\n      content=\"Bottom center\"\r\n      placement=\"bottom\"\r\n      effect=\"light\"\r\n      trigger=\"click\"\r\n      virtual-triggering\r\n      :virtual-ref=\"triggerRef\"\r\n    />\r\n    <div class=\"mainPlayer\">\r\n      <input\r\n        @mousedown=\"pg_mouseDown\"\r\n        @mouseup=\"pg_mouseUp\"\r\n        @mousemove=\"valueOnMouse\"\r\n        type=\"range\"\r\n        name=\"myRange\"\r\n        id=\"myRange\"\r\n        min=\"1\"\r\n        :max=\"Math.floor(trackinfo.totaltime)\"\r\n        class=\"slider\"\r\n        v-model=\"trackinfo.current_time\"\r\n      />\r\n      <div>\r\n        <div class=\"btnGroupControl\">\r\n          <button class=\"btnPrev\">\r\n            <i class=\"fa-solid fa-backward-fast\"></i>\r\n          </button>\r\n          <button class=\"btnPlay\"><i class=\"fa-solid fa-play\"></i></button>\r\n          <button class=\"btnNext\">\r\n            <i class=\"fa-solid fa-forward-fast\"></i>\r\n          </button>\r\n        </div>\r\n        <div class=\"showTime\">\r\n          <p style=\"display: inline\">00:00:00</p>\r\n          <p style=\"display: inline\">/ 01:00:00</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  name: \"AudioPlayer\",\r\n  props: {\r\n    src: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"Code For Fun\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      playing_src: \"\",\r\n      trackinfo: { title: \"\", current_time: 0, totaltime: 200 },\r\n      ttvisible: false,\r\n      triggerRef : {\r\n  getBoundingClientRect() {\r\n    return position.value\r\n  }},\r\n      position: {\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    play() {\r\n      if (!this.playing_src)\r\n        this.playing_src = `${this.axios.defaults.baseURL}api/Funapp/StreamAudio?id=8`; //api/Funapp/Playback  api/Funapp/StreamAudio\r\n      this.$refs.player.load();\r\n      this.$refs.player.play();\r\n    },\r\n    ShowCurrentTime() {},\r\n    pause() {\r\n      //this.$refs.player.pause();\r\n      this.$refs.player.currentTime = 205;\r\n    },\r\n    pg_mouseDown() {\r\n      this.ttvisible = true;\r\n    },\r\n    valueOnMouse: function(e) {\r\n      var x = e.clientX,\r\n        y = e.clientY;\r\n      this.$refs.tooltipSpan.style.top = y - 50 + \"px\";\r\n      this.$refs.tooltipSpan.style.left = x + \"px\";\r\n      position=\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.mainPlayer {\r\n  position: relative;\r\n  background-color: rgba(105, 11, 114, 0.63);\r\n  #myRange {\r\n    width: 100%;\r\n  }\r\n  .showTime {\r\n    position: absolute;\r\n    top: 20%;\r\n    right: 0px;\r\n    padding: {\r\n      left: 5px;\r\n      right: 12px;\r\n    }\r\n    margin: {\r\n      right: 0;\r\n    }\r\n    p {\r\n      color: rgb(255, 251, 1);\r\n    }\r\n    text-align: right;\r\n  }\r\n  .btnGroupControl {\r\n    button {\r\n      background: transparent;\r\n      cursor: pointer;\r\n      box-shadow: 2px 2px 4px 2px rgba(221, 197, 197, 0.336);\r\n      transition: box-shadow 0.1s ease-out;\r\n    }\r\n    button:active {\r\n      outline: none;\r\n      box-shadow: 0 0 50px 20px rgba(53, 166, 247, 0.7);\r\n      background-color: rgba(145, 201, 241, 0.7);\r\n    }\r\n    padding: {\r\n      top: 5px;\r\n      bottom: 5px;\r\n    }\r\n    width: 20%;\r\n  }\r\n  .btnPlay {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    margin: {\r\n      left: 8px;\r\n      right: 8px;\r\n    }\r\n  }\r\n  .btnPrev,\r\n  .btnNext {\r\n    border: none;\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":";;;;EAiBSA,KAAK,EAAC;AAAY;;;;;uBAhBzBC,mBAAA,CA6CM,cA5CJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,IAAA,CAAAC,KAAK,kBACZH,mBAAA,CAEQ;IAFDI,GAAG,EAAC,QAAQ;IAAEC,YAAU,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAM,eAAA,IAAAN,IAAA,CAAAM,eAAA,IAAAD,IAAA,CAAe;IAAEE,OAAO,EAAC;MACxDT,mBAAA,CAA+C;IAAtCU,GAAG,EAAER,IAAA,CAAAS,WAAW;IAAEC,IAAI,EAAC;+EAElCZ,mBAAA,CAAmC;IAA1Ba,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAY,IAAA,IAAAZ,IAAA,CAAAY,IAAA,IAAAP,IAAA,CAAI;KAAE,MAAI,GAC1BP,mBAAA,CAAoC;IAA3Ba,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAa,KAAA,IAAAb,IAAA,CAAAa,KAAA,IAAAR,IAAA,CAAK;KAAE,MAAI,GAC3BS,YAAA,CAQEC,qBAAA;IAPQC,OAAO,EAAEhB,IAAA,CAAAiB,SAAS;4DAATjB,IAAA,CAAAiB,SAAS,GAAAC,MAAA;IAC1BC,OAAO,EAAC,eAAe;IACvBC,SAAS,EAAC,QAAQ;IAClBC,MAAM,EAAC,OAAO;IACdC,OAAO,EAAC,OAAO;IACf,oBAAkB,EAAlB,EAAkB;IACjB,aAAW,EAAEtB,IAAA,CAAAuB;uDAEhBzB,mBAAA,CA4BM,OA5BN0B,UA4BM,G,gBA3BJ1B,mBAAA,CAWE;IAVC2B,WAAS,EAAArB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAA0B,YAAA,IAAA1B,IAAA,CAAA0B,YAAA,IAAArB,IAAA,CAAY;IACvBsB,SAAO,EAAAvB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAA4B,UAAA,IAAA5B,IAAA,CAAA4B,UAAA,IAAAvB,IAAA,CAAU;IACnBwB,WAAS,EAAAzB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAA8B,YAAA,IAAA9B,IAAA,CAAA8B,YAAA,IAAAzB,IAAA,CAAY;IACxBK,IAAI,EAAC,OAAO;IACZqB,IAAI,EAAC,SAAS;IACdC,EAAE,EAAC,SAAS;IACZC,GAAG,EAAC,GAAG;IACNC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACpC,IAAA,CAAAqC,SAAS,CAACC,SAAS;IACpC1C,KAAK,EAAC,QAAQ;+DACLI,IAAA,CAAAqC,SAAS,CAACE,YAAY,GAAArB,MAAA;uEAAtBlB,IAAA,CAAAqC,SAAS,CAACE,YAAY,E,GAEjCC,UAcM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}