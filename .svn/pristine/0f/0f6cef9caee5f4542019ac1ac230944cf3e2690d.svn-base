{"ast":null,"code":"export default {\n  mounted() {\n    this.upload_link = `${this.axios.defaults.baseURL}api/Funapp/MediaUpload`;\n  },\n  data() {\n    return {\n      columns: [{\n        name: \"name\",\n        required: true,\n        label: \"Dessert (100g serving)\",\n        align: \"left\",\n        field: row => row.name,\n        format: val => `${val}`,\n        sortable: true\n      }],\n      UploadList: [],\n      upload_link: \"\"\n    };\n  },\n  methods: {\n    submitUpload() {\n      if (this.UploadList.length < 1) {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: \"No file selected\"\n        });\n        return;\n      }\n      const formData = new FormData();\n      this.UploadList.forEach(file => {\n        formData.append(\"file\", file.raw);\n      });\n      this.axios.post(\"api/Funapp/MediaUpload\", formData).then(res => {\n        this.$message({\n          showClose: true,\n          type: \"success\",\n          message: `${res.data} + Upload success!`\n        });\n      }).catch(err => {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: err.response.data\n        });\n      });\n    },\n    ClearUploadList() {\n      this.$refs.uploadRef.clearFiles();\n    },\n    UploadByEL() {\n      if (this.UploadList.length < 1) {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: \"No file selected\"\n        });\n        return;\n      }\n      console.log(this.$refs.uploadRef);\n      this.$refs.uploadRef.submit();\n    },\n    UploadSuccess(response, file) {\n      this.$message({\n        showClose: true,\n        type: \"success\",\n        message: `Upload success: ${file.name}`\n      });\n    },\n    UploadError(err) {\n      const er_msg = JSON.parse(err.message);\n      this.$message({\n        showClose: true,\n        type: \"error\",\n        message: er_msg.Message\n      });\n    }\n  }\n};","map":{"version":3,"names":["mounted","upload_link","axios","defaults","baseURL","data","columns","name","required","label","align","field","row","format","val","sortable","UploadList","methods","submitUpload","length","$message","showClose","type","message","formData","FormData","forEach","file","append","raw","post","then","res","catch","err","response","ClearUploadList","$refs","uploadRef","clearFiles","UploadByEL","console","log","submit","UploadSuccess","UploadError","er_msg","JSON","parse","Message"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\ContentsManage.vue"],"sourcesContent":["<template>\r\n  <el-tabs type=\"border-card\" class=\"demo-tabs\">\r\n    <el-tab-pane>\r\n      <template #label>\r\n        <span class=\"custom-tabs-label\">\r\n          <el-icon><Guide /></el-icon>\r\n          <span>Files</span>\r\n        </span>\r\n      </template>\r\n      <el-upload\r\n        ref=\"uploadRef\"\r\n        class=\"upload-demo\"\r\n        :action=\"upload_link\"\r\n        :auto-upload=\"false\"\r\n        accept=\"audio/*\"\r\n        v-model:file-list=\"UploadList\"\r\n        limit=\"50\"\r\n        multiple\r\n        :on-success=\"UploadSuccess\"\r\n        :on-error=\"UploadError\"\r\n      >\r\n        <template #trigger>\r\n          <el-button class=\"btnSelect\" type=\"primary\">select file</el-button>\r\n        </template>\r\n\r\n        <el-button class=\"ml-3\" type=\"success\" @click=\"UploadByEL\">\r\n          upload to server\r\n        </el-button>\r\n\r\n        <el-button class=\"ml-3\" type=\"success\" @click=\"ClearUploadList\">\r\n          Clear List\r\n        </el-button>\r\n\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            audio files with a size less than 100Mb\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n    </el-tab-pane>\r\n    <el-tab-pane>\r\n      <template #label>\r\n        <span class=\"custom-tabs-label\">\r\n          <el-icon><Setting /></el-icon>\r\n          <span>Config</span>\r\n        </span>\r\n      </template>\r\n      <div class=\"q-pa-md\">\r\n        <q-table\r\n          flat\r\n          bordered\r\n          title=\"Documents\"\r\n          :rows=\"rows\"\r\n          :columns=\"columns\"\r\n          row-key=\"name\"\r\n          binary-state-sort\r\n        >\r\n          <template v-slot:body=\"props\">\r\n            <q-tr :props=\"props\">\r\n              <q-td key=\"name\" :props=\"props\">\r\n                {{ props.row.name }}\r\n                <q-popup-edit v-model=\"props.row.name\" v-slot=\"scope\">\r\n                  <q-input\r\n                    v-model=\"scope.value\"\r\n                    dense\r\n                    autofocus\r\n                    counter\r\n                    @keyup.enter=\"scope.set\"\r\n                  />\r\n                </q-popup-edit>\r\n              </q-td>\r\n              <q-td key=\"calories\" :props=\"props\">\r\n                {{ props.row.calories }}\r\n                <q-popup-edit\r\n                  v-model=\"props.row.calories\"\r\n                  title=\"Update calories\"\r\n                  buttons\r\n                  v-slot=\"scope\"\r\n                >\r\n                  <q-input\r\n                    type=\"number\"\r\n                    v-model=\"scope.value\"\r\n                    dense\r\n                    autofocus\r\n                  />\r\n                </q-popup-edit>\r\n              </q-td>\r\n              <q-td key=\"fat\" :props=\"props\">\r\n                <div class=\"text-pre-wrap\">{{ props.row.fat }}</div>\r\n                <q-popup-edit v-model=\"props.row.fat\" v-slot=\"scope\">\r\n                  <q-input\r\n                    type=\"textarea\"\r\n                    v-model=\"scope.value\"\r\n                    dense\r\n                    autofocus\r\n                  />\r\n                </q-popup-edit>\r\n              </q-td>\r\n              <q-td key=\"carbs\" :props=\"props\">\r\n                {{ props.row.carbs }}\r\n                <q-popup-edit\r\n                  v-model=\"props.row.carbs\"\r\n                  title=\"Update carbs\"\r\n                  buttons\r\n                  persistent\r\n                  v-slot=\"scope\"\r\n                >\r\n                  <q-input\r\n                    type=\"number\"\r\n                    v-model=\"scope.value\"\r\n                    dense\r\n                    autofocus\r\n                    hint=\"Use buttons to close\"\r\n                  />\r\n                </q-popup-edit>\r\n              </q-td>\r\n              <q-td key=\"protein\" :props=\"props\">{{ props.row.protein }}</q-td>\r\n              <q-td key=\"sodium\" :props=\"props\">{{ props.row.sodium }}</q-td>\r\n              <q-td key=\"calcium\" :props=\"props\">{{ props.row.calcium }}</q-td>\r\n              <q-td key=\"iron\" :props=\"props\">{{ props.row.iron }}</q-td>\r\n            </q-tr>\r\n          </template>\r\n        </q-table>\r\n      </div>\r\n    </el-tab-pane>\r\n  </el-tabs>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    this.upload_link = `${this.axios.defaults.baseURL}api/Funapp/MediaUpload`;\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [\r\n        {\r\n          name: \"name\",\r\n          required: true,\r\n          label: \"Dessert (100g serving)\",\r\n          align: \"left\",\r\n          field: (row) => row.name,\r\n          format: (val) => `${val}`,\r\n          sortable: true,\r\n        },\r\n      ],\r\n      UploadList: [],\r\n      upload_link: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    submitUpload() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      const formData = new FormData();\r\n      this.UploadList.forEach((file) => {\r\n        formData.append(\"file\", file.raw);\r\n      });\r\n      this.axios\r\n        .post(\"api/Funapp/MediaUpload\", formData)\r\n        .then((res) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"success\",\r\n            message: `${res.data} + Upload success!`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"error\",\r\n            message: err.response.data,\r\n          });\r\n        });\r\n    },\r\n    ClearUploadList() {\r\n      this.$refs.uploadRef.clearFiles();\r\n    },\r\n    UploadByEL() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(this.$refs.uploadRef);\r\n      this.$refs.uploadRef.submit();\r\n    },\r\n    UploadSuccess(response, file) {\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"success\",\r\n        message: `Upload success: ${file.name}`,\r\n      });\r\n    },\r\n    UploadError(err) {\r\n      const er_msg = JSON.parse(err.message);\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"error\",\r\n        message: er_msg.Message,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.upload-demo .btnSelect {\r\n  margin: {\r\n    right: 10px;\r\n  }\r\n}\r\n\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n.demo-tabs .custom-tabs-label .el-icon {\r\n  vertical-align: middle;\r\n}\r\n.demo-tabs .custom-tabs-label span {\r\n  vertical-align: middle;\r\n  margin-left: 4px;\r\n}\r\n</style>"],"mappings":"AAiIA,eAAe;EACbA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAU,GAAK,GAAE,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,OAAQ,wBAAuB;EAC3E,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QACEC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAE,wBAAwB;QAC/BC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAGC,GAAG,IAAKA,GAAG,CAACL,IAAI;QACxBM,MAAM,EAAGC,GAAG,IAAM,GAAEA,GAAI,EAAC;QACzBC,QAAQ,EAAE;MACZ,CAAC,CACF;MACDC,UAAU,EAAE,EAAE;MACdf,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDgB,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACF,UAAU,CAACG,MAAK,GAAI,CAAC,EAAE;QAC9B,IAAI,CAACC,QAAQ,CAAC;UACZC,SAAS,EAAE,IAAI;UACfC,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE;QACX,CAAC,CAAC;QACF;MACF;MACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,EAAE;MAC/B,IAAI,CAACT,UAAU,CAACU,OAAO,CAAEC,IAAI,IAAK;QAChCH,QAAQ,CAACI,MAAM,CAAC,MAAM,EAAED,IAAI,CAACE,GAAG,CAAC;MACnC,CAAC,CAAC;MACF,IAAI,CAAC3B,KAAI,CACN4B,IAAI,CAAC,wBAAwB,EAAEN,QAAQ,EACvCO,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACZ,QAAQ,CAAC;UACZC,SAAS,EAAE,IAAI;UACfC,IAAI,EAAE,SAAS;UACfC,OAAO,EAAG,GAAES,GAAG,CAAC3B,IAAI;QACtB,CAAC,CAAC;MACJ,CAAC,EACA4B,KAAK,CAAEC,GAAG,IAAK;QACd,IAAI,CAACd,QAAQ,CAAC;UACZC,SAAS,EAAE,IAAI;UACfC,IAAI,EAAE,OAAO;UACbC,OAAO,EAAEW,GAAG,CAACC,QAAQ,CAAC9B;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC;IACD+B,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,UAAU,EAAE;IACnC,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACxB,UAAU,CAACG,MAAK,GAAI,CAAC,EAAE;QAC9B,IAAI,CAACC,QAAQ,CAAC;UACZC,SAAS,EAAE,IAAI;UACfC,IAAI,EAAE,OAAO;UACbC,OAAO,EAAE;QACX,CAAC,CAAC;QACF;MACF;MACAkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,KAAK,CAACC,SAAS,CAAC;MACjC,IAAI,CAACD,KAAK,CAACC,SAAS,CAACK,MAAM,EAAE;IAC/B,CAAC;IACDC,aAAaA,CAACT,QAAQ,EAAER,IAAI,EAAE;MAC5B,IAAI,CAACP,QAAQ,CAAC;QACZC,SAAS,EAAE,IAAI;QACfC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAG,mBAAkBI,IAAI,CAACpB,IAAK;MACxC,CAAC,CAAC;IACJ,CAAC;IACDsC,WAAWA,CAACX,GAAG,EAAE;MACf,MAAMY,MAAK,GAAIC,IAAI,CAACC,KAAK,CAACd,GAAG,CAACX,OAAO,CAAC;MACtC,IAAI,CAACH,QAAQ,CAAC;QACZC,SAAS,EAAE,IAAI;QACfC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAEuB,MAAM,CAACG;MAClB,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}