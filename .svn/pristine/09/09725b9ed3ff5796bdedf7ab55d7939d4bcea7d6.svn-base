{"ast":null,"code":"import { computed } from 'vue';\nexport const useTableRowSelectionProps = {\n  selection: {\n    type: String,\n    default: 'none',\n    validator: v => ['single', 'multiple', 'none'].includes(v)\n  },\n  selected: {\n    type: Array,\n    default: () => []\n  }\n};\nexport const useTableRowSelectionEmits = ['update:selected', 'selection'];\nexport function useTableRowSelection(props, emit, computedRows, getRowKey) {\n  const selectedKeys = computed(() => {\n    const keys = {};\n    props.selected.map(getRowKey.value).forEach(key => {\n      keys[key] = true;\n    });\n    return keys;\n  });\n  const hasSelectionMode = computed(() => {\n    return props.selection !== 'none';\n  });\n  const singleSelection = computed(() => {\n    return props.selection === 'single';\n  });\n  const multipleSelection = computed(() => {\n    return props.selection === 'multiple';\n  });\n  const allRowsSelected = computed(() => computedRows.value.length !== 0 && computedRows.value.every(row => selectedKeys.value[getRowKey.value(row)] === true));\n  const someRowsSelected = computed(() => allRowsSelected.value !== true && computedRows.value.some(row => selectedKeys.value[getRowKey.value(row)] === true));\n  const rowsSelectedNumber = computed(() => props.selected.length);\n  function isRowSelected(key) {\n    return selectedKeys.value[key] === true;\n  }\n  function clearSelection() {\n    emit('update:selected', []);\n  }\n  function updateSelection(keys, rows, added, evt) {\n    emit('selection', {\n      rows,\n      added,\n      keys,\n      evt\n    });\n    const payload = singleSelection.value === true ? added === true ? rows : [] : added === true ? props.selected.concat(rows) : props.selected.filter(row => keys.includes(getRowKey.value(row)) === false);\n    emit('update:selected', payload);\n  }\n  return {\n    hasSelectionMode,\n    singleSelection,\n    multipleSelection,\n    allRowsSelected,\n    someRowsSelected,\n    rowsSelectedNumber,\n    isRowSelected,\n    clearSelection,\n    updateSelection\n  };\n}","map":{"version":3,"names":["computed","useTableRowSelectionProps","selection","type","String","default","validator","v","includes","selected","Array","useTableRowSelectionEmits","useTableRowSelection","props","emit","computedRows","getRowKey","selectedKeys","keys","map","value","forEach","key","hasSelectionMode","singleSelection","multipleSelection","allRowsSelected","length","every","row","someRowsSelected","some","rowsSelectedNumber","isRowSelected","clearSelection","updateSelection","rows","added","evt","payload","concat","filter"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/components/table/table-row-selection.js"],"sourcesContent":["import { computed } from 'vue'\n\nexport const useTableRowSelectionProps = {\n  selection: {\n    type: String,\n    default: 'none',\n    validator: v => [ 'single', 'multiple', 'none' ].includes(v)\n  },\n  selected: {\n    type: Array,\n    default: () => []\n  }\n}\n\nexport const useTableRowSelectionEmits = [ 'update:selected', 'selection' ]\n\nexport function useTableRowSelection (props, emit, computedRows, getRowKey) {\n  const selectedKeys = computed(() => {\n    const keys = {}\n    props.selected.map(getRowKey.value).forEach(key => {\n      keys[ key ] = true\n    })\n    return keys\n  })\n\n  const hasSelectionMode = computed(() => {\n    return props.selection !== 'none'\n  })\n\n  const singleSelection = computed(() => {\n    return props.selection === 'single'\n  })\n\n  const multipleSelection = computed(() => {\n    return props.selection === 'multiple'\n  })\n\n  const allRowsSelected = computed(() =>\n    computedRows.value.length !== 0 && computedRows.value.every(\n      row => selectedKeys.value[ getRowKey.value(row) ] === true\n    )\n  )\n\n  const someRowsSelected = computed(() =>\n    allRowsSelected.value !== true\n    && computedRows.value.some(row => selectedKeys.value[ getRowKey.value(row) ] === true)\n  )\n\n  const rowsSelectedNumber = computed(() => props.selected.length)\n\n  function isRowSelected (key) {\n    return selectedKeys.value[ key ] === true\n  }\n\n  function clearSelection () {\n    emit('update:selected', [])\n  }\n\n  function updateSelection (keys, rows, added, evt) {\n    emit('selection', { rows, added, keys, evt })\n\n    const payload = singleSelection.value === true\n      ? (added === true ? rows : [])\n      : (\n          added === true\n            ? props.selected.concat(rows)\n            : props.selected.filter(\n              row => keys.includes(getRowKey.value(row)) === false\n            )\n        )\n\n    emit('update:selected', payload)\n  }\n\n  return {\n    hasSelectionMode,\n    singleSelection,\n    multipleSelection,\n    allRowsSelected,\n    someRowsSelected,\n    rowsSelectedNumber,\n\n    isRowSelected,\n    clearSelection,\n    updateSelection\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}