{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable no-useless-escape */\n\nimport { ref, reactive } from 'vue';\nimport { injectProp } from '../utils/private/inject-obj-prop.js';\n\n/**\n * __ QUASAR_SSR __            -> runs on SSR on client or server\n * __ QUASAR_SSR_SERVER __     -> runs on SSR on server\n * __ QUASAR_SSR_CLIENT __     -> runs on SSR on client\n * __ QUASAR_SSR_PWA __        -> built with SSR+PWA; may run on SSR on client or on PWA client\n *                              (needs runtime detection)\n */\n\nexport const isRuntimeSsrPreHydration = __QUASAR_SSR_SERVER__ ? {\n  value: true\n} : ref(__QUASAR_SSR_CLIENT__ && (__QUASAR_SSR_PWA__ ? document.body.getAttribute('data-server-rendered') !== null : true));\nexport let iosEmulated = false;\nexport let iosCorrection;\nfunction getMatch(userAgent, platformMatch) {\n  const match = /(edg|edge|edga|edgios)\\/([\\w.]+)/.exec(userAgent) || /(opr)[\\/]([\\w.]+)/.exec(userAgent) || /(vivaldi)[\\/]([\\w.]+)/.exec(userAgent) || /(chrome|crios)[\\/]([\\w.]+)/.exec(userAgent) || /(version)(applewebkit)[\\/]([\\w.]+).*(safari)[\\/]([\\w.]+)/.exec(userAgent) || /(webkit)[\\/]([\\w.]+).*(version)[\\/]([\\w.]+).*(safari)[\\/]([\\w.]+)/.exec(userAgent) || /(firefox|fxios)[\\/]([\\w.]+)/.exec(userAgent) || /(webkit)[\\/]([\\w.]+)/.exec(userAgent) || /(opera)(?:.*version|)[\\/]([\\w.]+)/.exec(userAgent) || [];\n  return {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[2] || match[4] || '0',\n    versionNumber: match[4] || match[2] || '0',\n    platform: platformMatch[0] || ''\n  };\n}\nfunction getPlatformMatch(userAgent) {\n  return /(ipad)/.exec(userAgent) || /(ipod)/.exec(userAgent) || /(windows phone)/.exec(userAgent) || /(iphone)/.exec(userAgent) || /(kindle)/.exec(userAgent) || /(silk)/.exec(userAgent) || /(android)/.exec(userAgent) || /(win)/.exec(userAgent) || /(mac)/.exec(userAgent) || /(linux)/.exec(userAgent) || /(cros)/.exec(userAgent)\n  // TODO: Remove BlackBerry detection. BlackBerry OS, BlackBerry 10, and BlackBerry PlayBook OS\n  // is officially dead as of January 4, 2022 (https://www.blackberry.com/us/en/support/devices/end-of-life)\n  || /(playbook)/.exec(userAgent) || /(bb)/.exec(userAgent) || /(blackberry)/.exec(userAgent) || [];\n}\nconst hasTouch = __QUASAR_SSR_SERVER__ ? false : 'ontouchstart' in window || window.navigator.maxTouchPoints > 0;\nfunction applyIosCorrection(is) {\n  iosCorrection = {\n    is: {\n      ...is\n    }\n  };\n  delete is.mac;\n  delete is.desktop;\n  const platform = Math.min(window.innerHeight, window.innerWidth) > 414 ? 'ipad' : 'iphone';\n  Object.assign(is, {\n    mobile: true,\n    ios: true,\n    platform,\n    [platform]: true\n  });\n}\nfunction getPlatform(UA) {\n  const userAgent = UA.toLowerCase(),\n    platformMatch = getPlatformMatch(userAgent),\n    matched = getMatch(userAgent, platformMatch),\n    browser = {};\n  if (matched.browser) {\n    browser[matched.browser] = true;\n    browser.version = matched.version;\n    browser.versionNumber = parseInt(matched.versionNumber, 10);\n  }\n  if (matched.platform) {\n    browser[matched.platform] = true;\n  }\n  const knownMobiles = browser.android || browser.ios || browser.bb || browser.blackberry || browser.ipad || browser.iphone || browser.ipod || browser.kindle || browser.playbook || browser.silk || browser['windows phone'];\n\n  // These are all considered mobile platforms, meaning they run a mobile browser\n  if (knownMobiles === true || userAgent.indexOf('mobile') > -1) {\n    browser.mobile = true;\n    if (browser.edga || browser.edgios) {\n      browser.edge = true;\n      matched.browser = 'edge';\n    } else if (browser.crios) {\n      browser.chrome = true;\n      matched.browser = 'chrome';\n    } else if (browser.fxios) {\n      browser.firefox = true;\n      matched.browser = 'firefox';\n    }\n  }\n  // If it's not mobile we should consider it's desktop platform, meaning it runs a desktop browser\n  // It's a workaround for anonymized user agents\n  // (browser.cros || browser.mac || browser.linux || browser.win)\n  else {\n    browser.desktop = true;\n  }\n\n  // Set iOS if on iPod, iPad or iPhone\n  if (browser.ipod || browser.ipad || browser.iphone) {\n    browser.ios = true;\n  }\n  if (browser['windows phone']) {\n    browser.winphone = true;\n    delete browser['windows phone'];\n  }\n\n  // TODO: The assumption about WebKit based browsers below is not completely accurate.\n  // Google released Blink(a fork of WebKit) engine on April 3, 2013, which is really different than WebKit today.\n  // Today, one might want to check for WebKit to deal with its bugs, which is used on all browsers on iOS, and Safari browser on all platforms.\n\n  // Chrome, Opera 15+, Vivaldi and Safari are webkit based browsers\n  if (browser.chrome || browser.opr || browser.safari || browser.vivaldi\n  // we expect unknown, non iOS mobile browsers to be webkit based\n  || browser.mobile === true && browser.ios !== true && knownMobiles !== true) {\n    browser.webkit = true;\n  }\n\n  // TODO: (Qv3) rename the terms 'edge' to 'edge legacy'(or remove it) then 'edge chromium' to 'edge' to match with the known up-to-date terms\n  // Microsoft Edge is the new Chromium-based browser. Microsoft Edge Legacy is the old EdgeHTML-based browser (EOL: March 9, 2021).\n  if (browser.edg) {\n    matched.browser = 'edgechromium';\n    browser.edgeChromium = true;\n  }\n\n  // Blackberry browsers are marked as Safari on BlackBerry\n  if (browser.safari && browser.blackberry || browser.bb) {\n    matched.browser = 'blackberry';\n    browser.blackberry = true;\n  }\n\n  // Playbook browsers are marked as Safari on Playbook\n  if (browser.safari && browser.playbook) {\n    matched.browser = 'playbook';\n    browser.playbook = true;\n  }\n\n  // Opera 15+ are identified as opr\n  if (browser.opr) {\n    matched.browser = 'opera';\n    browser.opera = true;\n  }\n\n  // Stock Android browsers are marked as Safari on Android.\n  if (browser.safari && browser.android) {\n    matched.browser = 'android';\n    browser.android = true;\n  }\n\n  // Kindle browsers are marked as Safari on Kindle\n  if (browser.safari && browser.kindle) {\n    matched.browser = 'kindle';\n    browser.kindle = true;\n  }\n\n  // Kindle Silk browsers are marked as Safari on Kindle\n  if (browser.safari && browser.silk) {\n    matched.browser = 'silk';\n    browser.silk = true;\n  }\n  if (browser.vivaldi) {\n    matched.browser = 'vivaldi';\n    browser.vivaldi = true;\n  }\n\n  // Assign the name and platform variable\n  browser.name = matched.browser;\n  browser.platform = matched.platform;\n  if (__QUASAR_SSR_SERVER__ !== true) {\n    if (userAgent.indexOf('electron') > -1) {\n      browser.electron = true;\n    } else if (document.location.href.indexOf('-extension://') > -1) {\n      browser.bex = true;\n    } else {\n      if (window.Capacitor !== void 0) {\n        browser.capacitor = true;\n        browser.nativeMobile = true;\n        browser.nativeMobileWrapper = 'capacitor';\n      } else if (window._cordovaNative !== void 0 || window.cordova !== void 0) {\n        browser.cordova = true;\n        browser.nativeMobile = true;\n        browser.nativeMobileWrapper = 'cordova';\n      }\n      if (hasTouch === true && browser.mac === true && (browser.desktop === true && browser.safari === true || browser.nativeMobile === true && browser.android !== true && browser.ios !== true && browser.ipad !== true)) {\n        /*\n        * Correction needed for iOS since the default\n        * setting on iPad is to request desktop view; if we have\n        * touch support and the user agent says it's a\n        * desktop, we infer that it's an iPhone/iPad with desktop view\n        * so we must fix the false positives\n        */\n        applyIosCorrection(browser);\n      }\n    }\n  }\n  return browser;\n}\nconst userAgent = __QUASAR_SSR_SERVER__ ? '' : navigator.userAgent || navigator.vendor || window.opera;\nconst ssrClient = {\n  has: {\n    touch: false,\n    webStorage: false\n  },\n  within: {\n    iframe: false\n  }\n};\n\n// We export \"client\" for hydration error-free parts,\n// like touch directives who do not (and must NOT) wait\n// for the client takeover;\n// Do NOT import this directly in your app, unless you really know\n// what you are doing.\nexport const client = __QUASAR_SSR_SERVER__ ? ssrClient : {\n  userAgent,\n  is: getPlatform(userAgent),\n  has: {\n    touch: hasTouch\n  },\n  within: {\n    iframe: window.self !== window.top\n  }\n};\nconst Platform = {\n  install(opts) {\n    const {\n      $q\n    } = opts;\n    if (__QUASAR_SSR_SERVER__) {\n      $q.platform = this.parseSSR(opts.ssrContext);\n    } else if (isRuntimeSsrPreHydration.value === true) {\n      // takeover should increase accuracy for\n      // the rest of the props; we also avoid\n      // hydration errors\n      opts.onSSRHydrated.push(() => {\n        Object.assign($q.platform, client);\n        isRuntimeSsrPreHydration.value = false;\n        iosCorrection = void 0;\n      });\n\n      // we need to make platform reactive\n      // for the takeover phase\n      $q.platform = reactive(this);\n    } else {\n      $q.platform = this;\n    }\n  }\n};\nif (__QUASAR_SSR_SERVER__) {\n  Platform.parseSSR = ssrContext => {\n    const userAgent = ssrContext.req.headers['user-agent'] || ssrContext.req.headers['User-Agent'] || '';\n    return {\n      ...client,\n      userAgent,\n      is: getPlatform(userAgent)\n    };\n  };\n} else {\n  // do not access window.localStorage without\n  // devland actually using it as this will get\n  // reported under \"Cookies\" in Google Chrome\n  let hasWebStorage;\n  injectProp(client.has, 'webStorage', () => {\n    if (hasWebStorage !== void 0) {\n      return hasWebStorage;\n    }\n    try {\n      if (window.localStorage) {\n        hasWebStorage = true;\n        return true;\n      }\n    } catch (e) {}\n    hasWebStorage = false;\n    return false;\n  });\n  iosEmulated = client.is.ios === true && window.navigator.vendor.toLowerCase().indexOf('apple') === -1;\n  if (isRuntimeSsrPreHydration.value === true) {\n    // must match with server-side before\n    // client taking over in order to prevent\n    // hydration errors\n    Object.assign(Platform, client, iosCorrection, ssrClient);\n  } else {\n    Object.assign(Platform, client);\n  }\n}\nexport default Platform;","map":{"version":3,"names":["ref","reactive","injectProp","isRuntimeSsrPreHydration","__QUASAR_SSR_SERVER__","value","__QUASAR_SSR_CLIENT__","__QUASAR_SSR_PWA__","document","body","getAttribute","iosEmulated","iosCorrection","getMatch","userAgent","platformMatch","match","exec","browser","version","versionNumber","platform","getPlatformMatch","hasTouch","window","navigator","maxTouchPoints","applyIosCorrection","is","mac","desktop","Math","min","innerHeight","innerWidth","Object","assign","mobile","ios","getPlatform","UA","toLowerCase","matched","parseInt","knownMobiles","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","indexOf","edga","edgios","edge","crios","chrome","fxios","firefox","winphone","opr","safari","vivaldi","webkit","edg","edgeChromium","opera","name","electron","location","href","bex","Capacitor","capacitor","nativeMobile","nativeMobileWrapper","_cordovaNative","cordova","vendor","ssrClient","has","touch","webStorage","within","iframe","client","self","top","Platform","install","opts","$q","parseSSR","ssrContext","onSSRHydrated","push","req","headers","hasWebStorage","localStorage","e"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/plugins/Platform.js"],"sourcesContent":["/* eslint-disable no-useless-escape */\n\nimport { ref, reactive } from 'vue'\nimport { injectProp } from '../utils/private/inject-obj-prop.js'\n\n/**\n * __ QUASAR_SSR __            -> runs on SSR on client or server\n * __ QUASAR_SSR_SERVER __     -> runs on SSR on server\n * __ QUASAR_SSR_CLIENT __     -> runs on SSR on client\n * __ QUASAR_SSR_PWA __        -> built with SSR+PWA; may run on SSR on client or on PWA client\n *                              (needs runtime detection)\n */\n\nexport const isRuntimeSsrPreHydration = __QUASAR_SSR_SERVER__\n  ? { value: true }\n  : ref(\n    __QUASAR_SSR_CLIENT__ && (\n      __QUASAR_SSR_PWA__ ? document.body.getAttribute('data-server-rendered') !== null : true\n    )\n  )\n\nexport let iosEmulated = false\nexport let iosCorrection\n\nfunction getMatch (userAgent, platformMatch) {\n  const match = /(edg|edge|edga|edgios)\\/([\\w.]+)/.exec(userAgent)\n    || /(opr)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(vivaldi)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(chrome|crios)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(version)(applewebkit)[\\/]([\\w.]+).*(safari)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(webkit)[\\/]([\\w.]+).*(version)[\\/]([\\w.]+).*(safari)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(firefox|fxios)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(webkit)[\\/]([\\w.]+)/.exec(userAgent)\n    || /(opera)(?:.*version|)[\\/]([\\w.]+)/.exec(userAgent)\n    || []\n\n  return {\n    browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || '',\n    version: match[ 2 ] || match[ 4 ] || '0',\n    versionNumber: match[ 4 ] || match[ 2 ] || '0',\n    platform: platformMatch[ 0 ] || ''\n  }\n}\n\nfunction getPlatformMatch (userAgent) {\n  return /(ipad)/.exec(userAgent)\n    || /(ipod)/.exec(userAgent)\n    || /(windows phone)/.exec(userAgent)\n    || /(iphone)/.exec(userAgent)\n    || /(kindle)/.exec(userAgent)\n    || /(silk)/.exec(userAgent)\n    || /(android)/.exec(userAgent)\n    || /(win)/.exec(userAgent)\n    || /(mac)/.exec(userAgent)\n    || /(linux)/.exec(userAgent)\n    || /(cros)/.exec(userAgent)\n    // TODO: Remove BlackBerry detection. BlackBerry OS, BlackBerry 10, and BlackBerry PlayBook OS\n    // is officially dead as of January 4, 2022 (https://www.blackberry.com/us/en/support/devices/end-of-life)\n    || /(playbook)/.exec(userAgent)\n    || /(bb)/.exec(userAgent)\n    || /(blackberry)/.exec(userAgent)\n    || []\n}\n\nconst hasTouch = __QUASAR_SSR_SERVER__\n  ? false\n  : 'ontouchstart' in window || window.navigator.maxTouchPoints > 0\n\nfunction applyIosCorrection (is) {\n  iosCorrection = { is: { ...is } }\n\n  delete is.mac\n  delete is.desktop\n\n  const platform = Math.min(window.innerHeight, window.innerWidth) > 414\n    ? 'ipad'\n    : 'iphone'\n\n  Object.assign(is, {\n    mobile: true,\n    ios: true,\n    platform,\n    [ platform ]: true\n  })\n}\n\nfunction getPlatform (UA) {\n  const\n    userAgent = UA.toLowerCase(),\n    platformMatch = getPlatformMatch(userAgent),\n    matched = getMatch(userAgent, platformMatch),\n    browser = {}\n\n  if (matched.browser) {\n    browser[ matched.browser ] = true\n    browser.version = matched.version\n    browser.versionNumber = parseInt(matched.versionNumber, 10)\n  }\n\n  if (matched.platform) {\n    browser[ matched.platform ] = true\n  }\n\n  const knownMobiles = browser.android\n    || browser.ios\n    || browser.bb\n    || browser.blackberry\n    || browser.ipad\n    || browser.iphone\n    || browser.ipod\n    || browser.kindle\n    || browser.playbook\n    || browser.silk\n    || browser[ 'windows phone' ]\n\n  // These are all considered mobile platforms, meaning they run a mobile browser\n  if (knownMobiles === true || userAgent.indexOf('mobile') > -1) {\n    browser.mobile = true\n\n    if (browser.edga || browser.edgios) {\n      browser.edge = true\n      matched.browser = 'edge'\n    }\n    else if (browser.crios) {\n      browser.chrome = true\n      matched.browser = 'chrome'\n    }\n    else if (browser.fxios) {\n      browser.firefox = true\n      matched.browser = 'firefox'\n    }\n  }\n  // If it's not mobile we should consider it's desktop platform, meaning it runs a desktop browser\n  // It's a workaround for anonymized user agents\n  // (browser.cros || browser.mac || browser.linux || browser.win)\n  else {\n    browser.desktop = true\n  }\n\n  // Set iOS if on iPod, iPad or iPhone\n  if (browser.ipod || browser.ipad || browser.iphone) {\n    browser.ios = true\n  }\n\n  if (browser[ 'windows phone' ]) {\n    browser.winphone = true\n    delete browser[ 'windows phone' ]\n  }\n\n  // TODO: The assumption about WebKit based browsers below is not completely accurate.\n  // Google released Blink(a fork of WebKit) engine on April 3, 2013, which is really different than WebKit today.\n  // Today, one might want to check for WebKit to deal with its bugs, which is used on all browsers on iOS, and Safari browser on all platforms.\n\n  // Chrome, Opera 15+, Vivaldi and Safari are webkit based browsers\n  if (\n    browser.chrome\n    || browser.opr\n    || browser.safari\n    || browser.vivaldi\n    // we expect unknown, non iOS mobile browsers to be webkit based\n    || (\n      browser.mobile === true\n      && browser.ios !== true\n      && knownMobiles !== true\n    )\n  ) {\n    browser.webkit = true\n  }\n\n  // TODO: (Qv3) rename the terms 'edge' to 'edge legacy'(or remove it) then 'edge chromium' to 'edge' to match with the known up-to-date terms\n  // Microsoft Edge is the new Chromium-based browser. Microsoft Edge Legacy is the old EdgeHTML-based browser (EOL: March 9, 2021).\n  if (browser.edg) {\n    matched.browser = 'edgechromium'\n    browser.edgeChromium = true\n  }\n\n  // Blackberry browsers are marked as Safari on BlackBerry\n  if ((browser.safari && browser.blackberry) || browser.bb) {\n    matched.browser = 'blackberry'\n    browser.blackberry = true\n  }\n\n  // Playbook browsers are marked as Safari on Playbook\n  if (browser.safari && browser.playbook) {\n    matched.browser = 'playbook'\n    browser.playbook = true\n  }\n\n  // Opera 15+ are identified as opr\n  if (browser.opr) {\n    matched.browser = 'opera'\n    browser.opera = true\n  }\n\n  // Stock Android browsers are marked as Safari on Android.\n  if (browser.safari && browser.android) {\n    matched.browser = 'android'\n    browser.android = true\n  }\n\n  // Kindle browsers are marked as Safari on Kindle\n  if (browser.safari && browser.kindle) {\n    matched.browser = 'kindle'\n    browser.kindle = true\n  }\n\n  // Kindle Silk browsers are marked as Safari on Kindle\n  if (browser.safari && browser.silk) {\n    matched.browser = 'silk'\n    browser.silk = true\n  }\n\n  if (browser.vivaldi) {\n    matched.browser = 'vivaldi'\n    browser.vivaldi = true\n  }\n\n  // Assign the name and platform variable\n  browser.name = matched.browser\n  browser.platform = matched.platform\n\n  if (__QUASAR_SSR_SERVER__ !== true) {\n    if (userAgent.indexOf('electron') > -1) {\n      browser.electron = true\n    }\n    else if (document.location.href.indexOf('-extension://') > -1) {\n      browser.bex = true\n    }\n    else {\n      if (window.Capacitor !== void 0) {\n        browser.capacitor = true\n        browser.nativeMobile = true\n        browser.nativeMobileWrapper = 'capacitor'\n      }\n      else if (window._cordovaNative !== void 0 || window.cordova !== void 0) {\n        browser.cordova = true\n        browser.nativeMobile = true\n        browser.nativeMobileWrapper = 'cordova'\n      }\n\n      if (\n        hasTouch === true\n        && browser.mac === true\n        && (\n          (browser.desktop === true && browser.safari === true)\n          || (\n            browser.nativeMobile === true\n            && browser.android !== true\n            && browser.ios !== true\n            && browser.ipad !== true\n          )\n        )\n      ) {\n        /*\n        * Correction needed for iOS since the default\n        * setting on iPad is to request desktop view; if we have\n        * touch support and the user agent says it's a\n        * desktop, we infer that it's an iPhone/iPad with desktop view\n        * so we must fix the false positives\n        */\n        applyIosCorrection(browser)\n      }\n    }\n  }\n\n  return browser\n}\n\nconst userAgent = __QUASAR_SSR_SERVER__\n  ? ''\n  : navigator.userAgent || navigator.vendor || window.opera\n\nconst ssrClient = {\n  has: {\n    touch: false,\n    webStorage: false\n  },\n  within: { iframe: false }\n}\n\n// We export \"client\" for hydration error-free parts,\n// like touch directives who do not (and must NOT) wait\n// for the client takeover;\n// Do NOT import this directly in your app, unless you really know\n// what you are doing.\nexport const client = __QUASAR_SSR_SERVER__\n  ? ssrClient\n  : {\n      userAgent,\n      is: getPlatform(userAgent),\n      has: {\n        touch: hasTouch\n      },\n      within: {\n        iframe: window.self !== window.top\n      }\n    }\n\nconst Platform = {\n  install (opts) {\n    const { $q } = opts\n\n    if (__QUASAR_SSR_SERVER__) {\n      $q.platform = this.parseSSR(opts.ssrContext)\n    }\n    else if (isRuntimeSsrPreHydration.value === true) {\n      // takeover should increase accuracy for\n      // the rest of the props; we also avoid\n      // hydration errors\n      opts.onSSRHydrated.push(() => {\n        Object.assign($q.platform, client)\n        isRuntimeSsrPreHydration.value = false\n        iosCorrection = void 0\n      })\n\n      // we need to make platform reactive\n      // for the takeover phase\n      $q.platform = reactive(this)\n    }\n    else {\n      $q.platform = this\n    }\n  }\n}\n\nif (__QUASAR_SSR_SERVER__) {\n  Platform.parseSSR = (ssrContext) => {\n    const userAgent = ssrContext.req.headers[ 'user-agent' ] || ssrContext.req.headers[ 'User-Agent' ] || ''\n    return {\n      ...client,\n      userAgent,\n      is: getPlatform(userAgent)\n    }\n  }\n}\nelse {\n  // do not access window.localStorage without\n  // devland actually using it as this will get\n  // reported under \"Cookies\" in Google Chrome\n  let hasWebStorage\n\n  injectProp(client.has, 'webStorage', () => {\n    if (hasWebStorage !== void 0) {\n      return hasWebStorage\n    }\n\n    try {\n      if (window.localStorage) {\n        hasWebStorage = true\n        return true\n      }\n    }\n    catch (e) {}\n\n    hasWebStorage = false\n    return false\n  })\n\n  iosEmulated = client.is.ios === true\n    && window.navigator.vendor.toLowerCase().indexOf('apple') === -1\n\n  if (isRuntimeSsrPreHydration.value === true) {\n    // must match with server-side before\n    // client taking over in order to prevent\n    // hydration errors\n    Object.assign(Platform, client, iosCorrection, ssrClient)\n  }\n  else {\n    Object.assign(Platform, client)\n  }\n}\n\nexport default Platform\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}