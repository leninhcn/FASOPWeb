{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport GetOption from \"./Datas/gauge\";\nexport default {\n  data() {\n    return {\n      option: GetOption()\n    };\n  },\n  methods: {\n    DataUpdate() {\n      this.axios.post(\"api/FATPKanban/GetWoTarget\", {\n        PDLINE_ID: \"10002\",\n        DB: \"BU20\"\n      }).then(res => {\n        res.data.data.forEach(el => {\n          console.log(el);\n          var gaugeDT = [];\n          gaugeDT.push({\n            value: el.PERCENT,\n            name: el.WORK_ORDER,\n            title: {\n              offsetCenter: [\"0%\", \"-35%\"]\n            },\n            detail: {\n              valueAnimation: true,\n              offsetCenter: [\"0%\", \"-20%\"]\n            }\n          });\n          this.option.series.data;\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  mounted() {\n    this.DataUpdate();\n    var dom = document.getElementById(\"gause-chart\");\n    var myChart = this.$Echart.init(dom, null, {\n      renderer: \"canvas\",\n      useDirtyRect: false\n    });\n    // setInterval(function () {\n    //   gaugeData[0].value = +(Math.random() * 100).toFixed(2);\n    //   gaugeData[1].value = +(Math.random() * 100).toFixed(2);\n    //   gaugeData[2].value = +(Math.random() * 100).toFixed(2);\n    //   myChart.setOption({\n    //     series: [\n    //       {\n    //         data: gaugeData,\n    //         pointer: {\n    //           show: false\n    //         }\n    //       }\n    //     ]\n    //   });\n    // }, 5000);\n\n    if (this.option && typeof this.option === \"object\") {\n      myChart.setOption(this.option);\n    }\n    window.addEventListener(\"resize\", myChart.resize);\n  }\n};","map":{"version":3,"names":["GetOption","data","option","methods","DataUpdate","axios","post","PDLINE_ID","DB","then","res","forEach","el","console","log","gaugeDT","push","value","PERCENT","name","WORK_ORDER","title","offsetCenter","detail","valueAnimation","series","catch","err","mounted","dom","document","getElementById","myChart","$Echart","init","renderer","useDirtyRect","setOption","window","addEventListener","resize"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FATPkanban\\WoTarget.vue"],"sourcesContent":["<template>\r\n  <div id=\"gause-chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport GetOption from \"./Datas/gauge\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      option: GetOption(),\r\n    };\r\n  },\r\n  methods: {\r\n    DataUpdate() {\r\n      this.axios\r\n        .post(\"api/FATPKanban/GetWoTarget\", { PDLINE_ID: \"10002\", DB: \"BU20\" })\r\n        .then((res) => {\r\n          res.data.data.forEach(el => {\r\n            console.log(el);\r\n            var gaugeDT = [];\r\n            gaugeDT.push({\r\n      value: el.PERCENT,\r\n      name: el.WORK_ORDER,\r\n      title: {\r\n        offsetCenter: [\"0%\", \"-35%\"],\r\n      },\r\n      detail: {\r\n        valueAnimation: true,\r\n        offsetCenter: [\"0%\", \"-20%\"],\r\n      },\r\n    });\r\n            this.option.series.data\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.DataUpdate();\r\n    var dom = document.getElementById(\"gause-chart\");\r\n    var myChart = this.$Echart.init(dom, null, {\r\n      renderer: \"canvas\",\r\n      useDirtyRect: false,\r\n    });\r\n    // setInterval(function () {\r\n    //   gaugeData[0].value = +(Math.random() * 100).toFixed(2);\r\n    //   gaugeData[1].value = +(Math.random() * 100).toFixed(2);\r\n    //   gaugeData[2].value = +(Math.random() * 100).toFixed(2);\r\n    //   myChart.setOption({\r\n    //     series: [\r\n    //       {\r\n    //         data: gaugeData,\r\n    //         pointer: {\r\n    //           show: false\r\n    //         }\r\n    //       }\r\n    //     ]\r\n    //   });\r\n    // }, 5000);\r\n\r\n    if (this.option && typeof this.option === \"object\") {\r\n      myChart.setOption(this.option);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", myChart.resize);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#gause-chart {\r\n  position: relative;\r\n  height: 50vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":";AAKA,OAAOA,SAAQ,MAAO,eAAe;AAErC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAEF,SAAS;IACnB,CAAC;EACH,CAAC;EACDG,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAI,CACNC,IAAI,CAAC,4BAA4B,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAO,CAAC,EACrEC,IAAI,CAAEC,GAAG,IAAK;QACbA,GAAG,CAACT,IAAI,CAACA,IAAI,CAACU,OAAO,CAACC,EAAC,IAAK;UAC1BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;UACf,IAAIG,OAAM,GAAI,EAAE;UAChBA,OAAO,CAACC,IAAI,CAAC;YACnBC,KAAK,EAAEL,EAAE,CAACM,OAAO;YACjBC,IAAI,EAAEP,EAAE,CAACQ,UAAU;YACnBC,KAAK,EAAE;cACLC,YAAY,EAAE,CAAC,IAAI,EAAE,MAAM;YAC7B,CAAC;YACDC,MAAM,EAAE;cACNC,cAAc,EAAE,IAAI;cACpBF,YAAY,EAAE,CAAC,IAAI,EAAE,MAAM;YAC7B;UACF,CAAC,CAAC;UACM,IAAI,CAACpB,MAAM,CAACuB,MAAM,CAACxB,IAAG;QACxB,CAAC,CAAC;MACJ,CAAC,EACAyB,KAAK,CAAEC,GAAG,IAAK;QACdd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxB,UAAU,EAAE;IACjB,IAAIyB,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAChD,IAAIC,OAAM,GAAI,IAAI,CAACC,OAAO,CAACC,IAAI,CAACL,GAAG,EAAE,IAAI,EAAE;MACzCM,QAAQ,EAAE,QAAQ;MAClBC,YAAY,EAAE;IAChB,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAI,IAAI,CAAClC,MAAK,IAAK,OAAO,IAAI,CAACA,MAAK,KAAM,QAAQ,EAAE;MAClD8B,OAAO,CAACK,SAAS,CAAC,IAAI,CAACnC,MAAM,CAAC;IAChC;IAEAoC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEP,OAAO,CAACQ,MAAM,CAAC;EACnD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}