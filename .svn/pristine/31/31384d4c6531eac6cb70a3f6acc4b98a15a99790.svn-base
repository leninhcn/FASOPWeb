{"ast":null,"code":"export default {\n  data() {\n    return {\n      msg: \"\",\n      contentStyle: {\n        backgroundColor: \"rgba(0,0,0,0.02)\",\n        color: \"#555\"\n      },\n      contentActiveStyle: {\n        //  backgroundColor: '#eee',\n        color: \"black\"\n      },\n      thumbStyle: {\n        right: \"2px\",\n        borderRadius: \"2px\",\n        backgroundColor: \"#027be3\",\n        width: \"5px\",\n        opacity: \"0.75\"\n      }\n    };\n  },\n  methods: {\n    handlePaste(event) {\n      event.preventDefault(); // Ngăn chặn việc dán (paste) tự động\n\n      const clipboardData = event.clipboardData || window.clipboardData;\n      const pastedText = clipboardData.getData('text/plain');\n\n      // Kiểm tra nội dung của clipboard trước khi dán vào\n      if (pastedText.includes('abc')) {\n        // Thực hiện xử lý tùy ý\n        console.log('Nội dung clipboard chứa chuỗi \"abc\"');\n      } else {\n        // Không thực hiện dán\n        console.log('Nội dung clipboard không chứa chuỗi \"abc\"');\n      }\n    },\n    ShowTest() {\n      console.log(this.$refs.myMSG.innerText);\n      console.log(this.$refs.myMSG.children.length);\n      const childs = this.$refs.myMSG.children;\n      let temp = \"\";\n      for (let id = 0; id < childs.length; id++) {\n        const element = childs[id];\n        if (element.tagName !== \"IMG\") {\n          temp += element.innerText;\n        }\n      }\n      console.log(temp);\n    }\n  }\n};","map":{"version":3,"names":["data","msg","contentStyle","backgroundColor","color","contentActiveStyle","thumbStyle","right","borderRadius","width","opacity","methods","handlePaste","event","preventDefault","clipboardData","window","pastedText","getData","includes","console","log","ShowTest","$refs","myMSG","innerText","children","length","childs","temp","id","element","tagName"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MyTextBox.vue"],"sourcesContent":["<template>\r\n  <q-scroll-area\r\n    :thumb-style=\"thumbStyle\"\r\n    :content-style=\"contentStyle\"\r\n    :content-active-style=\"contentActiveStyle\"\r\n    style=\"height: 100px\"\r\n  >\r\n    <div class=\"myTextBox\">\r\n      <p ref=\"myMSG\" @paste=\"handlePaste\" class=\"apChild\" contenteditable>{{ msg }}</p>\r\n    </div>\r\n  </q-scroll-area>\r\n  <q-btn @click=\"ShowTest\">Chan</q-btn>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      msg: \"\",\r\n      contentStyle: {\r\n        backgroundColor: \"rgba(0,0,0,0.02)\",\r\n        color: \"#555\",\r\n      },\r\n      contentActiveStyle: {\r\n        //  backgroundColor: '#eee',\r\n        color: \"black\",\r\n      },\r\n      thumbStyle: {\r\n        right: \"2px\",\r\n        borderRadius: \"2px\",\r\n        backgroundColor: \"#027be3\",\r\n        width: \"5px\",\r\n        opacity: \"0.75\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handlePaste(event) {\r\n      event.preventDefault(); // Ngăn chặn việc dán (paste) tự động\r\n\r\n      const clipboardData = event.clipboardData || window.clipboardData;\r\n      const pastedText = clipboardData.getData('text/plain');\r\n\r\n      // Kiểm tra nội dung của clipboard trước khi dán vào\r\n      if (pastedText.includes('abc')) {\r\n        // Thực hiện xử lý tùy ý\r\n        console.log('Nội dung clipboard chứa chuỗi \"abc\"');\r\n      } else {\r\n        // Không thực hiện dán\r\n        console.log('Nội dung clipboard không chứa chuỗi \"abc\"');\r\n      }\r\n    },\r\n    ShowTest() {\r\n      console.log(this.$refs.myMSG.innerText);\r\n      console.log(this.$refs.myMSG.children.length);\r\n      const childs = this.$refs.myMSG.children;\r\n      let temp = \"\";\r\n      for (let id = 0; id < childs.length; id++) {\r\n        const element = childs[id];\r\n        if (element.tagName !== \"IMG\") {\r\n          temp += element.innerText;\r\n        }\r\n      }\r\n      console.log(temp);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.myTextBox {\r\n  border: 1px solid red;\r\n  text-align: left;\r\n  .apChild {\r\n    height: 100%;\r\n    color: yellow;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"AAeA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,YAAY,EAAE;QACZC,eAAe,EAAE,kBAAkB;QACnCC,KAAK,EAAE;MACT,CAAC;MACDC,kBAAkB,EAAE;QAClB;QACAD,KAAK,EAAE;MACT,CAAC;MACDE,UAAU,EAAE;QACVC,KAAK,EAAE,KAAK;QACZC,YAAY,EAAE,KAAK;QACnBL,eAAe,EAAE,SAAS;QAC1BM,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjBA,KAAK,CAACC,cAAc,EAAE,EAAE;;MAExB,MAAMC,aAAY,GAAIF,KAAK,CAACE,aAAY,IAAKC,MAAM,CAACD,aAAa;MACjE,MAAME,UAAS,GAAIF,aAAa,CAACG,OAAO,CAAC,YAAY,CAAC;;MAEtD;MACA,IAAID,UAAU,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC9B;QACAC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACpD,OAAO;QACL;QACAD,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MAC1D;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACTF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAACC,KAAK,CAACC,SAAS,CAAC;MACvCL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAACC,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAC;MAC7C,MAAMC,MAAK,GAAI,IAAI,CAACL,KAAK,CAACC,KAAK,CAACE,QAAQ;MACxC,IAAIG,IAAG,GAAI,EAAE;MACb,KAAK,IAAIC,EAAC,GAAI,CAAC,EAAEA,EAAC,GAAIF,MAAM,CAACD,MAAM,EAAEG,EAAE,EAAE,EAAE;QACzC,MAAMC,OAAM,GAAIH,MAAM,CAACE,EAAE,CAAC;QAC1B,IAAIC,OAAO,CAACC,OAAM,KAAM,KAAK,EAAE;UAC7BH,IAAG,IAAKE,OAAO,CAACN,SAAS;QAC3B;MACF;MACAL,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}