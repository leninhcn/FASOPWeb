{"ast":null,"code":"import { ref, computed, watch, nextTick } from 'vue';\nfunction samePagination(oldPag, newPag) {\n  for (const prop in newPag) {\n    if (newPag[prop] !== oldPag[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction fixPagination(p) {\n  if (p.page < 1) {\n    p.page = 1;\n  }\n  if (p.rowsPerPage !== void 0 && p.rowsPerPage < 1) {\n    p.rowsPerPage = 0;\n  }\n  return p;\n}\nexport const useTablePaginationProps = {\n  pagination: Object,\n  rowsPerPageOptions: {\n    type: Array,\n    default: () => [5, 7, 10, 15, 20, 25, 50, 0]\n  },\n  'onUpdate:pagination': [Function, Array]\n};\nexport function useTablePaginationState(vm, getCellValue) {\n  const {\n    props,\n    emit\n  } = vm;\n  const innerPagination = ref(Object.assign({\n    sortBy: null,\n    descending: false,\n    page: 1,\n    rowsPerPage: props.rowsPerPageOptions.length !== 0 ? props.rowsPerPageOptions[0] : 5\n  }, props.pagination));\n  const computedPagination = computed(() => {\n    const pag = props['onUpdate:pagination'] !== void 0 ? {\n      ...innerPagination.value,\n      ...props.pagination\n    } : innerPagination.value;\n    return fixPagination(pag);\n  });\n  const isServerSide = computed(() => computedPagination.value.rowsNumber !== void 0);\n  function sendServerRequest(pagination) {\n    requestServerInteraction({\n      pagination,\n      filter: props.filter\n    });\n  }\n  function requestServerInteraction(prop = {}) {\n    nextTick(() => {\n      emit('request', {\n        pagination: prop.pagination || computedPagination.value,\n        filter: prop.filter || props.filter,\n        getCellValue\n      });\n    });\n  }\n  function setPagination(val, forceServerRequest) {\n    const newPagination = fixPagination({\n      ...computedPagination.value,\n      ...val\n    });\n    if (samePagination(computedPagination.value, newPagination) === true) {\n      if (isServerSide.value === true && forceServerRequest === true) {\n        sendServerRequest(newPagination);\n      }\n      return;\n    }\n    if (isServerSide.value === true) {\n      sendServerRequest(newPagination);\n      return;\n    }\n    if (props.pagination !== void 0 && props['onUpdate:pagination'] !== void 0) {\n      emit('update:pagination', newPagination);\n    } else {\n      innerPagination.value = newPagination;\n    }\n  }\n  return {\n    innerPagination,\n    computedPagination,\n    isServerSide,\n    requestServerInteraction,\n    setPagination\n  };\n}\nexport function useTablePagination(vm, innerPagination, computedPagination, isServerSide, setPagination, filteredSortedRowsNumber) {\n  const {\n    props,\n    emit,\n    proxy: {\n      $q\n    }\n  } = vm;\n  const computedRowsNumber = computed(() => isServerSide.value === true ? computedPagination.value.rowsNumber || 0 : filteredSortedRowsNumber.value);\n  const firstRowIndex = computed(() => {\n    const {\n      page,\n      rowsPerPage\n    } = computedPagination.value;\n    return (page - 1) * rowsPerPage;\n  });\n  const lastRowIndex = computed(() => {\n    const {\n      page,\n      rowsPerPage\n    } = computedPagination.value;\n    return page * rowsPerPage;\n  });\n  const isFirstPage = computed(() => computedPagination.value.page === 1);\n  const pagesNumber = computed(() => computedPagination.value.rowsPerPage === 0 ? 1 : Math.max(1, Math.ceil(computedRowsNumber.value / computedPagination.value.rowsPerPage)));\n  const isLastPage = computed(() => lastRowIndex.value === 0 ? true : computedPagination.value.page >= pagesNumber.value);\n  const computedRowsPerPageOptions = computed(() => {\n    const opts = props.rowsPerPageOptions.includes(innerPagination.value.rowsPerPage) ? props.rowsPerPageOptions : [innerPagination.value.rowsPerPage].concat(props.rowsPerPageOptions);\n    return opts.map(count => ({\n      label: count === 0 ? $q.lang.table.allRows : '' + count,\n      value: count\n    }));\n  });\n  watch(pagesNumber, (lastPage, oldLastPage) => {\n    if (lastPage === oldLastPage) {\n      return;\n    }\n    const currentPage = computedPagination.value.page;\n    if (lastPage && !currentPage) {\n      setPagination({\n        page: 1\n      });\n    } else if (lastPage < currentPage) {\n      setPagination({\n        page: lastPage\n      });\n    }\n  });\n  function firstPage() {\n    setPagination({\n      page: 1\n    });\n  }\n  function prevPage() {\n    const {\n      page\n    } = computedPagination.value;\n    if (page > 1) {\n      setPagination({\n        page: page - 1\n      });\n    }\n  }\n  function nextPage() {\n    const {\n      page,\n      rowsPerPage\n    } = computedPagination.value;\n    if (lastRowIndex.value > 0 && page * rowsPerPage < computedRowsNumber.value) {\n      setPagination({\n        page: page + 1\n      });\n    }\n  }\n  function lastPage() {\n    setPagination({\n      page: pagesNumber.value\n    });\n  }\n  if (props['onUpdate:pagination'] !== void 0) {\n    emit('update:pagination', {\n      ...computedPagination.value\n    });\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex,\n    isFirstPage,\n    isLastPage,\n    pagesNumber,\n    computedRowsPerPageOptions,\n    computedRowsNumber,\n    firstPage,\n    prevPage,\n    nextPage,\n    lastPage\n  };\n}","map":{"version":3,"names":["ref","computed","watch","nextTick","samePagination","oldPag","newPag","prop","fixPagination","p","page","rowsPerPage","useTablePaginationProps","pagination","Object","rowsPerPageOptions","type","Array","default","Function","useTablePaginationState","vm","getCellValue","props","emit","innerPagination","assign","sortBy","descending","length","computedPagination","pag","value","isServerSide","rowsNumber","sendServerRequest","requestServerInteraction","filter","setPagination","val","forceServerRequest","newPagination","useTablePagination","filteredSortedRowsNumber","proxy","$q","computedRowsNumber","firstRowIndex","lastRowIndex","isFirstPage","pagesNumber","Math","max","ceil","isLastPage","computedRowsPerPageOptions","opts","includes","concat","map","count","label","lang","table","allRows","lastPage","oldLastPage","currentPage","firstPage","prevPage","nextPage"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/components/table/table-pagination.js"],"sourcesContent":["import { ref, computed, watch, nextTick } from 'vue'\n\nfunction samePagination (oldPag, newPag) {\n  for (const prop in newPag) {\n    if (newPag[ prop ] !== oldPag[ prop ]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction fixPagination (p) {\n  if (p.page < 1) {\n    p.page = 1\n  }\n  if (p.rowsPerPage !== void 0 && p.rowsPerPage < 1) {\n    p.rowsPerPage = 0\n  }\n  return p\n}\n\nexport const useTablePaginationProps = {\n  pagination: Object,\n  rowsPerPageOptions: {\n    type: Array,\n    default: () => [ 5, 7, 10, 15, 20, 25, 50, 0 ]\n  },\n\n  'onUpdate:pagination': [ Function, Array ]\n}\n\nexport function useTablePaginationState (vm, getCellValue) {\n  const { props, emit } = vm\n\n  const innerPagination = ref(\n    Object.assign({\n      sortBy: null,\n      descending: false,\n      page: 1,\n      rowsPerPage: props.rowsPerPageOptions.length !== 0\n        ? props.rowsPerPageOptions[ 0 ]\n        : 5\n    }, props.pagination)\n  )\n\n  const computedPagination = computed(() => {\n    const pag = props[ 'onUpdate:pagination' ] !== void 0\n      ? { ...innerPagination.value, ...props.pagination }\n      : innerPagination.value\n\n    return fixPagination(pag)\n  })\n\n  const isServerSide = computed(() => computedPagination.value.rowsNumber !== void 0)\n\n  function sendServerRequest (pagination) {\n    requestServerInteraction({\n      pagination,\n      filter: props.filter\n    })\n  }\n\n  function requestServerInteraction (prop = {}) {\n    nextTick(() => {\n      emit('request', {\n        pagination: prop.pagination || computedPagination.value,\n        filter: prop.filter || props.filter,\n        getCellValue\n      })\n    })\n  }\n\n  function setPagination (val, forceServerRequest) {\n    const newPagination = fixPagination({\n      ...computedPagination.value,\n      ...val\n    })\n\n    if (samePagination(computedPagination.value, newPagination) === true) {\n      if (isServerSide.value === true && forceServerRequest === true) {\n        sendServerRequest(newPagination)\n      }\n      return\n    }\n\n    if (isServerSide.value === true) {\n      sendServerRequest(newPagination)\n      return\n    }\n\n    if (\n      props.pagination !== void 0\n      && props[ 'onUpdate:pagination' ] !== void 0\n    ) {\n      emit('update:pagination', newPagination)\n    }\n    else {\n      innerPagination.value = newPagination\n    }\n  }\n\n  return {\n    innerPagination,\n    computedPagination,\n    isServerSide,\n\n    requestServerInteraction,\n    setPagination\n  }\n}\n\nexport function useTablePagination (vm, innerPagination, computedPagination, isServerSide, setPagination, filteredSortedRowsNumber) {\n  const { props, emit, proxy: { $q } } = vm\n\n  const computedRowsNumber = computed(() => (\n    isServerSide.value === true\n      ? computedPagination.value.rowsNumber || 0\n      : filteredSortedRowsNumber.value\n  ))\n\n  const firstRowIndex = computed(() => {\n    const { page, rowsPerPage } = computedPagination.value\n    return (page - 1) * rowsPerPage\n  })\n\n  const lastRowIndex = computed(() => {\n    const { page, rowsPerPage } = computedPagination.value\n    return page * rowsPerPage\n  })\n\n  const isFirstPage = computed(() => computedPagination.value.page === 1)\n\n  const pagesNumber = computed(() => (\n    computedPagination.value.rowsPerPage === 0\n      ? 1\n      : Math.max(\n        1,\n        Math.ceil(computedRowsNumber.value / computedPagination.value.rowsPerPage)\n      )\n  ))\n\n  const isLastPage = computed(() => (\n    lastRowIndex.value === 0\n      ? true\n      : computedPagination.value.page >= pagesNumber.value\n  ))\n\n  const computedRowsPerPageOptions = computed(() => {\n    const opts = props.rowsPerPageOptions.includes(innerPagination.value.rowsPerPage)\n      ? props.rowsPerPageOptions\n      : [ innerPagination.value.rowsPerPage ].concat(props.rowsPerPageOptions)\n\n    return opts.map(count => ({\n      label: count === 0 ? $q.lang.table.allRows : '' + count,\n      value: count\n    }))\n  })\n\n  watch(pagesNumber, (lastPage, oldLastPage) => {\n    if (lastPage === oldLastPage) {\n      return\n    }\n\n    const currentPage = computedPagination.value.page\n    if (lastPage && !currentPage) {\n      setPagination({ page: 1 })\n    }\n    else if (lastPage < currentPage) {\n      setPagination({ page: lastPage })\n    }\n  })\n\n  function firstPage () {\n    setPagination({ page: 1 })\n  }\n\n  function prevPage () {\n    const { page } = computedPagination.value\n    if (page > 1) {\n      setPagination({ page: page - 1 })\n    }\n  }\n\n  function nextPage () {\n    const { page, rowsPerPage } = computedPagination.value\n    if (lastRowIndex.value > 0 && page * rowsPerPage < computedRowsNumber.value) {\n      setPagination({ page: page + 1 })\n    }\n  }\n\n  function lastPage () {\n    setPagination({ page: pagesNumber.value })\n  }\n\n  if (props[ 'onUpdate:pagination' ] !== void 0) {\n    emit('update:pagination', { ...computedPagination.value })\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex,\n    isFirstPage,\n    isLastPage,\n    pagesNumber,\n    computedRowsPerPageOptions,\n    computedRowsNumber,\n\n    firstPage,\n    prevPage,\n    nextPage,\n    lastPage\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,KAAK;AAEpD,SAASC,cAAcA,CAAEC,MAAM,EAAEC,MAAM,EAAE;EACvC,KAAK,MAAMC,IAAI,IAAID,MAAM,EAAE;IACzB,IAAIA,MAAM,CAAEC,IAAI,CAAE,KAAKF,MAAM,CAAEE,IAAI,CAAE,EAAE;MACrC,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;AAEA,SAASC,aAAaA,CAAEC,CAAC,EAAE;EACzB,IAAIA,CAAC,CAACC,IAAI,GAAG,CAAC,EAAE;IACdD,CAAC,CAACC,IAAI,GAAG,CAAC;EACZ;EACA,IAAID,CAAC,CAACE,WAAW,KAAK,KAAK,CAAC,IAAIF,CAAC,CAACE,WAAW,GAAG,CAAC,EAAE;IACjDF,CAAC,CAACE,WAAW,GAAG,CAAC;EACnB;EACA,OAAOF,CAAC;AACV;AAEA,OAAO,MAAMG,uBAAuB,GAAG;EACrCC,UAAU,EAAEC,MAAM;EAClBC,kBAAkB,EAAE;IAClBC,IAAI,EAAEC,KAAK;IACXC,OAAO,EAAEA,CAAA,KAAM,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC9C,CAAC;EAED,qBAAqB,EAAE,CAAEC,QAAQ,EAAEF,KAAK;AAC1C,CAAC;AAED,OAAO,SAASG,uBAAuBA,CAAEC,EAAE,EAAEC,YAAY,EAAE;EACzD,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGH,EAAE;EAE1B,MAAMI,eAAe,GAAGzB,GAAG,CACzBc,MAAM,CAACY,MAAM,CAAC;IACZC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE,KAAK;IACjBlB,IAAI,EAAE,CAAC;IACPC,WAAW,EAAEY,KAAK,CAACR,kBAAkB,CAACc,MAAM,KAAK,CAAC,GAC9CN,KAAK,CAACR,kBAAkB,CAAE,CAAC,CAAE,GAC7B;EACN,CAAC,EAAEQ,KAAK,CAACV,UAAU,CAAC,CACrB;EAED,MAAMiB,kBAAkB,GAAG7B,QAAQ,CAAC,MAAM;IACxC,MAAM8B,GAAG,GAAGR,KAAK,CAAE,qBAAqB,CAAE,KAAK,KAAK,CAAC,GACjD;MAAE,GAAGE,eAAe,CAACO,KAAK;MAAE,GAAGT,KAAK,CAACV;IAAW,CAAC,GACjDY,eAAe,CAACO,KAAK;IAEzB,OAAOxB,aAAa,CAACuB,GAAG,CAAC;EAC3B,CAAC,CAAC;EAEF,MAAME,YAAY,GAAGhC,QAAQ,CAAC,MAAM6B,kBAAkB,CAACE,KAAK,CAACE,UAAU,KAAK,KAAK,CAAC,CAAC;EAEnF,SAASC,iBAAiBA,CAAEtB,UAAU,EAAE;IACtCuB,wBAAwB,CAAC;MACvBvB,UAAU;MACVwB,MAAM,EAAEd,KAAK,CAACc;IAChB,CAAC,CAAC;EACJ;EAEA,SAASD,wBAAwBA,CAAE7B,IAAI,GAAG,CAAC,CAAC,EAAE;IAC5CJ,QAAQ,CAAC,MAAM;MACbqB,IAAI,CAAC,SAAS,EAAE;QACdX,UAAU,EAAEN,IAAI,CAACM,UAAU,IAAIiB,kBAAkB,CAACE,KAAK;QACvDK,MAAM,EAAE9B,IAAI,CAAC8B,MAAM,IAAId,KAAK,CAACc,MAAM;QACnCf;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,SAASgB,aAAaA,CAAEC,GAAG,EAAEC,kBAAkB,EAAE;IAC/C,MAAMC,aAAa,GAAGjC,aAAa,CAAC;MAClC,GAAGsB,kBAAkB,CAACE,KAAK;MAC3B,GAAGO;IACL,CAAC,CAAC;IAEF,IAAInC,cAAc,CAAC0B,kBAAkB,CAACE,KAAK,EAAES,aAAa,CAAC,KAAK,IAAI,EAAE;MACpE,IAAIR,YAAY,CAACD,KAAK,KAAK,IAAI,IAAIQ,kBAAkB,KAAK,IAAI,EAAE;QAC9DL,iBAAiB,CAACM,aAAa,CAAC;MAClC;MACA;IACF;IAEA,IAAIR,YAAY,CAACD,KAAK,KAAK,IAAI,EAAE;MAC/BG,iBAAiB,CAACM,aAAa,CAAC;MAChC;IACF;IAEA,IACElB,KAAK,CAACV,UAAU,KAAK,KAAK,CAAC,IACxBU,KAAK,CAAE,qBAAqB,CAAE,KAAK,KAAK,CAAC,EAC5C;MACAC,IAAI,CAAC,mBAAmB,EAAEiB,aAAa,CAAC;IAC1C,CAAC,MACI;MACHhB,eAAe,CAACO,KAAK,GAAGS,aAAa;IACvC;EACF;EAEA,OAAO;IACLhB,eAAe;IACfK,kBAAkB;IAClBG,YAAY;IAEZG,wBAAwB;IACxBE;EACF,CAAC;AACH;AAEA,OAAO,SAASI,kBAAkBA,CAAErB,EAAE,EAAEI,eAAe,EAAEK,kBAAkB,EAAEG,YAAY,EAAEK,aAAa,EAAEK,wBAAwB,EAAE;EAClI,MAAM;IAAEpB,KAAK;IAAEC,IAAI;IAAEoB,KAAK,EAAE;MAAEC;IAAG;EAAE,CAAC,GAAGxB,EAAE;EAEzC,MAAMyB,kBAAkB,GAAG7C,QAAQ,CAAC,MAClCgC,YAAY,CAACD,KAAK,KAAK,IAAI,GACvBF,kBAAkB,CAACE,KAAK,CAACE,UAAU,IAAI,CAAC,GACxCS,wBAAwB,CAACX,KAC9B,CAAC;EAEF,MAAMe,aAAa,GAAG9C,QAAQ,CAAC,MAAM;IACnC,MAAM;MAAES,IAAI;MAAEC;IAAY,CAAC,GAAGmB,kBAAkB,CAACE,KAAK;IACtD,OAAO,CAACtB,IAAI,GAAG,CAAC,IAAIC,WAAW;EACjC,CAAC,CAAC;EAEF,MAAMqC,YAAY,GAAG/C,QAAQ,CAAC,MAAM;IAClC,MAAM;MAAES,IAAI;MAAEC;IAAY,CAAC,GAAGmB,kBAAkB,CAACE,KAAK;IACtD,OAAOtB,IAAI,GAAGC,WAAW;EAC3B,CAAC,CAAC;EAEF,MAAMsC,WAAW,GAAGhD,QAAQ,CAAC,MAAM6B,kBAAkB,CAACE,KAAK,CAACtB,IAAI,KAAK,CAAC,CAAC;EAEvE,MAAMwC,WAAW,GAAGjD,QAAQ,CAAC,MAC3B6B,kBAAkB,CAACE,KAAK,CAACrB,WAAW,KAAK,CAAC,GACtC,CAAC,GACDwC,IAAI,CAACC,GAAG,CACR,CAAC,EACDD,IAAI,CAACE,IAAI,CAACP,kBAAkB,CAACd,KAAK,GAAGF,kBAAkB,CAACE,KAAK,CAACrB,WAAW,CAAC,CAE/E,CAAC;EAEF,MAAM2C,UAAU,GAAGrD,QAAQ,CAAC,MAC1B+C,YAAY,CAAChB,KAAK,KAAK,CAAC,GACpB,IAAI,GACJF,kBAAkB,CAACE,KAAK,CAACtB,IAAI,IAAIwC,WAAW,CAAClB,KAClD,CAAC;EAEF,MAAMuB,0BAA0B,GAAGtD,QAAQ,CAAC,MAAM;IAChD,MAAMuD,IAAI,GAAGjC,KAAK,CAACR,kBAAkB,CAAC0C,QAAQ,CAAChC,eAAe,CAACO,KAAK,CAACrB,WAAW,CAAC,GAC7EY,KAAK,CAACR,kBAAkB,GACxB,CAAEU,eAAe,CAACO,KAAK,CAACrB,WAAW,CAAE,CAAC+C,MAAM,CAACnC,KAAK,CAACR,kBAAkB,CAAC;IAE1E,OAAOyC,IAAI,CAACG,GAAG,CAACC,KAAK,KAAK;MACxBC,KAAK,EAAED,KAAK,KAAK,CAAC,GAAGf,EAAE,CAACiB,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,GAAGJ,KAAK;MACvD5B,KAAK,EAAE4B;IACT,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;EAEF1D,KAAK,CAACgD,WAAW,EAAE,CAACe,QAAQ,EAAEC,WAAW,KAAK;IAC5C,IAAID,QAAQ,KAAKC,WAAW,EAAE;MAC5B;IACF;IAEA,MAAMC,WAAW,GAAGrC,kBAAkB,CAACE,KAAK,CAACtB,IAAI;IACjD,IAAIuD,QAAQ,IAAI,CAACE,WAAW,EAAE;MAC5B7B,aAAa,CAAC;QAAE5B,IAAI,EAAE;MAAE,CAAC,CAAC;IAC5B,CAAC,MACI,IAAIuD,QAAQ,GAAGE,WAAW,EAAE;MAC/B7B,aAAa,CAAC;QAAE5B,IAAI,EAAEuD;MAAS,CAAC,CAAC;IACnC;EACF,CAAC,CAAC;EAEF,SAASG,SAASA,CAAA,EAAI;IACpB9B,aAAa,CAAC;MAAE5B,IAAI,EAAE;IAAE,CAAC,CAAC;EAC5B;EAEA,SAAS2D,QAAQA,CAAA,EAAI;IACnB,MAAM;MAAE3D;IAAK,CAAC,GAAGoB,kBAAkB,CAACE,KAAK;IACzC,IAAItB,IAAI,GAAG,CAAC,EAAE;MACZ4B,aAAa,CAAC;QAAE5B,IAAI,EAAEA,IAAI,GAAG;MAAE,CAAC,CAAC;IACnC;EACF;EAEA,SAAS4D,QAAQA,CAAA,EAAI;IACnB,MAAM;MAAE5D,IAAI;MAAEC;IAAY,CAAC,GAAGmB,kBAAkB,CAACE,KAAK;IACtD,IAAIgB,YAAY,CAAChB,KAAK,GAAG,CAAC,IAAItB,IAAI,GAAGC,WAAW,GAAGmC,kBAAkB,CAACd,KAAK,EAAE;MAC3EM,aAAa,CAAC;QAAE5B,IAAI,EAAEA,IAAI,GAAG;MAAE,CAAC,CAAC;IACnC;EACF;EAEA,SAASuD,QAAQA,CAAA,EAAI;IACnB3B,aAAa,CAAC;MAAE5B,IAAI,EAAEwC,WAAW,CAAClB;IAAM,CAAC,CAAC;EAC5C;EAEA,IAAIT,KAAK,CAAE,qBAAqB,CAAE,KAAK,KAAK,CAAC,EAAE;IAC7CC,IAAI,CAAC,mBAAmB,EAAE;MAAE,GAAGM,kBAAkB,CAACE;IAAM,CAAC,CAAC;EAC5D;EAEA,OAAO;IACLe,aAAa;IACbC,YAAY;IACZC,WAAW;IACXK,UAAU;IACVJ,WAAW;IACXK,0BAA0B;IAC1BT,kBAAkB;IAElBsB,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRL;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}