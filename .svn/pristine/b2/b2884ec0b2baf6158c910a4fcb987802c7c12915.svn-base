{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  mounted() {\n    this.InitData();\n    this.upload_link = `${this.axios.defaults.baseURL}api/Funapp/MediaUpload`;\n  },\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  data() {\n    return {\n      columns: [],\n      rows: [],\n      UploadList: [],\n      upload_link: \"\"\n    };\n  },\n  methods: {\n    InitData() {\n      this.axios.get(\"api/Funapp/GetDocList?cate=all\").then(res => {\n        console.log(res.data);\n        for (let key in res.data[0]) {\n          this.columns.push({\n            name: key,\n            required: true,\n            label: key,\n            align: \"left\",\n            field: row => row[key],\n            format: val => `${val}`,\n            sortable: true\n          });\n        }\n        this.rows = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    submitUpload() {\n      if (this.UploadList.length < 1) {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: \"No file selected\"\n        });\n        return;\n      }\n      const formData = new FormData();\n      this.UploadList.forEach(file => {\n        formData.append(\"file\", file.raw);\n      });\n      this.axios.post(\"api/Funapp/MediaUpload\", formData).then(res => {\n        this.$message({\n          showClose: true,\n          type: \"success\",\n          message: `${res.data} + Upload success!`\n        });\n      }).catch(err => {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: err.response.data\n        });\n      });\n    },\n    ClearUploadList() {\n      this.$refs.uploadRef.clearFiles();\n    },\n    UploadByEL() {\n      if (this.UploadList.length < 1) {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: \"No file selected\"\n        });\n        return;\n      }\n      console.log(this.$refs.uploadRef);\n      this.$refs.uploadRef.submit();\n    },\n    UploadSuccess(response, file) {\n      this.$message({\n        showClose: true,\n        type: \"success\",\n        message: `Upload success: ${file.name}`\n      });\n    },\n    UploadError(err) {\n      const er_msg = JSON.parse(err.message);\n      this.$message({\n        showClose: true,\n        type: \"error\",\n        message: er_msg.Message\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mounted","InitData","upload_link","axios","defaults","baseURL","computed","GetUser","data","columns","rows","UploadList","methods","get","then","res","console","log","key","push","name","required","label","align","field","row","format","val","sortable","catch","err","submitUpload","length","$message","showClose","type","message","formData","FormData","forEach","file","append","raw","post","response","ClearUploadList","$refs","uploadRef","clearFiles","UploadByEL","submit","UploadSuccess","UploadError","er_msg","JSON","parse","Message"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\ContentsManage.vue"],"sourcesContent":["<template>\r\n  <el-tabs type=\"border-card\" class=\"demo-tabs\">\r\n    <el-tab-pane>\r\n      <template #label>\r\n        <span class=\"custom-tabs-label\">\r\n          <el-icon><Guide /></el-icon>\r\n          <span>Files</span>\r\n        </span>\r\n      </template>\r\n      <el-upload\r\n        ref=\"uploadRef\"\r\n        class=\"upload-demo\"\r\n        :action=\"upload_link\"\r\n        :auto-upload=\"false\"\r\n        accept=\"audio/*\"\r\n        v-model:file-list=\"UploadList\"\r\n        limit=\"50\"\r\n        multiple\r\n        :on-success=\"UploadSuccess\"\r\n        :on-error=\"UploadError\"\r\n      >\r\n        <template #trigger>\r\n          <el-button class=\"btnSelect\" type=\"primary\">select file</el-button>\r\n        </template>\r\n\r\n        <el-button class=\"ml-3\" type=\"success\" @click=\"UploadByEL\">\r\n          upload to server\r\n        </el-button>\r\n\r\n        <el-button class=\"ml-3\" type=\"success\" @click=\"ClearUploadList\">\r\n          Clear List\r\n        </el-button>\r\n\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">\r\n            audio files with a size less than 100Mb\r\n          </div>\r\n        </template>\r\n      </el-upload>\r\n    </el-tab-pane>\r\n    <el-tab-pane>\r\n      <template #label>\r\n        <span class=\"custom-tabs-label\">\r\n          <el-icon><Setting /></el-icon>\r\n          <span>Config</span>\r\n        </span>\r\n      </template>\r\n      <div class=\"q-pa-md\">\r\n        <q-table\r\n          flat\r\n          bordered\r\n          title=\"Documents\"\r\n          :rows=\"rows\"\r\n          :columns=\"columns\"\r\n          row-key=\"ID\"\r\n          binary-state-sort\r\n        >\r\n\r\n        </q-table>\r\n      </div>\r\n    </el-tab-pane>\r\n  </el-tabs>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  mounted() {\r\n    this.InitData();\r\n    this.upload_link = `${this.axios.defaults.baseURL}api/Funapp/MediaUpload`;\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      GetUser: \"getUser\",\r\n    }),\r\n  },\r\n  data() {\r\n    return {\r\n      columns: [],\r\n      rows: [],\r\n      UploadList: [],\r\n      upload_link: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    InitData() {\r\n      this.axios\r\n        .get(\"api/Funapp/GetDocList?cate=all\")\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          for (let key in res.data[0]) {\r\n            this.columns.push({\r\n              name: key,\r\n              required: true,\r\n              label: key,\r\n              align: \"left\",\r\n              field: (row) => row[key],\r\n              format: (val) => `${val}`,\r\n              sortable: true,\r\n            });\r\n          }\r\n          this.rows = res.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    submitUpload() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      const formData = new FormData();\r\n      this.UploadList.forEach((file) => {\r\n        formData.append(\"file\", file.raw);\r\n      });\r\n      this.axios\r\n        .post(\"api/Funapp/MediaUpload\", formData)\r\n        .then((res) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"success\",\r\n            message: `${res.data} + Upload success!`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"error\",\r\n            message: err.response.data,\r\n          });\r\n        });\r\n    },\r\n    ClearUploadList() {\r\n      this.$refs.uploadRef.clearFiles();\r\n    },\r\n    UploadByEL() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(this.$refs.uploadRef);\r\n      this.$refs.uploadRef.submit();\r\n    },\r\n    UploadSuccess(response, file) {\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"success\",\r\n        message: `Upload success: ${file.name}`,\r\n      });\r\n    },\r\n    UploadError(err) {\r\n      const er_msg = JSON.parse(err.message);\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"error\",\r\n        message: er_msg.Message,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.upload-demo .btnSelect {\r\n  margin: {\r\n    right: 10px;\r\n  }\r\n}\r\n\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n.demo-tabs .custom-tabs-label .el-icon {\r\n  vertical-align: middle;\r\n}\r\n.demo-tabs .custom-tabs-label span {\r\n  vertical-align: middle;\r\n  margin-left: 4px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}