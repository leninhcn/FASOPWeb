{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createBlock(_component_el_tree, {\n    data: $data.menu,\n    props: $data.defaultProps,\n    onNodeClick: $options.handleNodeClick\n  }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_tree","data","$data","menu","props","defaultProps","onNodeClick","$options","handleNodeClick"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\AdminArea\\MenuManage.vue"],"sourcesContent":["<template>\r\n    <el-tree :data=\"menu\" :props=\"defaultProps\" @node-click=\"handleNodeClick\" />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    methods: {\r\n        handleDragStart(node, ev) {\r\n            console.log('drag start', node, ev)\r\n        },\r\n        handleDragEnter(draggingNode, dropNode, ev) {\r\n            console.log('tree drag enter:', dropNode.label, ev)\r\n        },\r\n        handleDragLeave(draggingNode, dropNode, ev) {\r\n            console.log('tree drag leave:', dropNode.label, ev)\r\n        },\r\n        handleDragOver(draggingNode, dropNode, ev) {\r\n            console.log('tree drag over:', dropNode.label, ev)\r\n        },\r\n        handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n            console.log('tree drag end:', dropNode && dropNode.label, dropType, ev);\r\n        },\r\n        handleDrop(draggingNode, dropNode, dropType, ev) {\r\n            console.log('tree drop:', dropNode.label, dropType, ev)\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (dropNode.data.label === 'Level two 3-1') {\r\n                return type !== 'inner'\r\n            } else {\r\n                return true\r\n            }\r\n        },\r\n        allowDrag(draggingNode) {\r\n            return !draggingNode.data.label.includes('Level three 3-1-1')\r\n        },\r\n        handleNodeClick(data) {\r\n            console.log(data.label)\r\n        },\r\n        MenuToTree(parrent) {\r\n            const temp = [], child = [];\r\n            parrent.forEach(element => {\r\n                if (element.CHILDREN) child.push(this.MenuToTree(element.CHILDREN));\r\n                temp.push({\r\n                    label: element.NAME,\r\n                    children: child\r\n                })\r\n            });\r\n            return temp;\r\n        },\r\n        async getMenu() {\r\n            await this.axios.get('api/FAOnlineSOP/GetMainMenu').then((res) => {\r\n                this.menu = this.MenuToTree(res.data);\r\n                console.log(this.menu.children);\r\n            }).catch((err) => {\r\n                console.log(err.response.data);\r\n            });\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label',\r\n            },\r\n            menu: [\r\n                {\r\n                    label: 'Level one 1',\r\n                    children: [\r\n                        {\r\n                            label: 'Level two 1-1',\r\n                            children: [\r\n                                {\r\n                                    label: 'Level three 1-1-1',\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                }\r\n            ]\r\n        }\r\n    }, mounted() {\r\n        this.getMenu();\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":";;;uBACIA,YAAA,CAA4EC,kBAAA;IAAlEC,IAAI,EAAEC,KAAA,CAAAC,IAAI;IAAGC,KAAK,EAAEF,KAAA,CAAAG,YAAY;IAAGC,WAAU,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}