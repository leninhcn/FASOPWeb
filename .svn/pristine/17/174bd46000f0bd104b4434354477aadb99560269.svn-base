{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { globalConfig } from './global-config.js';\nconst nodesList = [];\nconst portalTypeList = [];\nlet portalIndex = 1;\nlet target = __QUASAR_SSR_SERVER__ ? void 0 : document.body;\nexport function createGlobalNode(id, portalType) {\n  const el = document.createElement('div');\n  el.id = portalType !== void 0 ? `q-portal--${portalType}--${portalIndex++}` : id;\n  if (globalConfig.globalNodes !== void 0) {\n    const cls = globalConfig.globalNodes.class;\n    if (cls !== void 0) {\n      el.className = cls;\n    }\n  }\n  target.appendChild(el);\n  nodesList.push(el);\n  portalTypeList.push(portalType);\n  return el;\n}\nexport function removeGlobalNode(el) {\n  const nodeIndex = nodesList.indexOf(el);\n  nodesList.splice(nodeIndex, 1);\n  portalTypeList.splice(nodeIndex, 1);\n  el.remove();\n}\nexport function changeGlobalNodesTarget(newTarget) {\n  if (newTarget === target) {\n    return;\n  }\n  target = newTarget;\n  if (target === document.body\n  // or we have less than 2 dialogs:\n  || portalTypeList.reduce((acc, type) => type === 'dialog' ? acc + 1 : acc, 0) < 2) {\n    nodesList.forEach(node => {\n      if (node.contains(target) === false) {\n        target.appendChild(node);\n      }\n    });\n    return;\n  }\n  const lastDialogIndex = portalTypeList.lastIndexOf('dialog');\n  for (let i = 0; i < nodesList.length; i++) {\n    const el = nodesList[i];\n    if ((i === lastDialogIndex || portalTypeList[i] !== 'dialog') && el.contains(target) === false) {\n      target.appendChild(el);\n    }\n  }\n}","map":{"version":3,"names":["globalConfig","nodesList","portalTypeList","portalIndex","target","__QUASAR_SSR_SERVER__","document","body","createGlobalNode","id","portalType","el","createElement","globalNodes","cls","class","className","appendChild","push","removeGlobalNode","nodeIndex","indexOf","splice","remove","changeGlobalNodesTarget","newTarget","reduce","acc","type","forEach","node","contains","lastDialogIndex","lastIndexOf","i","length"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/quasar/src/utils/private/global-nodes.js"],"sourcesContent":["import { globalConfig } from './global-config.js'\n\nconst nodesList = []\nconst portalTypeList = []\n\nlet portalIndex = 1\nlet target = __QUASAR_SSR_SERVER__\n  ? void 0\n  : document.body\n\nexport function createGlobalNode (id, portalType) {\n  const el = document.createElement('div')\n\n  el.id = portalType !== void 0\n    ? `q-portal--${ portalType }--${ portalIndex++ }`\n    : id\n\n  if (globalConfig.globalNodes !== void 0) {\n    const cls = globalConfig.globalNodes.class\n    if (cls !== void 0) {\n      el.className = cls\n    }\n  }\n\n  target.appendChild(el)\n  nodesList.push(el)\n  portalTypeList.push(portalType)\n\n  return el\n}\n\nexport function removeGlobalNode (el) {\n  const nodeIndex = nodesList.indexOf(el)\n\n  nodesList.splice(nodeIndex, 1)\n  portalTypeList.splice(nodeIndex, 1)\n\n  el.remove()\n}\n\nexport function changeGlobalNodesTarget (newTarget) {\n  if (newTarget === target) {\n    return\n  }\n\n  target = newTarget\n\n  if (\n    target === document.body\n    // or we have less than 2 dialogs:\n    || portalTypeList.reduce((acc, type) => (type === 'dialog' ? acc + 1 : acc), 0) < 2\n  ) {\n    nodesList.forEach(node => {\n      if (node.contains(target) === false) {\n        target.appendChild(node)\n      }\n    })\n\n    return\n  }\n\n  const lastDialogIndex = portalTypeList.lastIndexOf('dialog')\n\n  for (let i = 0; i < nodesList.length; i++) {\n    const el = nodesList[ i ]\n\n    if (\n      (i === lastDialogIndex || portalTypeList[ i ] !== 'dialog')\n      && el.contains(target) === false\n    ) {\n      target.appendChild(el)\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,SAAS,GAAG,EAAE;AACpB,MAAMC,cAAc,GAAG,EAAE;AAEzB,IAAIC,WAAW,GAAG,CAAC;AACnB,IAAIC,MAAM,GAAGC,qBAAqB,GAC9B,KAAK,CAAC,GACNC,QAAQ,CAACC,IAAI;AAEjB,OAAO,SAASC,gBAAgBA,CAAEC,EAAE,EAAEC,UAAU,EAAE;EAChD,MAAMC,EAAE,GAAGL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;EAExCD,EAAE,CAACF,EAAE,GAAGC,UAAU,KAAK,KAAK,CAAC,GACxB,aAAaA,UAAY,KAAKP,WAAW,EAAI,EAAC,GAC/CM,EAAE;EAEN,IAAIT,YAAY,CAACa,WAAW,KAAK,KAAK,CAAC,EAAE;IACvC,MAAMC,GAAG,GAAGd,YAAY,CAACa,WAAW,CAACE,KAAK;IAC1C,IAAID,GAAG,KAAK,KAAK,CAAC,EAAE;MAClBH,EAAE,CAACK,SAAS,GAAGF,GAAG;IACpB;EACF;EAEAV,MAAM,CAACa,WAAW,CAACN,EAAE,CAAC;EACtBV,SAAS,CAACiB,IAAI,CAACP,EAAE,CAAC;EAClBT,cAAc,CAACgB,IAAI,CAACR,UAAU,CAAC;EAE/B,OAAOC,EAAE;AACX;AAEA,OAAO,SAASQ,gBAAgBA,CAAER,EAAE,EAAE;EACpC,MAAMS,SAAS,GAAGnB,SAAS,CAACoB,OAAO,CAACV,EAAE,CAAC;EAEvCV,SAAS,CAACqB,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;EAC9BlB,cAAc,CAACoB,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;EAEnCT,EAAE,CAACY,MAAM,EAAE;AACb;AAEA,OAAO,SAASC,uBAAuBA,CAAEC,SAAS,EAAE;EAClD,IAAIA,SAAS,KAAKrB,MAAM,EAAE;IACxB;EACF;EAEAA,MAAM,GAAGqB,SAAS;EAElB,IACErB,MAAM,KAAKE,QAAQ,CAACC;EACpB;EAAA,GACGL,cAAc,CAACwB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAMA,IAAI,KAAK,QAAQ,GAAGD,GAAG,GAAG,CAAC,GAAGA,GAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EACnF;IACA1B,SAAS,CAAC4B,OAAO,CAACC,IAAI,IAAI;MACxB,IAAIA,IAAI,CAACC,QAAQ,CAAC3B,MAAM,CAAC,KAAK,KAAK,EAAE;QACnCA,MAAM,CAACa,WAAW,CAACa,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC;IAEF;EACF;EAEA,MAAME,eAAe,GAAG9B,cAAc,CAAC+B,WAAW,CAAC,QAAQ,CAAC;EAE5D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,SAAS,CAACkC,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,MAAMvB,EAAE,GAAGV,SAAS,CAAEiC,CAAC,CAAE;IAEzB,IACE,CAACA,CAAC,KAAKF,eAAe,IAAI9B,cAAc,CAAEgC,CAAC,CAAE,KAAK,QAAQ,KACvDvB,EAAE,CAACoB,QAAQ,CAAC3B,MAAM,CAAC,KAAK,KAAK,EAChC;MACAA,MAAM,CAACa,WAAW,CAACN,EAAE,CAAC;IACxB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}