{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { io } from \"socket.io-client\";\nimport { mapGetters } from \"vuex\";\nimport Qmsg from \"./Qmsg.vue\";\nimport ctlBar from \"./MsgSender.vue\";\nexport default {\n  name: \"HistoryBox\",\n  components: {\n    Qmsg,\n    ctlBar\n  },\n  computed: {\n    ...mapGetters({\n      GetUser: \"getUser\"\n    })\n  },\n  props: {},\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  },\n  mounted() {\n    this.RefreshData();\n    this.InitSocket();\n  },\n  data() {\n    return {\n      url: \"http://172.23.20.170:3001\",\n      socket: undefined,\n      connected: false,\n      HisVisible: false,\n      GroupID: 0,\n      testIMG: \"\",\n      MSGTextColor: {\n        Sender: \"indigo-14\",\n        Receiver: \"blue-grey-3\"\n      },\n      members: undefined,\n      ChatHis: [],\n      lastMSG: undefined,\n      lstGroupName: undefined,\n      ShowCtlBar: false\n    };\n  },\n  methods: {\n    UpdateGroupNameList(lstGroup) {\n      this.lstGroupName = lstGroup;\n      this.JoinSkRoom();\n    },\n    JoinSkRoom() {\n      if (!this.lstGroupName || this.lstGroupName.length <= 0) {\n        return;\n      }\n      return new Promise((resolve, reject) => {\n        if (this.connected) {\n          resolve(this.socket.emit(\"joinRoom\", this.lstGroupName));\n        } else {\n          reject(\"Not connect to Server\");\n        }\n      });\n    },\n    InitSocket() {\n      this.socket = io(this.url);\n      this.socket.on(\"connect\", () => {\n        console.log(\"Connected to server.\");\n        this.connected = true;\n        this.JoinSkRoom();\n        this.$refs.msgCtlBar.EnableSender(this.connected);\n      });\n      this.socket.on(\"disconnect\", () => {\n        console.log(\"Disconnect from server\");\n        this.connected = false;\n      });\n      this.socket.on(\"msgFromServer\", data => {\n        console.log(data);\n        if (data.msg.group_id == this.GroupID) {\n          this.sendReadAllMsg(this.GroupID);\n          const localMSG = {\n            Sender: this.members.find(it => it.EMP_ID == data.msg.sender).EMP_NAME,\n            ID: data.msg.sender,\n            message: [{\n              text: data.msg.content\n            }],\n            SENT_TIME: new Date()\n          };\n          this.MessageToUI(localMSG);\n        }\n        this.$emit(\"UpdateGroupInfo\", {\n          GROUP_ID: data.msg.group_id,\n          LAST_MSG: data.msg.content,\n          UNREAD_NUM: 1\n        });\n        this.$refs.player.play();\n      });\n    },\n    sendMessage(msg_sent) {\n      this.socket.emit(\"sendMsg\", {\n        type: \"ownMsg\",\n        msg: {\n          content: msg_sent,\n          type: \"text\",\n          sender: this.GetUser.EMP_ID,\n          receiver: 0,\n          group_id: this.GroupID,\n          media_id: 0\n        }\n      });\n    },\n    sendReadAllMsg(grp_id) {\n      this.socket.emit(\"readAllMSG\", {\n        type: \"ownMsg\",\n        msg: {\n          MES_ID: 0,\n          EMP_ID: this.GetUser.EMP_ID,\n          GROUP_ID: grp_id\n        }\n      });\n    },\n    MessageToUI(localMSG) {\n      if (this.lastMSG && this.lastMSG.ID == localMSG.ID) {\n        localMSG.message.forEach(el => {\n          this.ChatHis[this.ChatHis.length - 1].message.push(el);\n          this.ChatHis[this.ChatHis.length - 1].SENT_TIME = new Date();\n        });\n      } else {\n        this.ChatHis.push(localMSG);\n      }\n      this.lastMSG = localMSG;\n      this.ScrollHis();\n    },\n    LocalSentMSG(msg) {\n      if (this.GroupID <= 0) return;\n      const localMSG = {\n        Sender: this.GetUser.Name,\n        ID: this.GetUser.EMP_ID,\n        message: [{\n          text: msg\n        }],\n        SENT_TIME: new Date()\n      };\n      this.MessageToUI(localMSG);\n      this.sendMessage(msg);\n      this.$emit(\"UpdateLastMSG\", {\n        msg: msg,\n        group_id: this.GroupID\n      });\n    },\n    RefreshData(group_id, unreadNum) {\n      if (group_id > 0 && group_id != this.GroupID) {\n        this.GroupID = group_id;\n        this.GetMemberInfor();\n        this.GetChatHistory();\n        if (!this.ShowCtlBar) {\n          this.ShowCtlBar = true;\n        }\n        if (unreadNum > 0) this.sendReadAllMsg(group_id);\n      }\n    },\n    ShowAvatar(member) {\n      if (this.members) this.members.forEach(item => {\n        if (item.EMP_ID == member) {\n          return {\n            img: this.imageFromByte(item.AVATAR)\n          };\n        }\n      });\n    },\n    imageFromByte(strBase64) {\n      return `data:image/jpeg;base64,${strBase64}`;\n    },\n    async EmpAvatar(emp_id) {\n      const response = this.axios.get(`api/chatapp/MemberInfo?emp_id=${emp_id}`);\n      return new Promise((resol, ej) => {\n        response.then(res => {\n          resol(res.data.AVATAR);\n        }).catch(err => {\n          this.$message({\n            type: \"error\",\n            message: err\n          });\n          ej(\"Get emp avatar error!\");\n        });\n      });\n    },\n    async GetMemberInfor() {\n      await this.axios.get(`api/chatapp/GetGroupMemberInfo?groupID=${this.GroupID}&mem_avt=False`).then(res => {\n        this.members = res.data;\n        this.members.forEach(async el => {\n          var key = `avt${el.EMP_ID}`;\n          if (!sessionStorage.getItem(key) || sessionStorage.getItem(key).length < 500) {\n            const avt = await this.EmpAvatar(el.EMP_ID);\n            sessionStorage.setItem(key, avt);\n          }\n        });\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    },\n    async GetChatHistory() {\n      this.ChatHis = [];\n      await this.axios.get(`api/chatapp/GetHistory?groupID=${this.GroupID}&StartPoint=0`).then(res => {\n        var sentEMP = res.data[0].SENDER_ID;\n        var msg = undefined;\n        res.data.forEach(item => {\n          if (!msg) {\n            msg = {\n              Sender: item.SENDER,\n              ID: item.SENDER_ID,\n              message: [{\n                text: item.MES_CONTENT\n              }],\n              SENT_TIME: item.SENT_TIME\n            };\n          } else {\n            if (sentEMP == item.SENDER_ID) {\n              msg.message.push({\n                text: item.MES_CONTENT\n              });\n              msg.SENT_TIME = item.SENT_TIME;\n            } else {\n              this.ChatHis.push(msg);\n              msg = {\n                Sender: item.SENDER,\n                ID: item.SENDER_ID,\n                message: [{\n                  text: item.MES_CONTENT\n                }],\n                SENT_TIME: item.SENT_TIME\n              };\n            }\n          }\n          sentEMP = item.SENDER_ID;\n        });\n        this.ChatHis.push(msg);\n        this.HisVisible = false;\n        this.ScrollHis(1);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    ScrollHis(time2scroll = 300) {\n      setTimeout(() => {\n        this.$refs.hisScroll.setScrollPercentage(\"vertical\", 1, time2scroll);\n      }, 100);\n    }\n  },\n  onHisScroll({\n    verticalPosition\n  }) {\n    console.log(verticalPosition);\n  }\n};","map":{"version":3,"names":["io","mapGetters","Qmsg","ctlBar","name","components","computed","GetUser","props","beforeUnmount","socket","disconnect","mounted","RefreshData","InitSocket","data","url","undefined","connected","HisVisible","GroupID","testIMG","MSGTextColor","Sender","Receiver","members","ChatHis","lastMSG","lstGroupName","ShowCtlBar","methods","UpdateGroupNameList","lstGroup","JoinSkRoom","length","Promise","resolve","reject","emit","on","console","log","$refs","msgCtlBar","EnableSender","msg","group_id","sendReadAllMsg","localMSG","find","it","EMP_ID","sender","EMP_NAME","ID","message","text","content","SENT_TIME","Date","MessageToUI","$emit","GROUP_ID","LAST_MSG","UNREAD_NUM","player","play","sendMessage","msg_sent","type","receiver","media_id","grp_id","MES_ID","forEach","el","push","ScrollHis","LocalSentMSG","Name","unreadNum","GetMemberInfor","GetChatHistory","ShowAvatar","member","item","img","imageFromByte","AVATAR","strBase64","EmpAvatar","emp_id","response","axios","get","resol","ej","then","res","catch","err","$message","key","sessionStorage","getItem","avt","setItem","sentEMP","SENDER_ID","SENDER","MES_CONTENT","time2scroll","setTimeout","hisScroll","setScrollPercentage","onHisScroll","verticalPosition"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\HistoryBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <audio ref=\"player\" @timeupdate=\"ShowCurrentTime\" preload=\"auto\">\r\n      <source src=\"../../assets/audio/message_tone.mp3\" type=\"audio/mpeg\" />\r\n    </audio>\r\n    <q-scroll-area\r\n      dark\r\n      class=\"text-white rounded-borders\"\r\n      style=\"width: 100%; height: 370px\"\r\n      ref=\"hisScroll\"\r\n      @scroll=\"onHisScroll\"\r\n    >\r\n      <div class=\"q-pa-md row justify-center\">\r\n        <div style=\"width: 100%; margin-top: 5px; margin-bottom: 5px;\">\r\n          <Qmsg\r\n            v-for=\"(msg, id) in ChatHis\"\r\n            :key=\"id\"\r\n            :Name=\"msg.Sender\"\r\n            :MemberID=\"msg.ID\"\r\n            :BGColor=\"\r\n              msg.ID == GetUser.EMP_ID\r\n                ? MSGTextColor.Sender\r\n                : MSGTextColor.Receiver\r\n            \"\r\n            :Message=\"msg.message\"\r\n            :Sent=\"msg.ID == GetUser.EMP_ID\"\r\n            :Stamp=\"msg.SENT_TIME\"\r\n            TextColor=\"white\"\r\n          ></Qmsg>\r\n        </div>\r\n      </div>\r\n    </q-scroll-area>\r\n    <ctlBar\r\n      v-show=\"ShowCtlBar\"\r\n      ref=\"msgCtlBar\"\r\n      @MessageSent=\"LocalSentMSG\"\r\n    ></ctlBar>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport { io } from \"socket.io-client\";\r\nimport { mapGetters } from \"vuex\";\r\nimport Qmsg from \"./Qmsg.vue\";\r\nimport ctlBar from \"./MsgSender.vue\";\r\nexport default {\r\n  name: \"HistoryBox\",\r\n  components: {\r\n    Qmsg,\r\n    ctlBar,\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      GetUser: \"getUser\",\r\n    }),\r\n  },\r\n  props: {},\r\n  beforeUnmount() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.RefreshData();\r\n    this.InitSocket();\r\n  },\r\n  data() {\r\n    return {\r\n      url: \"http://172.23.20.170:3001\",\r\n      socket: undefined,\r\n      connected: false,\r\n      HisVisible: false,\r\n      GroupID: 0,\r\n      testIMG: \"\",\r\n      MSGTextColor: { Sender: \"indigo-14\", Receiver: \"blue-grey-3\" },\r\n      members: undefined,\r\n      ChatHis: [],\r\n      lastMSG: undefined,\r\n      lstGroupName: undefined,\r\n      ShowCtlBar: false,\r\n    };\r\n  },\r\n  methods: {\r\n    UpdateGroupNameList(lstGroup) {\r\n      this.lstGroupName = lstGroup;\r\n      this.JoinSkRoom();\r\n    },\r\n    JoinSkRoom() {\r\n      if (!this.lstGroupName || this.lstGroupName.length <= 0) {\r\n        return;\r\n      }\r\n      return new Promise((resolve, reject) => {\r\n        if (this.connected) {\r\n          resolve(this.socket.emit(\"joinRoom\", this.lstGroupName));\r\n        } else {\r\n          reject(\"Not connect to Server\");\r\n        }\r\n      });\r\n    },\r\n    InitSocket() {\r\n      this.socket = io(this.url);\r\n      this.socket.on(\"connect\", () => {\r\n        console.log(\"Connected to server.\");\r\n        this.connected = true;\r\n        this.JoinSkRoom();\r\n        this.$refs.msgCtlBar.EnableSender(this.connected);\r\n      });\r\n\r\n      this.socket.on(\"disconnect\", () => {\r\n        console.log(\"Disconnect from server\");\r\n        this.connected = false;\r\n      });\r\n      this.socket.on(\"msgFromServer\", (data) => {\r\n        console.log(data);\r\n        if (data.msg.group_id == this.GroupID) {\r\n          this.sendReadAllMsg(this.GroupID);\r\n          const localMSG = {\r\n            Sender: this.members.find((it) => it.EMP_ID == data.msg.sender)\r\n              .EMP_NAME,\r\n            ID: data.msg.sender,\r\n            message: [{ text: data.msg.content }],\r\n            SENT_TIME: new Date(),\r\n          };\r\n          this.MessageToUI(localMSG);\r\n        }\r\n        this.$emit(\"UpdateGroupInfo\", {\r\n          GROUP_ID: data.msg.group_id,\r\n          LAST_MSG: data.msg.content,\r\n          UNREAD_NUM: 1,\r\n        });\r\n        this.$refs.player.play();\r\n      });\r\n    },\r\n    sendMessage(msg_sent) {\r\n      this.socket.emit(\"sendMsg\", {\r\n        type: \"ownMsg\",\r\n        msg: {\r\n          content: msg_sent,\r\n          type: \"text\",\r\n          sender: this.GetUser.EMP_ID,\r\n          receiver: 0,\r\n          group_id: this.GroupID,\r\n          media_id: 0,\r\n        },\r\n      });\r\n    },\r\n    sendReadAllMsg(grp_id) {\r\n      this.socket.emit(\"readAllMSG\", {\r\n        type: \"ownMsg\",\r\n        msg: { MES_ID: 0, EMP_ID: this.GetUser.EMP_ID, GROUP_ID: grp_id },\r\n      });\r\n    },\r\n    MessageToUI(localMSG) {\r\n      if (this.lastMSG && this.lastMSG.ID == localMSG.ID) {\r\n        localMSG.message.forEach((el) => {\r\n          this.ChatHis[this.ChatHis.length - 1].message.push(el);\r\n          this.ChatHis[this.ChatHis.length - 1].SENT_TIME = new Date();\r\n        });\r\n      } else {\r\n        this.ChatHis.push(localMSG);\r\n      }\r\n      this.lastMSG = localMSG;\r\n      this.ScrollHis();\r\n    },\r\n    LocalSentMSG(msg) {\r\n      if (this.GroupID <= 0) return;\r\n      const localMSG = {\r\n        Sender: this.GetUser.Name,\r\n        ID: this.GetUser.EMP_ID,\r\n        message: [{ text: msg }],\r\n        SENT_TIME: new Date(),\r\n      };\r\n      this.MessageToUI(localMSG);\r\n      this.sendMessage(msg);\r\n      this.$emit(\"UpdateLastMSG\", { msg: msg, group_id: this.GroupID });\r\n    },\r\n    RefreshData(group_id, unreadNum) {\r\n      if (group_id > 0 && group_id != this.GroupID) {\r\n        this.GroupID = group_id;\r\n        this.GetMemberInfor();\r\n        this.GetChatHistory();\r\n        if (!this.ShowCtlBar) {\r\n          this.ShowCtlBar = true;\r\n        }\r\n        if (unreadNum > 0) this.sendReadAllMsg(group_id);\r\n      }\r\n    },\r\n    ShowAvatar(member) {\r\n      if (this.members)\r\n        this.members.forEach((item) => {\r\n          if (item.EMP_ID == member) {\r\n            return { img: this.imageFromByte(item.AVATAR) };\r\n          }\r\n        });\r\n    },\r\n    imageFromByte(strBase64) {\r\n      return `data:image/jpeg;base64,${strBase64}`;\r\n    },\r\n    async EmpAvatar(emp_id) {\r\n      const response = this.axios.get(\r\n        `api/chatapp/MemberInfo?emp_id=${emp_id}`\r\n      );\r\n      return new Promise((resol, ej) => {\r\n        response\r\n          .then((res) => {\r\n            resol(res.data.AVATAR);\r\n          })\r\n          .catch((err) => {\r\n            this.$message({\r\n              type: \"error\",\r\n              message: err,\r\n            });\r\n            ej(\"Get emp avatar error!\");\r\n          });\r\n      });\r\n    },\r\n    async GetMemberInfor() {\r\n      await this.axios\r\n        .get(\r\n          `api/chatapp/GetGroupMemberInfo?groupID=${this.GroupID}&mem_avt=False`\r\n        )\r\n        .then((res) => {\r\n          this.members = res.data;\r\n          this.members.forEach(async (el) => {\r\n            var key = `avt${el.EMP_ID}`;\r\n            if (\r\n              !sessionStorage.getItem(key) ||\r\n              sessionStorage.getItem(key).length < 500\r\n            ) {\r\n              const avt = await this.EmpAvatar(el.EMP_ID);\r\n              sessionStorage.setItem(key, avt);\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        });\r\n    },\r\n    async GetChatHistory() {\r\n      this.ChatHis = [];\r\n      await this.axios\r\n        .get(`api/chatapp/GetHistory?groupID=${this.GroupID}&StartPoint=0`)\r\n        .then((res) => {\r\n          var sentEMP = res.data[0].SENDER_ID;\r\n          var msg = undefined;\r\n          res.data.forEach((item) => {\r\n            if (!msg) {\r\n              msg = {\r\n                Sender: item.SENDER,\r\n                ID: item.SENDER_ID,\r\n                message: [{ text: item.MES_CONTENT }],\r\n                SENT_TIME: item.SENT_TIME,\r\n              };\r\n            } else {\r\n              if (sentEMP == item.SENDER_ID) {\r\n                msg.message.push({ text: item.MES_CONTENT });\r\n                msg.SENT_TIME = item.SENT_TIME;\r\n              } else {\r\n                this.ChatHis.push(msg);\r\n                msg = {\r\n                  Sender: item.SENDER,\r\n                  ID: item.SENDER_ID,\r\n                  message: [{ text: item.MES_CONTENT }],\r\n                  SENT_TIME: item.SENT_TIME,\r\n                };\r\n              }\r\n            }\r\n            sentEMP = item.SENDER_ID;\r\n          });\r\n          this.ChatHis.push(msg);\r\n          this.HisVisible = false;\r\n          this.ScrollHis(1);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    ScrollHis(time2scroll = 300) {\r\n      setTimeout(() => {\r\n        this.$refs.hisScroll.setScrollPercentage(\"vertical\", 1, time2scroll);\r\n      }, 100);\r\n    },\r\n  },\r\n  onHisScroll({ verticalPosition }) {\r\n    console.log(verticalPosition);\r\n  },\r\n};\r\n</script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style lang=\"scss\" scoped>\r\n.hello {\r\n  margin: {\r\n    left: 5px;\r\n    right: 5px;\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}