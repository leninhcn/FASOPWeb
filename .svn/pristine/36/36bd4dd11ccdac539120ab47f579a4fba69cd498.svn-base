{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\",\n  id: \"myMSG\",\n  ref: \"divContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","id","ref","_createElementBlock","_hoisted_1"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MyTextBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" id=\"myMSG\" ref=\"divContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      lstElements: [],\r\n      ActiveElement: undefined,\r\n    };\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"click\", this.ParentClickHandle);\r\n    document.addEventListener(\"keyup\", this.CheckInput);\r\n  },\r\n  methods: {\r\n    CheckInput(event) {\r\n      if (event.ctrlKey && event.key === \"v\") {\r\n        console.log(\"Đã nhấn Ctrl+V\");\r\n        // Thực hiện xử lý dán tại đây\r\n      }\r\n    },\r\n    AddTextInput() {\r\n      if (this.lstElements.length <= 0) {\r\n        const container = document.getElementById(\"myMSG\");\r\n        const input = document.createElement(\"span\");\r\n        input.type = \"text\";\r\n        input.classList.add(\"txtInput\");\r\n        container.appendChild(input);\r\n        this.lstElements.push({ type: \"text\", value: input, active: false });\r\n      }\r\n    },\r\n    ParentClickHandle(event) {\r\n      if (this.$refs.divContainer.contains(event.target)) {\r\n        this.ActiveElement = event.target;\r\n        console.log(this.ActiveElement);\r\n      } else {\r\n        this.ActiveElement = undefined;\r\n        console.log(\"chan\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.container {\r\n  border: 1px solid #000;\r\n  text-align: left;\r\n  cursor: text;\r\n  min-height: 30px;\r\n  input[type=\"text\"] {\r\n    width: auto;\r\n    display: inline-flex;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n}\r\n.txtInput {\r\n  width: 100%;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC,WAAW;EAACC,EAAE,EAAC,OAAO;EAACC,GAAG,EAAC;;;uBAAtCC,mBAAA,CAA2D,OAA3DC,UAA2D"},"metadata":{},"sourceType":"module","externalDependencies":[]}