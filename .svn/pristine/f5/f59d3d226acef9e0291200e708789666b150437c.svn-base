{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"template\", null, [_createVNode(_component_el_tree, {\n    data: $data.menu,\n    props: $data.defaultProps,\n    onNodeClick: $options.handleNodeClick\n  }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_tree","data","$data","menu","props","defaultProps","onNodeClick","$options","handleNodeClick"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\AdminArea\\MenuManage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <template>\r\n            <el-tree :data=\"menu\" :props=\"defaultProps\" @node-click=\"handleNodeClick\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    methods: {\r\n        handleDragStart(node, ev) {\r\n            console.log('drag start', node, ev)\r\n        },\r\n        handleDragEnter(draggingNode, dropNode, ev) {\r\n            console.log('tree drag enter:', dropNode.label, ev)\r\n        },\r\n        handleDragLeave(draggingNode, dropNode, ev) {\r\n            console.log('tree drag leave:', dropNode.label, ev)\r\n        },\r\n        handleDragOver(draggingNode, dropNode, ev) {\r\n            console.log('tree drag over:', dropNode.label, ev)\r\n        },\r\n        handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n            console.log('tree drag end:', dropNode && dropNode.label, dropType, ev);\r\n        },\r\n        handleDrop(draggingNode, dropNode, dropType, ev) {\r\n            console.log('tree drop:', dropNode.label, dropType, ev)\r\n        },\r\n        allowDrop(draggingNode, dropNode, type) {\r\n            if (dropNode.data.label === 'Level two 3-1') {\r\n                return type !== 'inner'\r\n            } else {\r\n                return true\r\n            }\r\n        },\r\n        allowDrag(draggingNode) {\r\n            return !draggingNode.data.label.includes('Level three 3-1-1')\r\n        },\r\n        handleNodeClick(data) {\r\n            console.log(data)\r\n        }\r\n    }, data() {\r\n        return {\r\n            defaultProps: {\r\n                children: 'children',\r\n                label: 'label',\r\n            },\r\n            menu: [\r\n                {\r\n                    label: 'Level one 1'\r\n                },\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":";;;uBACIA,mBAAA,CAIM,cAHFC,mBAAA,CAEW,mBADPC,YAAA,CAA4EC,kBAAA;IAAlEC,IAAI,EAAEC,KAAA,CAAAC,IAAI;IAAGC,KAAK,EAAEF,KAAA,CAAAG,YAAY;IAAGC,WAAU,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}