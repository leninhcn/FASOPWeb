{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport sop_step from './StepDetails.vue';\nimport { mapActions, mapGetters, mapMutations } from \"vuex\";\nexport default {\n  mounted() {\n    this.UpdateSOP(undefined);\n    this.GetExistedErrorCode();\n  },\n  unmounted() {\n    this.UpdateSOP(undefined);\n    this.UpdateSOPstep(undefined);\n    this.current_id = 0;\n  },\n  computed: {\n    ...mapGetters({\n      sop_list: 'getSOPList',\n      sop_stt: 'getSOPstatus'\n    })\n  },\n  data() {\n    return {\n      searchData: {\n        serial_number: '',\n        er_id: '',\n        er_code: ''\n      },\n      showDetail: false,\n      current_id: 0,\n      current_sop_name: '',\n      gridData: [],\n      snErrorCodes: ['N/A']\n    };\n  },\n  methods: {\n    ...mapActions(['GetSOPErrorCode']),\n    ...mapMutations(['UpdateSOP', 'UpdateSOPstep']),\n    async getSOPbyErrorCode(er_code) {\n      await this.GetSOPErrorCode(er_code).catch(err => {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: err.response.data\n        });\n      });\n    },\n    handleRowClick(row) {\n      this.current_id = row.SOP_ID;\n      this.current_sop_name = row.SOP_NAME;\n      this.showDetail = true;\n    },\n    rowCustomStyle() {\n      return {\n        cursor: 'pointer'\n      };\n    },\n    async GetExistedErrorCode() {\n      await this.axios.get('api/FAOnlineSOP/GetAllExistedError').then(res => {\n        this.snErrorCodes = [];\n        res.data.forEach(item => {\n          this.snErrorCodes.push(item.DEFECT_CODE);\n        });\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    },\n    LoadSNError: async function () {\n      if (!this.searchData.serial_number) {\n        this.UpdateSOP(undefined);\n        return null;\n      }\n      await this.axios.get(`api/FAOnlineSOP/GetSNErrorCode/sn/${this.searchData.serial_number}`).then(result => {\n        this.snErrorCodes = [];\n        if (result.data.length > 0) {\n          // result.data.forEach(item => {\n          //     this.snErrorCodes.push(item.DEFECT_CODE);\n          // });\n          this.searchData.er_code = result.data[0].DEFECT_CODE;\n          this.GetSOPErrorCode(this.searchData.er_code);\n        }\n      }).catch(err => {\n        this.$message({\n          showClose: true,\n          type: \"error\",\n          message: err.response.data\n        });\n        this.UpdateSOP(undefined);\n        // this.snErrorCodes = ['N/A'];\n        this.searchData.er_code = '';\n      });\n    },\n    onSubmit() {\n      if (!this.searchData.er_code) return;\n      this.GetSOPErrorCode(this.searchData.er_code);\n    }\n  },\n  components: {\n    sop_step\n  }\n};","map":{"version":3,"names":["sop_step","mapActions","mapGetters","mapMutations","mounted","UpdateSOP","undefined","GetExistedErrorCode","unmounted","UpdateSOPstep","current_id","computed","sop_list","sop_stt","data","searchData","serial_number","er_id","er_code","showDetail","current_sop_name","gridData","snErrorCodes","methods","getSOPbyErrorCode","GetSOPErrorCode","catch","err","$message","showClose","type","message","response","handleRowClick","row","SOP_ID","SOP_NAME","rowCustomStyle","cursor","axios","get","then","res","forEach","item","push","DEFECT_CODE","console","log","LoadSNError","result","length","onSubmit","components"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FAComs\\RepairSOP.vue"],"sourcesContent":["<template>\r\n    <div class=\"eltb\">\r\n        <el-form :inline=\"true\" :model=\"searchData\" class=\"demo-form-inline\">\r\n            <el-form-item label=\"Serial Number\">\r\n                <el-input v-model=\"searchData.serial_number\" @keyup.enter=\"LoadSNError\" placeholder=\"Serial Number\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"Error Code\">\r\n                <el-select v-for=\"(item, index) in snErrorCodes\" :key=\"index\" @change=\"getSOPbyErrorCode\"\r\n                    v-model=\"searchData.er_code\" placeholder=\"Error Code\">\r\n                    <el-option :label=\"item\" :value=\"item\" />\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"onSubmit\">Query</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-table :data=\"sop_list\" @row-click=\"handleRowClick\" :row-style=\"rowCustomStyle\">\r\n            <el-table-column property=\"DEFECT_CODE\" label=\"Error Code\" />\r\n            <el-table-column property=\"SOP_NAME\" label=\"SOP Name\" />\r\n            <el-table-column property=\"DESCRIPTIONS\" label=\"Descriptions\" />\r\n            <el-table-column property=\"UPDATE_TIME\" label=\"Update Time\" />\r\n            <el-table-column property=\"UPDATE_USER\" label=\"Update User\" />\r\n        </el-table>\r\n        <el-dialog v-model=\"showDetail\" :title=\"current_sop_name\">\r\n            <sop_step v-if=\"showDetail\" :sop_id=\"current_id\"></sop_step>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport sop_step from './StepDetails.vue'\r\nimport {\r\n    mapActions,\r\n    mapGetters,\r\n    mapMutations\r\n} from \"vuex\";\r\nexport default {\r\n    mounted() {\r\n        this.UpdateSOP(undefined);\r\n        this.GetExistedErrorCode();\r\n    },\r\n    unmounted() {\r\n        this.UpdateSOP(undefined);\r\n        this.UpdateSOPstep(undefined);\r\n        this.current_id = 0;\r\n    },\r\n    computed: {\r\n        ...mapGetters({\r\n            sop_list: 'getSOPList',\r\n            sop_stt: 'getSOPstatus'\r\n        })\r\n    },\r\n    data() {\r\n        return {\r\n            searchData: {\r\n                serial_number: '',\r\n                er_id: '',\r\n                er_code: ''\r\n            },\r\n            showDetail: false,\r\n            current_id: 0,\r\n            current_sop_name: '',\r\n            gridData: [],\r\n            snErrorCodes: ['N/A']\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(['GetSOPErrorCode']),\r\n        ...mapMutations(['UpdateSOP', 'UpdateSOPstep']),\r\n        async getSOPbyErrorCode(er_code) {\r\n            await this.GetSOPErrorCode(er_code).catch((err) => {\r\n                this.$message({\r\n                    showClose: true,\r\n                    type: \"error\",\r\n                    message: err.response.data,\r\n                });\r\n            })\r\n        },\r\n        handleRowClick(row) {\r\n            this.current_id = row.SOP_ID;\r\n            this.current_sop_name = row.SOP_NAME;\r\n            this.showDetail = true;\r\n        },\r\n        rowCustomStyle() {\r\n            return {\r\n                cursor: 'pointer'\r\n            };\r\n        },\r\n        async GetExistedErrorCode() {\r\n            await this.axios.get('api/FAOnlineSOP/GetAllExistedError').then((res) => {\r\n                this.snErrorCodes = [];\r\n                res.data.forEach(item => {\r\n                    this.snErrorCodes.push(item.DEFECT_CODE);\r\n                });\r\n            }).catch((err) => {\r\n                console.log(err.response.data);\r\n            });\r\n        },\r\n        LoadSNError: async function () {\r\n            if (!this.searchData.serial_number) {\r\n                this.UpdateSOP(undefined);\r\n                return null;\r\n            }\r\n            await this.axios.get(`api/FAOnlineSOP/GetSNErrorCode/sn/${this.searchData.serial_number}`)\r\n                .then((result) => {\r\n                    this.snErrorCodes = [];\r\n                    if (result.data.length > 0) {\r\n                        // result.data.forEach(item => {\r\n                        //     this.snErrorCodes.push(item.DEFECT_CODE);\r\n                        // });\r\n                        this.searchData.er_code = result.data[0].DEFECT_CODE;\r\n                        this.GetSOPErrorCode(this.searchData.er_code);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        type: \"error\",\r\n                        message: err.response.data,\r\n                    });\r\n                    this.UpdateSOP(undefined);\r\n                    // this.snErrorCodes = ['N/A'];\r\n                    this.searchData.er_code = ''\r\n                });\r\n        },\r\n        onSubmit() {\r\n            if (!this.searchData.er_code) return;\r\n            this.GetSOPErrorCode(this.searchData.er_code);\r\n        }\r\n    },\r\n    components: {\r\n        sop_step\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.eltb {\r\n    height: 89vh;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}