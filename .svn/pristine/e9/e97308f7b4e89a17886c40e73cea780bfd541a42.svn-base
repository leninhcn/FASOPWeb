{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\n// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n  var version = \"0.5.0\",\n    has = \"hasOwnProperty\",\n    separator = /[\\.\\/]/,\n    comaseparator = /\\s*,\\s*/,\n    wildcard = \"*\",\n    fun = function () {},\n    numsort = function (a, b) {\n      return a - b;\n    },\n    current_event,\n    stop,\n    events = {\n      n: {}\n    },\n    firstDefined = function () {\n      for (var i = 0, ii = this.length; i < ii; i++) {\n        if (typeof this[i] != \"undefined\") {\n          return this[i];\n        }\n      }\n    },\n    lastDefined = function () {\n      var i = this.length;\n      while (--i) {\n        if (typeof this[i] != \"undefined\") {\n          return this[i];\n        }\n      }\n    },\n    objtos = Object.prototype.toString,\n    Str = String,\n    isArray = Array.isArray || function (ar) {\n      return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n    };\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    > Arguments\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n  eve = function (name, scope) {\n    var e = events,\n      oldstop = stop,\n      args = Array.prototype.slice.call(arguments, 2),\n      listeners = eve.listeners(name),\n      z = 0,\n      f = false,\n      l,\n      indexed = [],\n      queue = {},\n      out = [],\n      ce = current_event,\n      errors = [];\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n    for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n      indexed.push(listeners[i].zIndex);\n      if (listeners[i].zIndex < 0) {\n        queue[listeners[i].zIndex] = listeners[i];\n      }\n    }\n    indexed.sort(numsort);\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n          if (stop) {\n            break;\n          }\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n        if (stop) {\n          break;\n        }\n      }\n    }\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  };\n  // Undocumented. Debug only.\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    > Arguments\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n  eve.listeners = function (name) {\n    var names = isArray(name) ? name : name.split(separator),\n      e = events,\n      item,\n      items,\n      k,\n      i,\n      ii,\n      j,\n      jj,\n      nes,\n      es = [e],\n      out = [];\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n        while (k--) {\n          item = items[k];\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n      es = nes;\n    }\n    return out;\n  };\n  /*\\\n   * eve.separator\n   [ method ]\n    * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n   * here. Be aware that if you pass a string longer than one character it will be treated as\n   * a list of characters.\n    - separator (string) new separator. Empty string resets to default: `.` or `/`.\n  \\*/\n  eve.separator = function (sep) {\n    if (sep) {\n      sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n      sep = \"[\" + sep + \"]\";\n      separator = new RegExp(sep);\n    } else {\n      separator = /[\\.\\/]/;\n    }\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   - name (array) if you don’t want to use separators, you can use array of strings\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n  eve.on = function (name, f) {\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = isArray(name) ? name : Str(name).split(separator),\n          e = events,\n          exist;\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n        e.f = e.f || [];\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n          exist = true;\n          break;\n        }\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   > Arguments\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   > Arguments\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n  eve.nt = function (subname) {\n    var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n    }\n    return cur;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n  eve.nts = function () {\n    return isArray(current_event) ? current_event : current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n      return;\n    }\n    names = isArray(name) ? name : Str(name).split(separator);\n    var e,\n      key,\n      splice,\n      i,\n      ii,\n      j,\n      jj,\n      cur = [events],\n      inodes = [];\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n            inodes.unshift({\n              n: e,\n              name: names[i]\n            });\n          }\n        } else {\n          for (key in e) if (e[has](key)) {\n            splice.push(e[key]);\n            inodes.unshift({\n              n: e,\n              name: key\n            });\n          }\n        }\n        cur.splice.apply(cur, splice);\n      }\n    }\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n              e.f.splice(j, 1);\n              break;\n            }\n            !e.f.length && delete e.f;\n          }\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            var funcs = e.n[key].f;\n            for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n              funcs.splice(j, 1);\n              break;\n            }\n            !funcs.length && delete e.n[key].f;\n          }\n        } else {\n          delete e.f;\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            delete e.n[key].f;\n          }\n        }\n        e = e.n;\n      }\n    }\n    // prune inner nodes in path\n    prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n      e = inodes[i];\n      for (key in e.n[e.name].f) {\n        // not empty (has listeners)\n        continue prune;\n      }\n      for (key in e.n[e.name].n) {\n        // not empty (has children)\n        continue prune;\n      }\n      // is empty\n      delete e.n[e.name];\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n  eve.once = function (name, f) {\n    var f2 = function () {\n      eve.off(name, f2);\n      return f.apply(this, arguments);\n    };\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n  eve.version = version;\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(this);\n(function (glob, factory) {\n  // AMD support\n  if (typeof define == \"function\" && define.amd) {\n    // Define as an anonymous module\n    define([\"eve\"], function (eve) {\n      return factory(glob, eve);\n    });\n  } else if (typeof exports != \"undefined\") {\n    // Next for Node.js or CommonJS\n    var eve = require(\"eve\");\n    module.exports = factory(glob, eve);\n  } else {\n    // Browser globals (glob is window)\n    // Snap adds itself to window\n    factory(glob, glob.eve);\n  }\n})(window || this, function (window, eve) {\n  // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  var mina = function (eve) {\n    var animations = {},\n      requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        setTimeout(callback, 16, new Date().getTime());\n        return true;\n      },\n      requestID,\n      isArray = Array.isArray || function (a) {\n        return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n      },\n      idgen = 0,\n      idprefix = \"M\" + (+new Date()).toString(36),\n      ID = function () {\n        return idprefix + (idgen++).toString(36);\n      },\n      diff = function (a, b, A, B) {\n        if (isArray(a)) {\n          res = [];\n          for (var i = 0, ii = a.length; i < ii; i++) {\n            res[i] = diff(a[i], b, A[i], B);\n          }\n          return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n          return a + dif * (bb - b);\n        };\n      },\n      timer = Date.now || function () {\n        return +new Date();\n      },\n      sta = function (val) {\n        var a = this;\n        if (val == null) {\n          return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n      },\n      speed = function (val) {\n        var a = this;\n        if (val == null) {\n          return a.spd;\n        }\n        a.spd = val;\n      },\n      duration = function (val) {\n        var a = this;\n        if (val == null) {\n          return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n      },\n      stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n      },\n      pause = function () {\n        var a = this;\n        if (a.pdif) {\n          return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n      },\n      resume = function () {\n        var a = this;\n        if (!a.pdif) {\n          return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n      },\n      update = function () {\n        var a = this,\n          res;\n        if (isArray(a.start)) {\n          res = [];\n          for (var j = 0, jj = a.start.length; j < jj; j++) {\n            res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n          }\n        } else {\n          res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n      },\n      frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n          // Frame loop stopped?\n          if (!requestID) {\n            // Start frame loop...\n            requestID = requestAnimFrame(frame);\n          }\n          return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n          var a = animations[i],\n            b = a.get(),\n            res;\n          len++;\n          a.s = (b - a.b) / (a.dur / a.spd);\n          if (a.s >= 1) {\n            delete animations[i];\n            a.s = 1;\n            len--;\n            (function (a) {\n              setTimeout(function () {\n                eve(\"mina.finish.\" + a.id, a);\n              });\n            })(a);\n          }\n          a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n      },\n      /*\\\n       * mina\n       [ method ]\n       **\n       * Generic animation of numbers\n       **\n       - a (number) start _slave_ number\n       - A (number) end _slave_ number\n       - b (number) start _master_ number (start time in general case)\n       - B (number) end _master_ number (end time in general case)\n       - get (function) getter of _master_ number (see @mina.time)\n       - set (function) setter of _slave_ number\n       - easing (function) #optional easing function, default is @mina.linear\n       = (object) animation descriptor\n       o {\n       o         id (string) animation id,\n       o         start (number) start _slave_ number,\n       o         end (number) end _slave_ number,\n       o         b (number) start _master_ number,\n       o         s (number) animation status (0..1),\n       o         dur (number) animation duration,\n       o         spd (number) animation speed,\n       o         get (function) getter of _master_ number (see @mina.time),\n       o         set (function) setter of _slave_ number,\n       o         easing (function) easing function, default is @mina.linear,\n       o         status (function) status getter/setter,\n       o         speed (function) speed getter/setter,\n       o         duration (function) duration getter/setter,\n       o         stop (function) animation stopper\n       o         pause (function) pauses the animation\n       o         resume (function) resumes the animation\n       o         update (function) calles setter with the right value of the animation\n       o }\n      \\*/\n      mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n          id: ID(),\n          start: a,\n          end: A,\n          b: b,\n          s: 0,\n          dur: B - b,\n          spd: 1,\n          get: get,\n          set: set,\n          easing: easing || mina.linear,\n          status: sta,\n          speed: speed,\n          duration: duration,\n          stop: stopit,\n          pause: pause,\n          resume: resume,\n          update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0,\n          i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n          len++;\n          if (len == 2) {\n            break;\n          }\n        }\n        len == 1 && frame();\n        return anim;\n      };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n      return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n      return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n      return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n      return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n      if (n == 0) {\n        return 0;\n      }\n      var q = .48 - n / 1.04,\n        Q = Math.sqrt(.1734 + q * q),\n        x = Q - q,\n        X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n        y = -Q - q,\n        Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n        t = X + Y + .5;\n      return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n      var s = 1.70158;\n      return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n      if (n == 0) {\n        return 0;\n      }\n      n = n - 1;\n      var s = 1.70158;\n      return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n      if (n == !!n) {\n        return n;\n      }\n      return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n      var s = 7.5625,\n        p = 2.75,\n        l;\n      if (n < 1 / p) {\n        l = s * n * n;\n      } else {\n        if (n < 2 / p) {\n          n -= 1.5 / p;\n          l = s * n * n + .75;\n        } else {\n          if (n < 2.5 / p) {\n            n -= 2.25 / p;\n            l = s * n * n + .9375;\n          } else {\n            n -= 2.625 / p;\n            l = s * n * n + .984375;\n          }\n        }\n      }\n      return l;\n    };\n    window.mina = mina;\n    return mina;\n  }(typeof eve == \"undefined\" ? function () {} : eve);\n\n  // Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  var Snap = function (root) {\n    Snap.version = \"0.5.1\";\n    /*\\\n     * Snap\n     [ method ]\n     **\n     * Creates a drawing surface or wraps existing SVG element.\n     **\n     - width (number|string) width of surface\n     - height (number|string) height of surface\n     * or\n     - DOM (SVGElement) element to be wrapped into Snap structure\n     * or\n     - array (array) array of elements (will return set of elements)\n     * or\n     - query (string) CSS query selector\n     = (object) @Element\n    \\*/\n    function Snap(w, h) {\n      if (w) {\n        if (w.nodeType) {\n          return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n          return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n          return w;\n        }\n        if (h == null) {\n          // try {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w);\n          // } catch (e) {\n          // return null;\n          // }\n        }\n      }\n\n      w = w == null ? \"100%\" : w;\n      h = h == null ? \"100%\" : h;\n      return new Paper(w, h);\n    }\n    Snap.toString = function () {\n      return \"Snap v\" + this.version;\n    };\n    Snap._ = {};\n    var glob = {\n      win: root.window,\n      doc: root.window.document\n    };\n    Snap._.glob = glob;\n    var has = \"hasOwnProperty\",\n      Str = String,\n      toFloat = parseFloat,\n      toInt = parseInt,\n      math = Math,\n      mmax = math.max,\n      mmin = math.min,\n      abs = math.abs,\n      pow = math.pow,\n      PI = math.PI,\n      round = math.round,\n      E = \"\",\n      S = \" \",\n      objectToString = Object.prototype.toString,\n      ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n      colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n      bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n      separator = Snap._.separator = /[,\\s]+/,\n      whitespace = /[\\s]/g,\n      commaSpaces = /[\\s]*,[\\s]*/,\n      hsrg = {\n        hs: 1,\n        rg: 1\n      },\n      pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n      idgen = 0,\n      idprefix = \"S\" + (+new Date()).toString(36),\n      ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n      },\n      xlink = \"http://www.w3.org/1999/xlink\",\n      xmlns = \"http://www.w3.org/2000/svg\",\n      hub = {},\n      /*\\\n       * Snap.url\n       [ method ]\n       **\n       * Wraps path into `\"url('<path>')\"`.\n       - value (string) path\n       = (string) wrapped path\n      \\*/\n      URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n      };\n    function $(el, attr) {\n      if (attr) {\n        if (el == \"#text\") {\n          el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n          el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n          el = $(el);\n        }\n        if (typeof attr == \"string\") {\n          if (el.nodeType == 1) {\n            if (attr.substring(0, 6) == \"xlink:\") {\n              return el.getAttributeNS(xlink, attr.substring(6));\n            }\n            if (attr.substring(0, 4) == \"xml:\") {\n              return el.getAttributeNS(xmlns, attr.substring(4));\n            }\n            return el.getAttribute(attr);\n          } else if (attr == \"text\") {\n            return el.nodeValue;\n          } else {\n            return null;\n          }\n        }\n        if (el.nodeType == 1) {\n          for (var key in attr) if (attr[has](key)) {\n            var val = Str(attr[key]);\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        } else if (\"text\" in attr) {\n          el.nodeValue = attr.text;\n        }\n      } else {\n        el = glob.doc.createElementNS(xmlns, el);\n      }\n      return el;\n    }\n    Snap._.$ = $;\n    Snap._.id = ID;\n    function getAttrs(el) {\n      var attrs = el.attributes,\n        name,\n        out = {};\n      for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n          name = \"xlink:\";\n        } else {\n          name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n      }\n      return out;\n    }\n    function is(o, type) {\n      type = Str.prototype.toLowerCase.call(type);\n      if (type == \"finite\") {\n        return isFinite(o);\n      }\n      if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n      }\n      return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    }\n    /*\\\n     * Snap.format\n     [ method ]\n     **\n     * Replaces construction of type `{<name>}` to the corresponding argument\n     **\n     - token (string) string to format\n     - json (object) object which properties are used as a replacement\n     = (string) formatted string\n     > Usage\n     | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n    Snap.format = function () {\n      var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n        // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n          var res = obj;\n          key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n            name = name || quotedName;\n            if (res) {\n              if (name in res) {\n                res = res[name];\n              }\n              typeof res == \"function\" && isFunc && (res = res());\n            }\n          });\n          res = (res == null || res == obj ? all : res) + \"\";\n          return res;\n        };\n      return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n          return replacer(all, key, obj);\n        });\n      };\n    }();\n    function clone(obj) {\n      if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n      }\n      var res = new obj.constructor();\n      for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n      return res;\n    }\n    Snap._.clone = clone;\n    function repush(array, item) {\n      for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n    function cacher(f, scope, postprocessor) {\n      function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n          args = arg.join(\"\\u2400\"),\n          cache = newf.cache = newf.cache || {},\n          count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n          repush(count, args);\n          return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n      return newf;\n    }\n    Snap._.cacher = cacher;\n    function angle(x1, y1, x2, y2, x3, y3) {\n      if (x3 == null) {\n        var x = x1 - x2,\n          y = y1 - y2;\n        if (!x && !y) {\n          return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n      } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n      }\n    }\n    function rad(deg) {\n      return deg % 360 * PI / 180;\n    }\n    function deg(rad) {\n      return rad * 180 / PI % 360;\n    }\n    function x_y() {\n      return this.x + S + this.y;\n    }\n    function x_y_w_h() {\n      return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n\n    /*\\\n     * Snap.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     - deg (number) angle in degrees\n     = (number) angle in radians\n    \\*/\n    Snap.rad = rad;\n    /*\\\n     * Snap.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     - rad (number) angle in radians\n     = (number) angle in degrees\n    \\*/\n    Snap.deg = deg;\n    /*\\\n     * Snap.sin\n     [ method ]\n     **\n     * Equivalent to `Math.sin()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) sin\n    \\*/\n    Snap.sin = function (angle) {\n      return math.sin(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.tan\n     [ method ]\n     **\n     * Equivalent to `Math.tan()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) tan\n    \\*/\n    Snap.tan = function (angle) {\n      return math.tan(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.cos\n     [ method ]\n     **\n     * Equivalent to `Math.cos()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) cos\n    \\*/\n    Snap.cos = function (angle) {\n      return math.cos(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.asin\n     [ method ]\n     **\n     * Equivalent to `Math.asin()` only works with degrees, not radians.\n     - num (number) value\n     = (number) asin in degrees\n    \\*/\n    Snap.asin = function (num) {\n      return Snap.deg(math.asin(num));\n    };\n    /*\\\n     * Snap.acos\n     [ method ]\n     **\n     * Equivalent to `Math.acos()` only works with degrees, not radians.\n     - num (number) value\n     = (number) acos in degrees\n    \\*/\n    Snap.acos = function (num) {\n      return Snap.deg(math.acos(num));\n    };\n    /*\\\n     * Snap.atan\n     [ method ]\n     **\n     * Equivalent to `Math.atan()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan in degrees\n    \\*/\n    Snap.atan = function (num) {\n      return Snap.deg(math.atan(num));\n    };\n    /*\\\n     * Snap.atan2\n     [ method ]\n     **\n     * Equivalent to `Math.atan2()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan2 in degrees\n    \\*/\n    Snap.atan2 = function (num) {\n      return Snap.deg(math.atan2(num));\n    };\n    /*\\\n     * Snap.angle\n     [ method ]\n     **\n     * Returns an angle between two or three points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees\n    \\*/\n    Snap.angle = angle;\n    /*\\\n     * Snap.len\n     [ method ]\n     **\n     * Returns distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n    Snap.len = function (x1, y1, x2, y2) {\n      return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n    };\n    /*\\\n     * Snap.len2\n     [ method ]\n     **\n     * Returns squared distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n    Snap.len2 = function (x1, y1, x2, y2) {\n      return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    };\n    /*\\\n     * Snap.closestPoint\n     [ method ]\n     **\n     * Returns closest point to a given one on a given path.\n     - path (Element) path element\n     - x (number) x coord of a point\n     - y (number) y coord of a point\n     = (object) in format\n     {\n        x (number) x coord of the point on the path\n        y (number) y coord of the point on the path\n        length (number) length of the path to the point\n        distance (number) distance from the given point to the path\n     }\n    \\*/\n    // Copied from http://bl.ocks.org/mbostock/8027637\n    Snap.closestPoint = function (path, x, y) {\n      function distance2(p) {\n        var dx = p.x - x,\n          dy = p.y - y;\n        return dx * dx + dy * dy;\n      }\n      var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n      // linear scan for coarse approximation\n      for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n          best = scan;\n          bestLength = scanLength;\n          bestDistance = scanDistance;\n        }\n      }\n\n      // binary search for precise estimate\n      precision *= .5;\n      while (precision > .5) {\n        var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n          best = before;\n          bestLength = beforeLength;\n          bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n          best = after;\n          bestLength = afterLength;\n          bestDistance = afterDistance;\n        } else {\n          precision *= .5;\n        }\n      }\n      best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n      };\n      return best;\n    };\n    /*\\\n     * Snap.is\n     [ method ]\n     **\n     * Handy replacement for the `typeof` operator\n     - o (…) any object or primitive\n     - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n     = (boolean) `true` if given value is of given type\n    \\*/\n    Snap.is = is;\n    /*\\\n     * Snap.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n     = (number) adjusted value\n    \\*/\n    Snap.snapTo = function (values, value, tolerance) {\n      tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n      if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n          return value - rem;\n        }\n        if (rem > values - tolerance) {\n          return value - rem + values;\n        }\n      }\n      return value;\n    };\n    // Colour\n    /*\\\n     * Snap.getRGB\n     [ method ]\n     **\n     * Parses color string as RGB object\n     - color (string) color string in one of the following formats:\n     # <ul>\n     #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n     #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n     #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n     #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n     #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n     #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n     # </ul>\n     * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can't be parsed\n     o }\n    \\*/\n    Snap.getRGB = cacher(function (colour) {\n      if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n      if (colour == \"none\") {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          toString: rgbtoString\n        };\n      }\n      !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n      if (!colour) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n      var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n      if (rgb) {\n        if (rgb[2]) {\n          blue = toInt(rgb[2].substring(5), 16);\n          green = toInt(rgb[2].substring(3, 5), 16);\n          red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n          blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n          green = toInt((t = rgb[3].charAt(2)) + t, 16);\n          red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n          values = rgb[4].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red *= 2.55);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green *= 2.55);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue *= 2.55);\n          rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n          values = rgb[5].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n          values = rgb[6].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {\n          r: red,\n          g: green,\n          b: blue,\n          toString: rgbtoString\n        };\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n      }\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }, Snap);\n    /*\\\n     * Snap.hsb\n     [ method ]\n     **\n     * Converts HSB values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the color\n    \\*/\n    Snap.hsb = cacher(function (h, s, b) {\n      return Snap.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Snap.hsl\n     [ method ]\n     **\n     * Converts HSL values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the color\n    \\*/\n    Snap.hsl = cacher(function (h, s, l) {\n      return Snap.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Snap.rgb\n     [ method ]\n     **\n     * Converts RGB values to a hex representation of the color\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the color\n    \\*/\n    Snap.rgb = cacher(function (r, g, b, o) {\n      if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n      }\n      return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n    });\n    var toHex = function (color) {\n        var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n          red = \"rgb(255, 0, 0)\";\n        toHex = cacher(function (color) {\n          if (color.toLowerCase() == \"red\") {\n            return red;\n          }\n          i.style.color = red;\n          i.style.color = color;\n          var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n          return out == red ? null : out;\n        });\n        return toHex(color);\n      },\n      hsbtoString = function () {\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n      },\n      hsltoString = function () {\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n      },\n      rgbtoString = function () {\n        return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n      },\n      prepareRGB = function (r, g, b) {\n        if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n          b = r.b;\n          g = r.g;\n          r = r.r;\n        }\n        if (g == null && is(r, string)) {\n          var clr = Snap.getRGB(r);\n          r = clr.r;\n          g = clr.g;\n          b = clr.b;\n        }\n        if (r > 1 || g > 1 || b > 1) {\n          r /= 255;\n          g /= 255;\n          b /= 255;\n        }\n        return [r, g, b];\n      },\n      packageRGB = function (r, g, b, o) {\n        r = math.round(r * 255);\n        g = math.round(g * 255);\n        b = math.round(b * 255);\n        var rgb = {\n          r: r,\n          g: g,\n          b: b,\n          opacity: is(o, \"finite\") ? o : 1,\n          hex: Snap.rgb(r, g, b),\n          toString: rgbtoString\n        };\n        is(o, \"finite\") && (rgb.opacity = o);\n        return rgb;\n      };\n    /*\\\n     * Snap.color\n     [ method ]\n     **\n     * Parses the color string and returns an object featuring the color's component values\n     - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n     = (object) Combined RGB/HSB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can't be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n    Snap.color = function (clr) {\n      var rgb;\n      if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else {\n        if (is(clr, \"string\")) {\n          clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n          rgb = Snap.rgb2hsl(clr);\n          clr.h = rgb.h;\n          clr.s = rgb.s;\n          clr.l = rgb.l;\n          rgb = Snap.rgb2hsb(clr);\n          clr.v = rgb.b;\n        } else {\n          clr = {\n            hex: \"none\"\n          };\n          clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n          clr.error = 1;\n        }\n      }\n      clr.toString = rgbtoString;\n      return clr;\n    };\n    /*\\\n     * Snap.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    Snap.hsb2rgb = function (h, s, v, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n      }\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = v * s;\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = v - C;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n    Snap.hsl2rgb = function (h, s, l, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      }\n      if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n      }\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = 2 * s * (l < .5 ? l : 1 - l);\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = l - C / 2;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to an HSB object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     b (number) brightness\n     o }\n    \\*/\n    Snap.rgb2hsb = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, V, C;\n      V = mmax(r, g, b);\n      C = V - mmin(r, g, b);\n      H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      S = C == 0 ? 0 : C / V;\n      return {\n        h: H,\n        s: S,\n        b: V,\n        toString: hsbtoString\n      };\n    };\n    /*\\\n     * Snap.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to an HSL object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     l (number) luminosity\n     o }\n    \\*/\n    Snap.rgb2hsl = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, L, M, m, C;\n      M = mmax(r, g, b);\n      m = mmin(r, g, b);\n      C = M - m;\n      H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      L = (M + m) / 2;\n      S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n      return {\n        h: H,\n        s: S,\n        l: L,\n        toString: hsltoString\n      };\n    };\n\n    // Transformations\n    /*\\\n     * Snap.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments\n     - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n     = (array) array of segments\n    \\*/\n    Snap.parsePathString = function (pathString) {\n      if (!pathString) {\n        return null;\n      }\n      var pth = Snap.path(pathString);\n      if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n      }\n      var paramCounts = {\n          a: 7,\n          c: 6,\n          o: 2,\n          h: 1,\n          l: 2,\n          m: 2,\n          r: 4,\n          q: 4,\n          s: 4,\n          t: 2,\n          v: 1,\n          u: 3,\n          z: 0\n        },\n        data = [];\n      if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(pathString);\n      }\n      if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n          var params = [],\n            name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n          if (name == \"m\" && params.length > 2) {\n            data.push([b].concat(params.splice(0, 2)));\n            name = \"l\";\n            b = b == \"m\" ? \"l\" : \"L\";\n          }\n          if (name == \"o\" && params.length == 1) {\n            data.push([b, params[0]]);\n          }\n          if (name == \"r\") {\n            data.push([b].concat(params));\n          } else while (params.length >= paramCounts[name]) {\n            data.push([b].concat(params.splice(0, paramCounts[name])));\n            if (!paramCounts[name]) {\n              break;\n            }\n          }\n        });\n      }\n      data.toString = Snap.path.toString;\n      pth.arr = Snap.path.clone(data);\n      return data;\n    };\n    /*\\\n     * Snap.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given transform string into an array of transformations\n     - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n     = (array) array of transformations\n    \\*/\n    var parseTransformString = Snap.parseTransformString = function (TString) {\n      if (!TString) {\n        return null;\n      }\n      var paramCounts = {\n          r: 3,\n          s: 4,\n          t: 2,\n          m: 6\n        },\n        data = [];\n      if (is(TString, \"array\") && is(TString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(TString);\n      }\n      if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n          var params = [],\n            name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n          data.push([b].concat(params));\n        });\n      }\n      data.toString = Snap.path.toString;\n      return data;\n    };\n    function svgTransform2string(tstr) {\n      var res = [];\n      tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n          params.push(0, 0);\n        }\n        if (name == \"scale\") {\n          if (params.length > 2) {\n            params = params.slice(0, 2);\n          } else if (params.length == 2) {\n            params.push(0, 0);\n          }\n          if (params.length == 1) {\n            params.push(params[0], 0, 0);\n          }\n        }\n        if (name == \"skewX\") {\n          res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n          res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n          res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n      });\n      return res;\n    }\n    Snap._.svgTransform2string = svgTransform2string;\n    Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n    function transform2matrix(tstr, bbox) {\n      var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix();\n      if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n          var t = tdata[i],\n            tlen = t.length,\n            command = Str(t[0]).toLowerCase(),\n            absolute = t[0] != command,\n            inver = absolute ? m.invert() : 0,\n            x1,\n            y1,\n            x2,\n            y2,\n            bb;\n          if (command == \"t\" && tlen == 2) {\n            m.translate(t[1], 0);\n          } else if (command == \"t\" && tlen == 3) {\n            if (absolute) {\n              x1 = inver.x(0, 0);\n              y1 = inver.y(0, 0);\n              x2 = inver.x(t[1], t[2]);\n              y2 = inver.y(t[1], t[2]);\n              m.translate(x2 - x1, y2 - y1);\n            } else {\n              m.translate(t[1], t[2]);\n            }\n          } else if (command == \"r\") {\n            if (tlen == 2) {\n              bb = bb || bbox;\n              m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.rotate(t[1], x2, y2);\n              } else {\n                m.rotate(t[1], t[2], t[3]);\n              }\n            }\n          } else if (command == \"s\") {\n            if (tlen == 2 || tlen == 3) {\n              bb = bb || bbox;\n              m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.scale(t[1], t[1], x2, y2);\n              } else {\n                m.scale(t[1], t[1], t[2], t[3]);\n              }\n            } else if (tlen == 5) {\n              if (absolute) {\n                x2 = inver.x(t[3], t[4]);\n                y2 = inver.y(t[3], t[4]);\n                m.scale(t[1], t[2], x2, y2);\n              } else {\n                m.scale(t[1], t[2], t[3], t[4]);\n              }\n            }\n          } else if (command == \"m\" && tlen == 7) {\n            m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n          }\n        }\n      }\n      return m;\n    }\n    Snap._.transform2matrix = transform2matrix;\n    Snap._unit2px = unit2px;\n    var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n      var adown = a.nodeType == 9 ? a.documentElement : a,\n        bup = b && b.parentNode;\n      return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n    } : function (a, b) {\n      if (b) {\n        while (b) {\n          b = b.parentNode;\n          if (b == a) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    function getSomeDefs(el) {\n      var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs = pdefs == null ? false : pdefs.node;\n      if (!defs) {\n        defs = make(\"defs\", p.node).node;\n      }\n      return defs;\n    }\n    function getSomeSVG(el) {\n      return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n    }\n    Snap._.getSomeDefs = getSomeDefs;\n    Snap._.getSomeSVG = getSomeSVG;\n    function unit2px(el, name, value) {\n      var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n      if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {\n          x: -9e9,\n          y: -9e9,\n          width: 10,\n          height: 10,\n          \"class\": \"svg---mgr\",\n          fill: \"none\"\n        });\n        svg.appendChild(mgr);\n      }\n      function getW(val) {\n        if (val == null) {\n          return E;\n        }\n        if (val == +val) {\n          return val;\n        }\n        $(mgr, {\n          width: val\n        });\n        try {\n          return mgr.getBBox().width;\n        } catch (e) {\n          return 0;\n        }\n      }\n      function getH(val) {\n        if (val == null) {\n          return E;\n        }\n        if (val == +val) {\n          return val;\n        }\n        $(mgr, {\n          height: val\n        });\n        try {\n          return mgr.getBBox().height;\n        } catch (e) {\n          return 0;\n        }\n      }\n      function set(nam, f) {\n        if (name == null) {\n          out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n          out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n      }\n      switch (el.type) {\n        case \"rect\":\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n        case \"image\":\n          set(\"width\", getW);\n          set(\"height\", getH);\n        case \"text\":\n          set(\"x\", getW);\n          set(\"y\", getH);\n          break;\n        case \"circle\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"r\", getW);\n          break;\n        case \"ellipse\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n          break;\n        case \"line\":\n          set(\"x1\", getW);\n          set(\"x2\", getW);\n          set(\"y1\", getH);\n          set(\"y2\", getH);\n          break;\n        case \"marker\":\n          set(\"refX\", getW);\n          set(\"markerWidth\", getW);\n          set(\"refY\", getH);\n          set(\"markerHeight\", getH);\n          break;\n        case \"radialGradient\":\n          set(\"fx\", getW);\n          set(\"fy\", getH);\n          break;\n        case \"tspan\":\n          set(\"dx\", getW);\n          set(\"dy\", getH);\n          break;\n        default:\n          set(name, getW);\n      }\n      svg.removeChild(mgr);\n      return out;\n    }\n    /*\\\n     * Snap.select\n     [ method ]\n     **\n     * Wraps a DOM element specified by CSS selector as @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n    Snap.select = function (query) {\n      query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n      return wrap(glob.doc.querySelector(query));\n    };\n    /*\\\n     * Snap.selectAll\n     [ method ]\n     **\n     * Wraps DOM elements specified by CSS selector as set or array of @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n    Snap.selectAll = function (query) {\n      var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n      return set;\n    };\n    function add2group(list) {\n      if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n      }\n      var i = 0,\n        j = 0,\n        node = this.node;\n      while (this[i]) delete this[i++];\n      for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n          list[i].forEach(function (el) {\n            node.appendChild(el.node);\n          });\n        } else {\n          node.appendChild(list[i].node);\n        }\n      }\n      var children = node.childNodes;\n      for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n      }\n      return this;\n    }\n    // Hub garbage collector every 10s\n    setInterval(function () {\n      for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n          node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }, 1e4);\n    function Element(el) {\n      if (el.snap in hub) {\n        return hub[el.snap];\n      }\n      var svg;\n      try {\n        svg = el.ownerSVGElement;\n      } catch (e) {}\n      /*\\\n       * Element.node\n       [ property (object) ]\n       **\n       * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n       > Usage\n       | // draw a circle at coordinate 10,10 with radius of 10\n       | var c = paper.circle(10, 10, 10);\n       | c.node.onclick = function () {\n       |     c.attr(\"fill\", \"red\");\n       | };\n      \\*/\n      this.node = el;\n      if (svg) {\n        this.paper = new Paper(svg);\n      }\n      /*\\\n       * Element.type\n       [ property (string) ]\n       **\n       * SVG tag name of the given element.\n      \\*/\n      this.type = el.tagName || el.nodeName;\n      var id = this.id = ID(this);\n      this.anims = {};\n      this._ = {\n        transform: []\n      };\n      el.snap = id;\n      hub[id] = this;\n      if (this.type == \"g\") {\n        this.add = add2group;\n      }\n      if (this.type in {\n        g: 1,\n        mask: 1,\n        pattern: 1,\n        symbol: 1\n      }) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n    /*\\\n      * Element.attr\n      [ method ]\n      **\n      * Gets or sets given attributes of the element.\n      **\n      - params (object) contains key-value pairs of attributes you want to set\n      * or\n      - param (string) name of the attribute\n      = (Element) the current element\n      * or\n      = (string) value of attribute\n      > Usage\n      | el.attr({\n      |     fill: \"#fc0\",\n      |     stroke: \"#000\",\n      |     strokeWidth: 2, // CamelCase...\n      |     \"fill-opacity\": 0.5, // or dash-separated names\n      |     width: \"*=2\" // prefixed values\n      | });\n      | console.log(el.attr(\"fill\")); // #fc0\n      * Prefixed values in format `\"+=10\"` supported. All four operations\n      * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n      * and `-`: `\"+=2em\"`.\n     \\*/\n    Element.prototype.attr = function (params, value) {\n      var el = this,\n        node = el.node;\n      if (!params) {\n        if (node.nodeType != 1) {\n          return {\n            text: node.nodeValue\n          };\n        }\n        var attr = node.attributes,\n          out = {};\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          out[attr[i].nodeName] = attr[i].nodeValue;\n        }\n        return out;\n      }\n      if (is(params, \"string\")) {\n        if (arguments.length > 1) {\n          var json = {};\n          json[params] = value;\n          params = json;\n        } else {\n          return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n        }\n      }\n      for (var att in params) {\n        if (params[has](att)) {\n          eve(\"snap.util.attr.\" + att, el, params[att]);\n        }\n      }\n      return el;\n    };\n    /*\\\n     * Snap.parse\n     [ method ]\n     **\n     * Parses SVG fragment and converts it into a @Fragment\n     **\n     - svg (string) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n    Snap.parse = function (svg) {\n      var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n      svg = Str(svg);\n      if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n      }\n      div.innerHTML = svg;\n      svg = div.getElementsByTagName(\"svg\")[0];\n      if (svg) {\n        if (full) {\n          f = svg;\n        } else {\n          while (svg.firstChild) {\n            f.appendChild(svg.firstChild);\n          }\n        }\n      }\n      return new Fragment(f);\n    };\n    function Fragment(frag) {\n      this.node = frag;\n    }\n    /*\\\n     * Snap.fragment\n     [ method ]\n     **\n     * Creates a DOM fragment from a given list of elements or strings\n     **\n     - varargs (…) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n    Snap.fragment = function () {\n      var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n      for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n          f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n          f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n          f.appendChild(Snap.parse(item).node);\n        }\n      }\n      return new Fragment(f);\n    };\n    function make(name, parent) {\n      var res = $(name);\n      parent.appendChild(res);\n      var el = wrap(res);\n      return el;\n    }\n    function Paper(w, h) {\n      var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n      if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n          return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n          desc = $(\"desc\");\n          desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n          res.node.appendChild(desc);\n        }\n        if (!defs) {\n          defs = $(\"defs\");\n          res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n      } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n          height: h,\n          version: 1.1,\n          width: w,\n          xmlns: xmlns\n        });\n      }\n      return res;\n    }\n    function wrap(dom) {\n      if (!dom) {\n        return dom;\n      }\n      if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n      }\n      if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n      }\n      if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n      }\n      return new Element(dom);\n    }\n    Snap._.make = make;\n    Snap._.wrap = wrap;\n    /*\\\n     * Paper.el\n     [ method ]\n     **\n     * Creates an element on paper with a given name and no attributes\n     **\n     - name (string) tag name\n     - attr (object) attributes\n     = (Element) the current element\n     > Usage\n     | var c = paper.circle(10, 10, 10); // is the same as...\n     | var c = paper.el(\"circle\").attr({\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n     | // and the same as\n     | var c = paper.el(\"circle\", {\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n    \\*/\n    Paper.prototype.el = function (name, attr) {\n      var el = make(name, this.node);\n      attr && el.attr(attr);\n      return el;\n    };\n    /*\\\n     * Element.children\n     [ method ]\n     **\n     * Returns array of all the children of the element.\n     = (array) array of Elements\n    \\*/\n    Element.prototype.children = function () {\n      var out = [],\n        ch = this.node.childNodes;\n      for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n      }\n      return out;\n    };\n    function jsonFiller(root, o) {\n      for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n            type: root[i].type,\n            attr: root[i].attr()\n          },\n          children = root[i].children();\n        o.push(item);\n        if (children.length) {\n          jsonFiller(children, item.childNodes = []);\n        }\n      }\n    }\n    /*\\\n     * Element.toJSON\n     [ method ]\n     **\n     * Returns object representation of the given element and all its children.\n     = (object) in format\n     o {\n     o     type (string) this.type,\n     o     attr (object) attributes map,\n     o     childNodes (array) optional array of children in the same format\n     o }\n    \\*/\n    Element.prototype.toJSON = function () {\n      var out = [];\n      jsonFiller([this], out);\n      return out[0];\n    };\n    // default\n    eve.on(\"snap.util.getattr\", function () {\n      var att = eve.nt();\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n      if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n      } else {\n        return $(this.node, att);\n      }\n    });\n    var cssAttr = {\n      \"alignment-baseline\": 0,\n      \"baseline-shift\": 0,\n      \"clip\": 0,\n      \"clip-path\": 0,\n      \"clip-rule\": 0,\n      \"color\": 0,\n      \"color-interpolation\": 0,\n      \"color-interpolation-filters\": 0,\n      \"color-profile\": 0,\n      \"color-rendering\": 0,\n      \"cursor\": 0,\n      \"direction\": 0,\n      \"display\": 0,\n      \"dominant-baseline\": 0,\n      \"enable-background\": 0,\n      \"fill\": 0,\n      \"fill-opacity\": 0,\n      \"fill-rule\": 0,\n      \"filter\": 0,\n      \"flood-color\": 0,\n      \"flood-opacity\": 0,\n      \"font\": 0,\n      \"font-family\": 0,\n      \"font-size\": 0,\n      \"font-size-adjust\": 0,\n      \"font-stretch\": 0,\n      \"font-style\": 0,\n      \"font-variant\": 0,\n      \"font-weight\": 0,\n      \"glyph-orientation-horizontal\": 0,\n      \"glyph-orientation-vertical\": 0,\n      \"image-rendering\": 0,\n      \"kerning\": 0,\n      \"letter-spacing\": 0,\n      \"lighting-color\": 0,\n      \"marker\": 0,\n      \"marker-end\": 0,\n      \"marker-mid\": 0,\n      \"marker-start\": 0,\n      \"mask\": 0,\n      \"opacity\": 0,\n      \"overflow\": 0,\n      \"pointer-events\": 0,\n      \"shape-rendering\": 0,\n      \"stop-color\": 0,\n      \"stop-opacity\": 0,\n      \"stroke\": 0,\n      \"stroke-dasharray\": 0,\n      \"stroke-dashoffset\": 0,\n      \"stroke-linecap\": 0,\n      \"stroke-linejoin\": 0,\n      \"stroke-miterlimit\": 0,\n      \"stroke-opacity\": 0,\n      \"stroke-width\": 0,\n      \"text-anchor\": 0,\n      \"text-decoration\": 0,\n      \"text-rendering\": 0,\n      \"unicode-bidi\": 0,\n      \"visibility\": 0,\n      \"word-spacing\": 0,\n      \"writing-mode\": 0\n    };\n    eve.on(\"snap.util.attr\", function (value) {\n      var att = eve.nt(),\n        attr = {};\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      attr[att] = value;\n      var style = att.replace(/-(\\w)/gi, function (all, letter) {\n          return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n          return \"-\" + letter.toLowerCase();\n        });\n      if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n      } else {\n        $(this.node, attr);\n      }\n    });\n    (function (proto) {})(Paper.prototype);\n\n    // simple ajax\n    /*\\\n     * Snap.ajax\n     [ method ]\n     **\n     * Simple implementation of Ajax\n     **\n     - url (string) URL\n     - postData (object|string) data for post request\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     * or\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     = (XMLHttpRequest) the XMLHttpRequest object, just in case\n    \\*/\n    Snap.ajax = function (url, postData, callback, scope) {\n      var req = new XMLHttpRequest(),\n        id = ID();\n      if (req) {\n        if (is(postData, \"function\")) {\n          scope = callback;\n          callback = postData;\n          postData = null;\n        } else if (is(postData, \"object\")) {\n          var pd = [];\n          for (var key in postData) if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n          postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n          req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n          req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n          eve.once(\"snap.ajax.\" + id + \".0\", callback);\n          eve.once(\"snap.ajax.\" + id + \".200\", callback);\n          eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function () {\n          if (req.readyState != 4) return;\n          eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n          return req;\n        }\n        req.send(postData);\n        return req;\n      }\n    };\n    /*\\\n     * Snap.load\n     [ method ]\n     **\n     * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n     **\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n    \\*/\n    Snap.load = function (url, callback, scope) {\n      Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n      });\n    };\n    var getOffset = function (elem) {\n      var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0,\n        clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n      return {\n        y: top,\n        x: left\n      };\n    };\n    /*\\\n     * Snap.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Snap element object\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n    Snap.getElementByPoint = function (x, y) {\n      var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n      if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n          sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n          target = hits[hits.length - 1];\n        }\n      }\n      if (!target) {\n        return null;\n      }\n      return wrap(target);\n    };\n    /*\\\n     * Snap.plugin\n     [ method ]\n     **\n     * Let you write plugins. You pass in a function with five arguments, like this:\n     | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n     |     Snap.newmethod = function () {};\n     |     Element.prototype.newmethod = function () {};\n     |     Paper.prototype.newmethod = function () {};\n     | });\n     * Inside the function you have access to all main objects (and their\n     * prototypes). This allow you to extend anything you want.\n     **\n     - f (function) your plugin body\n    \\*/\n    Snap.plugin = function (f) {\n      f(Snap, Element, Paper, glob, Fragment);\n    };\n    glob.win.Snap = Snap;\n    return Snap;\n  }(window || this);\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      unit2px = Snap._unit2px,\n      $ = Snap._.$,\n      make = Snap._.make,\n      getSomeDefs = Snap._.getSomeDefs,\n      has = \"hasOwnProperty\",\n      wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n      if (this.type == \"tspan\") {\n        return Snap._.box(this.node.getClientRects().item(0));\n      }\n      if (!Snap.Matrix || !Snap.path) {\n        return this.node.getBBox();\n      }\n      var el = this,\n        m = new Snap.Matrix();\n      if (el.removed) {\n        return Snap._.box();\n      }\n      while (el.type == \"use\") {\n        if (!isWithoutTransform) {\n          m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n        }\n        if (el.original) {\n          el = el.original;\n        } else {\n          var href = el.attr(\"xlink:href\");\n          el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n        }\n      }\n      var _ = el._,\n        pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n      try {\n        if (isWithoutTransform) {\n          _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n          return Snap._.box(_.bboxwt);\n        } else {\n          el.realPath = pathfinder(el);\n          el.matrix = el.transform().localMatrix;\n          _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n          return Snap._.box(_.bbox);\n        }\n      } catch (e) {\n        // Firefox doesn’t give you bbox of hidden element\n        return Snap._.box();\n      }\n    };\n    var propString = function () {\n      return this.string;\n    };\n    function extractTransform(el, tstr) {\n      if (tstr == null) {\n        var doReturn = true;\n        if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n          tstr = el.node.getAttribute(\"gradientTransform\");\n        } else if (el.type == \"pattern\") {\n          tstr = el.node.getAttribute(\"patternTransform\");\n        } else {\n          tstr = el.node.getAttribute(\"transform\");\n        }\n        if (!tstr) {\n          return new Snap.Matrix();\n        }\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        if (!Snap._.rgTransform.test(tstr)) {\n          tstr = Snap._.svgTransform2string(tstr);\n        } else {\n          tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n        }\n        if (is(tstr, \"array\")) {\n          tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n        }\n        el._.transform = tstr;\n      }\n      var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n      if (doReturn) {\n        return m;\n      } else {\n        el.matrix = m;\n      }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n      var _ = this._;\n      if (tstr == null) {\n        var papa = this,\n          global = new Snap.Matrix(this.node.getCTM()),\n          local = extractTransform(this),\n          ms = [local],\n          m = new Snap.Matrix(),\n          i,\n          localString = local.toTransformString(),\n          string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n        while (papa.type != \"svg\" && (papa = papa.parent())) {\n          ms.push(extractTransform(papa));\n        }\n        i = ms.length;\n        while (i--) {\n          m.add(ms[i]);\n        }\n        return {\n          string: string,\n          globalMatrix: global,\n          totalMatrix: m,\n          localMatrix: local,\n          diffMatrix: global.clone().add(local.invert()),\n          global: global.toTransformString(),\n          total: m.toTransformString(),\n          local: localString,\n          toString: propString\n        };\n      }\n      if (tstr instanceof Snap.Matrix) {\n        this.matrix = tstr;\n        this._.transform = tstr.toTransformString();\n      } else {\n        extractTransform(this, tstr);\n      }\n      if (this.node) {\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n          $(this.node, {\n            gradientTransform: this.matrix\n          });\n        } else if (this.type == \"pattern\") {\n          $(this.node, {\n            patternTransform: this.matrix\n          });\n        } else {\n          $(this.node, {\n            transform: this.matrix\n          });\n        }\n      }\n      return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n      return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this;\n          el.forEach(function (el) {\n            it.add(el);\n          });\n          return this;\n        }\n        el = wrap(el);\n        this.node.appendChild(el.node);\n        el.paper = this.paper;\n      }\n      return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n      if (el) {\n        el = wrap(el);\n        el.append(this);\n      }\n      return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this,\n            first;\n          el.forEach(function (el) {\n            if (first) {\n              first.after(el);\n            } else {\n              it.prepend(el);\n            }\n            first = el;\n          });\n          return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.insertBefore(el.node, this.node.firstChild);\n        this.add && this.add();\n        el.paper = this.paper;\n        this.parent() && this.parent().add();\n        parent && parent.add();\n      }\n      return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n      el = wrap(el);\n      el.prepend(this);\n      return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          var parent = el.parent();\n          it.node.parentNode.insertBefore(el.node, it.node);\n          parent && parent.add();\n        });\n        this.parent().add();\n        return this;\n      }\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.parentNode.insertBefore(el.node, this.node);\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n      el = wrap(el);\n      var parent = el.parent();\n      if (this.node.nextSibling) {\n        this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n      } else {\n        this.node.parentNode.appendChild(el.node);\n      }\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n      var parent = this.parent();\n      this.node.parentNode && this.node.parentNode.removeChild(this.node);\n      delete this.paper;\n      this.removed = true;\n      parent && parent.add();\n      return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n      return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n      var nodelist = this.node.querySelectorAll(query),\n        set = (Snap.set || Array)();\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n      return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n      if (value == null) {\n        value = this.attr(attr);\n      }\n      return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n      var use,\n        id = this.node.id;\n      if (!id) {\n        id = this.id;\n        $(this.node, {\n          id: id\n        });\n      }\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n        use = make(this.type, this.node.parentNode);\n      } else {\n        use = make(\"use\", this.node.parentNode);\n      }\n      $(use.node, {\n        \"xlink:href\": \"#\" + id\n      });\n      use.original = this;\n      return use;\n    };\n    function fixids(el) {\n      var els = el.selectAll(\"*\"),\n        it,\n        url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n        ids = [],\n        uses = {};\n      function urltest(it, name) {\n        var val = $(it.node, name);\n        val = val && val.match(url);\n        val = val && val[2];\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            var attr = {};\n            attr[name] = Snap.url(id);\n            $(it.node, attr);\n          });\n        }\n      }\n      function linktest(it) {\n        var val = $(it.node, \"xlink:href\");\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            it.attr(\"xlink:href\", \"#\" + id);\n          });\n        }\n      }\n      for (var i = 0, ii = els.length; i < ii; i++) {\n        it = els[i];\n        urltest(it, \"fill\");\n        urltest(it, \"stroke\");\n        urltest(it, \"filter\");\n        urltest(it, \"mask\");\n        urltest(it, \"clip-path\");\n        linktest(it);\n        var oldid = $(it.node, \"id\");\n        if (oldid) {\n          $(it.node, {\n            id: it.id\n          });\n          ids.push({\n            old: oldid,\n            id: it.id\n          });\n        }\n      }\n      for (i = 0, ii = ids.length; i < ii; i++) {\n        var fs = uses[ids[i].old];\n        if (fs) {\n          for (var j = 0, jj = fs.length; j < jj; j++) {\n            fs[j](ids[i].id);\n          }\n        }\n      }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n      var clone = wrap(this.node.cloneNode(true));\n      if ($(clone.node, \"id\")) {\n        $(clone.node, {\n          id: clone.id\n        });\n      }\n      fixids(clone);\n      clone.insertAfter(this);\n      return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n      var defs = getSomeDefs(this);\n      defs.appendChild(this.node);\n      return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n      var p = make(\"pattern\", getSomeDefs(this));\n      if (x == null) {\n        x = this.getBBox();\n      }\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n      $(p.node, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        patternUnits: \"userSpaceOnUse\",\n        id: p.id,\n        viewBox: [x, y, width, height].join(\" \")\n      });\n      p.node.appendChild(this.node);\n      return p;\n    };\n    // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n    // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n      var p = make(\"marker\", getSomeDefs(this));\n      if (x == null) {\n        x = this.getBBox();\n      }\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        refX = x.refX || x.cx;\n        refY = x.refY || x.cy;\n        x = x.x;\n      }\n      $(p.node, {\n        viewBox: [x, y, width, height].join(\" \"),\n        markerWidth: width,\n        markerHeight: height,\n        orient: \"auto\",\n        refX: refX || 0,\n        refY: refY || 0,\n        id: p.id\n      });\n      p.node.appendChild(this.node);\n      return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n      var data = eldata[this.id] = eldata[this.id] || {};\n      if (arguments.length == 0) {\n        eve(\"snap.data.get.\" + this.id, this, data, null);\n        return data;\n      }\n      if (arguments.length == 1) {\n        if (Snap.is(key, \"object\")) {\n          for (var i in key) if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n          return this;\n        }\n        eve(\"snap.data.get.\" + this.id, this, data[key], key);\n        return data[key];\n      }\n      data[key] = value;\n      eve(\"snap.data.set.\" + this.id, this, value, key);\n      return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n      if (key == null) {\n        eldata[this.id] = {};\n      } else {\n        eldata[this.id] && delete eldata[this.id][key];\n      }\n      return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n      return function () {\n        var res = type ? \"<\" + this.type : \"\",\n          attr = this.node.attributes,\n          chld = this.node.childNodes;\n        if (type) {\n          for (var i = 0, ii = attr.length; i < ii; i++) {\n            res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n          }\n        }\n        if (chld.length) {\n          type && (res += \">\");\n          for (i = 0, ii = chld.length; i < ii; i++) {\n            if (chld[i].nodeType == 3) {\n              res += chld[i].nodeValue;\n            } else if (chld[i].nodeType == 1) {\n              res += wrap(chld[i]).toString();\n            }\n          }\n          type && (res += \"</\" + this.type + \">\");\n        } else {\n          type && (res += \"/>\");\n        }\n        return res;\n      };\n    }\n    elproto.toDataURL = function () {\n      if (window && window.btoa) {\n        var bb = this.getBBox(),\n          svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n            x: +bb.x.toFixed(3),\n            y: +bb.y.toFixed(3),\n            width: +bb.width.toFixed(3),\n            height: +bb.height.toFixed(3),\n            contents: this.outerSVG()\n          });\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n      }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n  });\n\n  // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n      return function (arr) {\n        var res = arr.slice(from, to);\n        if (res.length == 1) {\n          res = res[0];\n        }\n        return f ? f(res) : res;\n      };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n      this.attr = attr;\n      this.dur = ms;\n      easing && (this.easing = easing);\n      callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n      return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n      var el = this,\n        res = [];\n      for (var id in el.anims) if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function (val) {\n              return a.status(val);\n            },\n            stop: function () {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n      return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n      var now = mina.time(),\n        anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n      callback && eve.once(\"mina.finish.\" + anim.id, callback);\n      return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n      var anims = this.inAnim();\n      for (var i = 0, ii = anims.length; i < ii; i++) {\n        anims[i].stop();\n      }\n      return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n      if (attrs instanceof Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = attrs.dur;\n        attrs = attrs.attr;\n      }\n      var fkeys = [],\n        tkeys = [],\n        keys = {},\n        from,\n        to,\n        f,\n        eq,\n        el = this;\n      for (var key in attrs) if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n      var now = mina.time(),\n        anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n          var attr = {};\n          for (var key in keys) if (keys[has](key)) {\n            attr[key] = keys[key](val);\n          }\n          el.attr(attr);\n        }, easing);\n      el.anims[anim.id] = anim;\n      anim._attrs = attrs;\n      anim._callback = callback;\n      eve(\"snap.animcreated.\" + el.id, anim);\n      eve.once(\"mina.finish.\" + anim.id, function () {\n        eve.off(\"mina.*.\" + anim.id);\n        delete el.anims[anim.id];\n        callback && callback.call(el);\n      });\n      eve.once(\"mina.stop.\" + anim.id, function () {\n        eve.off(\"mina.*.\" + anim.id);\n        delete el.anims[anim.id];\n      });\n      return el;\n    };\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n      Str = String,\n      math = Math,\n      E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n      if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n        this.a = a.a;\n        this.b = a.b;\n        this.c = a.c;\n        this.d = a.d;\n        this.e = a.e;\n        this.f = a.f;\n        return;\n      }\n      if (a != null) {\n        this.a = +a;\n        this.b = +b;\n        this.c = +c;\n        this.d = +d;\n        this.e = +e;\n        this.f = +f;\n      } else {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.e = 0;\n        this.f = 0;\n      }\n    }\n    (function (matrixproto) {\n      /*\\\n       * Matrix.add\n       [ method ]\n       **\n       * Adds the given matrix to existing one\n       - a (number)\n       - b (number)\n       - c (number)\n       - d (number)\n       - e (number)\n       - f (number)\n       * or\n       - matrix (object) @Matrix\n      \\*/\n      matrixproto.add = function (a, b, c, d, e, f) {\n        if (a && a instanceof Matrix) {\n          return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n        }\n        var aNew = a * this.a + b * this.c,\n          bNew = a * this.b + b * this.d;\n        this.e += e * this.a + f * this.c;\n        this.f += e * this.b + f * this.d;\n        this.c = c * this.a + d * this.c;\n        this.d = c * this.b + d * this.d;\n        this.a = aNew;\n        this.b = bNew;\n        return this;\n      };\n      /*\\\n       * Matrix.multLeft\n       [ method ]\n       **\n       * Multiplies a passed affine transform to the left: M * this.\n       - a (number)\n       - b (number)\n       - c (number)\n       - d (number)\n       - e (number)\n       - f (number)\n       * or\n       - matrix (object) @Matrix\n      \\*/\n      Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n        if (a && a instanceof Matrix) {\n          return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n        }\n        var aNew = a * this.a + c * this.b,\n          cNew = a * this.c + c * this.d,\n          eNew = a * this.e + c * this.f + e;\n        this.b = b * this.a + d * this.b;\n        this.d = b * this.c + d * this.d;\n        this.f = b * this.e + d * this.f + f;\n        this.a = aNew;\n        this.c = cNew;\n        this.e = eNew;\n        return this;\n      };\n      /*\\\n       * Matrix.invert\n       [ method ]\n       **\n       * Returns an inverted version of the matrix\n       = (object) @Matrix\n      \\*/\n      matrixproto.invert = function () {\n        var me = this,\n          x = me.a * me.d - me.b * me.c;\n        return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n      };\n      /*\\\n       * Matrix.clone\n       [ method ]\n       **\n       * Returns a copy of the matrix\n       = (object) @Matrix\n      \\*/\n      matrixproto.clone = function () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n      };\n      /*\\\n       * Matrix.translate\n       [ method ]\n       **\n       * Translate the matrix\n       - x (number) horizontal offset distance\n       - y (number) vertical offset distance\n      \\*/\n      matrixproto.translate = function (x, y) {\n        this.e += x * this.a + y * this.c;\n        this.f += x * this.b + y * this.d;\n        return this;\n      };\n      /*\\\n       * Matrix.scale\n       [ method ]\n       **\n       * Scales the matrix\n       - x (number) amount to be scaled, with `1` resulting in no change\n       - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n       - cx (number) #optional horizontal origin point from which to scale\n       - cy (number) #optional vertical origin point from which to scale\n       * Default cx, cy is the middle point of the element.\n      \\*/\n      matrixproto.scale = function (x, y, cx, cy) {\n        y == null && (y = x);\n        (cx || cy) && this.translate(cx, cy);\n        this.a *= x;\n        this.b *= x;\n        this.c *= y;\n        this.d *= y;\n        (cx || cy) && this.translate(-cx, -cy);\n        return this;\n      };\n      /*\\\n       * Matrix.rotate\n       [ method ]\n       **\n       * Rotates the matrix\n       - a (number) angle of rotation, in degrees\n       - x (number) horizontal origin point from which to rotate\n       - y (number) vertical origin point from which to rotate\n      \\*/\n      matrixproto.rotate = function (a, x, y) {\n        a = Snap.rad(a);\n        x = x || 0;\n        y = y || 0;\n        var cos = +math.cos(a).toFixed(9),\n          sin = +math.sin(a).toFixed(9);\n        this.add(cos, sin, -sin, cos, x, y);\n        return this.add(1, 0, 0, 1, -x, -y);\n      };\n      /*\\\n       * Matrix.skewX\n       [ method ]\n       **\n       * Skews the matrix along the x-axis\n       - x (number) Angle to skew along the x-axis (in degrees).\n      \\*/\n      matrixproto.skewX = function (x) {\n        return this.skew(x, 0);\n      };\n      /*\\\n       * Matrix.skewY\n       [ method ]\n       **\n       * Skews the matrix along the y-axis\n       - y (number) Angle to skew along the y-axis (in degrees).\n      \\*/\n      matrixproto.skewY = function (y) {\n        return this.skew(0, y);\n      };\n      /*\\\n       * Matrix.skew\n       [ method ]\n       **\n       * Skews the matrix\n       - y (number) Angle to skew along the y-axis (in degrees).\n       - x (number) Angle to skew along the x-axis (in degrees).\n      \\*/\n      matrixproto.skew = function (x, y) {\n        x = x || 0;\n        y = y || 0;\n        x = Snap.rad(x);\n        y = Snap.rad(y);\n        var c = math.tan(x).toFixed(9);\n        var b = math.tan(y).toFixed(9);\n        return this.add(1, b, c, 1, 0, 0);\n      };\n      /*\\\n       * Matrix.x\n       [ method ]\n       **\n       * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n       - x (number)\n       - y (number)\n       = (number) x\n      \\*/\n      matrixproto.x = function (x, y) {\n        return x * this.a + y * this.c + this.e;\n      };\n      /*\\\n       * Matrix.y\n       [ method ]\n       **\n       * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n       - x (number)\n       - y (number)\n       = (number) y\n      \\*/\n      matrixproto.y = function (x, y) {\n        return x * this.b + y * this.d + this.f;\n      };\n      matrixproto.get = function (i) {\n        return +this[Str.fromCharCode(97 + i)].toFixed(4);\n      };\n      matrixproto.toString = function () {\n        return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n      };\n      matrixproto.offset = function () {\n        return [this.e.toFixed(4), this.f.toFixed(4)];\n      };\n      function norm(a) {\n        return a[0] * a[0] + a[1] * a[1];\n      }\n      function normalize(a) {\n        var mag = math.sqrt(norm(a));\n        a[0] && (a[0] /= mag);\n        a[1] && (a[1] /= mag);\n      }\n      /*\\\n       * Matrix.determinant\n       [ method ]\n       **\n       * Finds determinant of the given matrix.\n       = (number) determinant\n      \\*/\n      matrixproto.determinant = function () {\n        return this.a * this.d - this.b * this.c;\n      };\n      /*\\\n       * Matrix.split\n       [ method ]\n       **\n       * Splits matrix into primitive transformations\n       = (object) in format:\n       o dx (number) translation by x\n       o dy (number) translation by y\n       o scalex (number) scale by x\n       o scaley (number) scale by y\n       o shear (number) shear\n       o rotate (number) rotation in deg\n       o isSimple (boolean) could it be represented via simple transformations\n      \\*/\n      matrixproto.split = function () {\n        var out = {};\n        // translation\n        out.dx = this.e;\n        out.dy = this.f;\n\n        // scale and shear\n        var row = [[this.a, this.b], [this.c, this.d]];\n        out.scalex = math.sqrt(norm(row[0]));\n        normalize(row[0]);\n        out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n        row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n        out.scaley = math.sqrt(norm(row[1]));\n        normalize(row[1]);\n        out.shear /= out.scaley;\n        if (this.determinant() < 0) {\n          out.scalex = -out.scalex;\n        }\n\n        // rotation\n        var sin = row[0][1],\n          cos = row[1][1];\n        if (cos < 0) {\n          out.rotate = Snap.deg(math.acos(cos));\n          if (sin < 0) {\n            out.rotate = 360 - out.rotate;\n          }\n        } else {\n          out.rotate = Snap.deg(math.asin(sin));\n        }\n        out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n        out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n        out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n        return out;\n      };\n      /*\\\n       * Matrix.toTransformString\n       [ method ]\n       **\n       * Returns transform string that represents given matrix\n       = (string) transform string\n      \\*/\n      matrixproto.toTransformString = function (shorter) {\n        var s = shorter || this.split();\n        if (!+s.shear.toFixed(9)) {\n          s.scalex = +s.scalex.toFixed(4);\n          s.scaley = +s.scaley.toFixed(4);\n          s.rotate = +s.rotate.toFixed(4);\n          return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n        } else {\n          return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n        }\n      };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n      return new Matrix(a, b, c, d, e, f);\n    };\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n      make = Snap._.make,\n      wrap = Snap._.wrap,\n      is = Snap.is,\n      getSomeDefs = Snap._.getSomeDefs,\n      reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n      $ = Snap._.$,\n      URL = Snap.url,\n      Str = String,\n      separator = Snap._.separator,\n      E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n      var res = String(value).match(reURLValue);\n      return res ? res[2] : value;\n    };\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n        if (value instanceof Fragment && value.node.childNodes.length == 1) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n        if (value.type == \"mask\") {\n          var mask = value;\n        } else {\n          mask = make(\"mask\", getSomeDefs(this));\n          mask.node.appendChild(value.node);\n        }\n        !mask.node.id && $(mask.node, {\n          id: mask.id\n        });\n        $(this.node, {\n          mask: URL(mask.id)\n        });\n      }\n    });\n    (function (clipIt) {\n      eve.on(\"snap.util.attr.clip\", clipIt);\n      eve.on(\"snap.util.attr.clip-path\", clipIt);\n      eve.on(\"snap.util.attr.clipPath\", clipIt);\n    })(function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n        var clip,\n          node = value.node;\n        while (node) {\n          if (node.nodeName === \"clipPath\") {\n            clip = new Element(node);\n            break;\n          }\n          if (node.nodeName === \"svg\") {\n            clip = undefined;\n            break;\n          }\n          node = node.parentNode;\n        }\n        if (!clip) {\n          clip = make(\"clipPath\", getSomeDefs(this));\n          clip.node.appendChild(value.node);\n          !clip.node.id && $(clip.node, {\n            id: clip.id\n          });\n        }\n        $(this.node, {\n          \"clip-path\": URL(clip.node.id || clip.id)\n        });\n      }\n    });\n    function fillStroke(name) {\n      return function (value) {\n        eve.stop();\n        if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n        if (value instanceof Element) {\n          if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n            if (!value.node.id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n            var fill = URL(value.node.id);\n          } else {\n            fill = value.attr(name);\n          }\n        } else {\n          fill = Snap.color(value);\n          if (fill.error) {\n            var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n            if (grad) {\n              if (!grad.node.id) {\n                $(grad.node, {\n                  id: grad.id\n                });\n              }\n              fill = URL(grad.node.id);\n            } else {\n              fill = value;\n            }\n          } else {\n            fill = Str(fill);\n          }\n        }\n        var attrs = {};\n        attrs[name] = fill;\n        $(this.node, attrs);\n        this.node.style[name] = E;\n      };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n      string = Str(string);\n      var tokens = string.match(gradrg);\n      if (!tokens) {\n        return null;\n      }\n      var type = tokens[1],\n        params = tokens[2],\n        stops = tokens[3];\n      params = params.split(/\\s*,\\s*/).map(function (el) {\n        return +el == el ? +el : el;\n      });\n      if (params.length == 1 && params[0] == 0) {\n        params = [];\n      }\n      stops = stops.split(\"-\");\n      stops = stops.map(function (el) {\n        el = el.split(\":\");\n        var out = {\n          color: el[0]\n        };\n        if (el[1]) {\n          out.offset = parseFloat(el[1]);\n        }\n        return out;\n      });\n      var len = stops.length,\n        start = 0,\n        j = 0;\n      function seed(i, end) {\n        var step = (end - start) / (i - j);\n        for (var k = j; k < i; k++) {\n          stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n        }\n        j = i;\n        start = end;\n      }\n      len--;\n      for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n        seed(i, stops[i].offset);\n      }\n      stops[len].offset = stops[len].offset || 100;\n      seed(len, stops[len].offset);\n      return {\n        type: type,\n        params: params,\n        stops: stops\n      };\n    });\n    eve.on(\"snap.util.attr.d\", function (value) {\n      eve.stop();\n      if (is(value, \"array\") && is(value[0], \"array\")) {\n        value = Snap.path.toString.call(value);\n      }\n      value = Str(value);\n      if (value.match(/[ruo]/i)) {\n        value = Snap.path.toAbsolute(value);\n      }\n      $(this.node, {\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n      eve.stop();\n      value = Str(value);\n      var txt = glob.doc.createTextNode(value);\n      while (this.node.firstChild) {\n        this.node.removeChild(this.node.firstChild);\n      }\n      this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n      eve.stop();\n      this.attr({\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n      eve.stop();\n      this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n      var vb;\n      if (is(value, \"object\") && \"x\" in value) {\n        vb = [value.x, value.y, value.width, value.height].join(\" \");\n      } else if (is(value, \"array\")) {\n        vb = value.join(\" \");\n      } else {\n        vb = value;\n      }\n      $(this.node, {\n        viewBox: vb\n      });\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n      this.transform(value);\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n      if (this.type == \"rect\") {\n        eve.stop();\n        $(this.node, {\n          rx: value,\n          ry: value\n        });\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n      eve.stop();\n      if (this.type == \"text\") {\n        var id, tp, node;\n        if (!value && this.textPath) {\n          tp = this.textPath;\n          while (tp.node.firstChild) {\n            this.node.appendChild(tp.node.firstChild);\n          }\n          tp.remove();\n          delete this.textPath;\n          return;\n        }\n        if (is(value, \"string\")) {\n          var defs = getSomeDefs(this),\n            path = wrap(defs.parentNode).path(value);\n          defs.appendChild(path.node);\n          id = path.id;\n          path.attr({\n            id: id\n          });\n        } else {\n          value = wrap(value);\n          if (value instanceof Element) {\n            id = value.attr(\"id\");\n            if (!id) {\n              id = value.id;\n              value.attr({\n                id: id\n              });\n            }\n          }\n        }\n        if (id) {\n          tp = this.textPath;\n          node = this.node;\n          if (tp) {\n            tp.attr({\n              \"xlink:href\": \"#\" + id\n            });\n          } else {\n            tp = $(\"textPath\", {\n              \"xlink:href\": \"#\" + id\n            });\n            while (node.firstChild) {\n              tp.appendChild(node.firstChild);\n            }\n            node.appendChild(tp);\n            this.textPath = wrap(tp);\n          }\n        }\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n      if (this.type == \"text\") {\n        var i = 0,\n          node = this.node,\n          tuner = function (chunk) {\n            var out = $(\"tspan\");\n            if (is(chunk, \"array\")) {\n              for (var i = 0; i < chunk.length; i++) {\n                out.appendChild(tuner(chunk[i]));\n              }\n            } else {\n              out.appendChild(glob.doc.createTextNode(chunk));\n            }\n            out.normalize && out.normalize();\n            return out;\n          };\n        while (node.firstChild) {\n          node.removeChild(node.firstChild);\n        }\n        var tuned = tuner(value);\n        while (tuned.firstChild) {\n          node.appendChild(tuned.firstChild);\n        }\n      }\n      eve.stop();\n    })(-1);\n    function setFontSize(value) {\n      eve.stop();\n      if (value == +value) {\n        value += \"px\";\n      }\n      this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n    eve.on(\"snap.util.getattr.transform\", function () {\n      eve.stop();\n      return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n      eve.stop();\n      return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n      function getter(end) {\n        return function () {\n          eve.stop();\n          var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n          if (style == \"none\") {\n            return style;\n          } else {\n            return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n          }\n        };\n      }\n      function setter(end) {\n        return function (value) {\n          eve.stop();\n          var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n          if (value == \"\" || !value) {\n            this.node.style[name] = \"none\";\n            return;\n          }\n          if (value.type == \"marker\") {\n            var id = value.node.id;\n            if (!id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n            this.node.style[name] = URL(id);\n            return;\n          }\n        };\n      }\n      eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    })();\n    eve.on(\"snap.util.getattr.r\", function () {\n      if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n        eve.stop();\n        return $(this.node, \"rx\");\n      }\n    })(-1);\n    function textExtract(node) {\n      var out = [];\n      var children = node.childNodes;\n      for (var i = 0, ii = children.length; i < ii; i++) {\n        var chi = children[i];\n        if (chi.nodeType == 3) {\n          out.push(chi.nodeValue);\n        }\n        if (chi.tagName == \"tspan\") {\n          if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n            out.push(chi.firstChild.nodeValue);\n          } else {\n            out.push(textExtract(chi));\n          }\n        }\n      }\n      return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n      if (this.type == \"text\" || this.type == \"tspan\") {\n        eve.stop();\n        var out = textExtract(this.node);\n        return out.length == 1 ? out[0] : out;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n      return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n      if (internal) {\n        return;\n      }\n      eve.stop();\n      var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n      return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n      if (internal) {\n        return;\n      }\n      eve.stop();\n      var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n      return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n      eve.stop();\n      var vb = $(this.node, \"viewBox\");\n      if (vb) {\n        vb = vb.split(separator);\n        return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n      var p = $(this.node, \"points\");\n      eve.stop();\n      if (p) {\n        return p.split(separator);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n      var p = $(this.node, \"d\");\n      eve.stop();\n      return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n      return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n      eve.stop();\n      return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n  });\n\n  // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n      rgBadSpace = /[\\t\\r\\n\\f]/g,\n      rgTrim = /(^\\s+|\\s+$)/g,\n      Str = String,\n      elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n      if (classes.length) {\n        j = 0;\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n          if (!~pos) {\n            curClasses.push(clazz);\n          }\n        }\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n      return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n      if (curClasses.length) {\n        j = 0;\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n          if (~pos) {\n            curClasses.splice(pos, 1);\n          }\n        }\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n      return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n      var elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [];\n      return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n      if (flag != null) {\n        if (flag) {\n          return this.addClass(value);\n        } else {\n          return this.removeClass(value);\n        }\n      }\n      var classes = (value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n      j = 0;\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        } else {\n          curClasses.push(clazz);\n        }\n      }\n      finalValue = curClasses.join(\" \");\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n      return this;\n    };\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n        \"+\": function (x, y) {\n          return x + y;\n        },\n        \"-\": function (x, y) {\n          return x - y;\n        },\n        \"/\": function (x, y) {\n          return x / y;\n        },\n        \"*\": function (x, y) {\n          return x * y;\n        }\n      },\n      Str = String,\n      reUnit = /[a-z]+$/i,\n      reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n      return val;\n    }\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n      var plus = Str(val).match(reAddon);\n      if (plus) {\n        var evnt = eve.nt(),\n          name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n          a = this.attr(name),\n          atr = {};\n        eve.stop();\n        var unit = plus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[plus[1]];\n        if (aUnit && aUnit == unit) {\n          val = op(parseFloat(a), +plus[2]);\n        } else {\n          a = this.asPX(name);\n          val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n        }\n        if (isNaN(a) || isNaN(val)) {\n          return;\n        }\n        atr[name] = val;\n        this.attr(atr);\n      }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this,\n        bplus = Str(b).match(reAddon);\n      if (bplus) {\n        eve.stop();\n        var unit = bplus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[bplus[1]];\n        if (aUnit && aUnit == unit) {\n          return {\n            from: parseFloat(a),\n            to: op(parseFloat(a), +bplus[2]),\n            f: getUnit(aUnit)\n          };\n        } else {\n          a = this.asPX(name);\n          return {\n            from: a,\n            to: op(a, this.asPX(name, bplus[2] + unit)),\n            f: getNumber\n          };\n        }\n      }\n    })(-10);\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n      is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n      var attr;\n      if (ry == null) {\n        ry = rx;\n      }\n      if (is(x, \"object\") && x == \"[object Object]\") {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          width: w,\n          height: h\n        };\n        if (rx != null) {\n          attr.rx = rx;\n          attr.ry = ry;\n        }\n      }\n      return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n      var attr;\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          r: r\n        };\n      }\n      return this.el(\"circle\", attr);\n    };\n    var preload = function () {\n      function onerror() {\n        this.parentNode.removeChild(this);\n      }\n      return function (src, f) {\n        var img = glob.doc.createElement(\"img\"),\n          body = glob.doc.body;\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n        img.onload = function () {\n          f.call(img);\n          img.onload = img.onerror = null;\n          body.removeChild(img);\n        };\n        img.onerror = onerror;\n        body.appendChild(img);\n        img.src = src;\n      };\n    }();\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n      var el = this.el(\"image\");\n      if (is(src, \"object\") && \"src\" in src) {\n        el.attr(src);\n      } else if (src != null) {\n        var set = {\n          \"xlink:href\": src,\n          preserveAspectRatio: \"none\"\n        };\n        if (x != null && y != null) {\n          set.x = x;\n          set.y = y;\n        }\n        if (width != null && height != null) {\n          set.width = width;\n          set.height = height;\n        } else {\n          preload(src, function () {\n            Snap._.$(el.node, {\n              width: this.offsetWidth,\n              height: this.offsetHeight\n            });\n          });\n        }\n        Snap._.$(el.node, set);\n      }\n      return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n      var attr;\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          rx: rx,\n          ry: ry\n        };\n      }\n      return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n      var attr;\n      if (is(d, \"object\") && !is(d, \"array\")) {\n        attr = d;\n      } else if (d) {\n        attr = {\n          d: d\n        };\n      }\n      return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n      var attr,\n        el = this.el(\"g\");\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n      return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n      var attrs = {};\n      if (is(x, \"object\") && y == null) {\n        attrs = x;\n      } else {\n        if (x != null) {\n          attrs.x = x;\n        }\n        if (y != null) {\n          attrs.y = y;\n        }\n        if (width != null) {\n          attrs.width = width;\n        }\n        if (height != null) {\n          attrs.height = height;\n        }\n        if (vbx != null && vby != null && vbw != null && vbh != null) {\n          attrs.viewBox = [vbx, vby, vbw, vbh];\n        }\n      }\n      return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n      var attr,\n        el = this.el(\"mask\");\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n      return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n      if (is(x, \"object\")) {\n        var attr = x;\n      } else {\n        attr = {\n          patternUnits: \"userSpaceOnUse\"\n        };\n        if (x) {\n          attr.x = x;\n        }\n        if (y) {\n          attr.y = y;\n        }\n        if (width != null) {\n          attr.width = width;\n        }\n        if (height != null) {\n          attr.height = height;\n        }\n        if (vx != null && vy != null && vw != null && vh != null) {\n          attr.viewBox = [vx, vy, vw, vh];\n        } else {\n          attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n        }\n      }\n      return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n      if (id != null) {\n        if (id instanceof Element) {\n          if (!id.attr(\"id\")) {\n            id.attr({\n              id: Snap._.id(id)\n            });\n          }\n          id = id.attr(\"id\");\n        }\n        if (String(id).charAt() == \"#\") {\n          id = id.substring(1);\n        }\n        return this.el(\"use\", {\n          \"xlink:href\": \"#\" + id\n        });\n      } else {\n        return Element.prototype.use.call(this);\n      }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n      var attr = {};\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      }\n      return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n      var attr = {};\n      if (is(x, \"object\")) {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          text: text || \"\"\n        };\n      }\n      return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n      var attr = {};\n      if (is(x1, \"object\")) {\n        attr = x1;\n      } else if (x1 != null) {\n        attr = {\n          x1: x1,\n          x2: x2,\n          y1: y1,\n          y2: y2\n        };\n      }\n      return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n      var attr = {};\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n      return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n      var attr = {};\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n      return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n      var $ = Snap._.$;\n      // gradients' helpers\n      /*\\\n       * Element.stops\n       [ method ]\n       **\n       * Only for gradients!\n       * Returns array of gradient stops elements.\n       = (array) the stops array.\n      \\*/\n      function Gstops() {\n        return this.selectAll(\"stop\");\n      }\n      /*\\\n       * Element.addStop\n       [ method ]\n       **\n       * Only for gradients!\n       * Adds another stop to the gradient.\n       - color (string) stops color\n       - offset (number) stops offset 0..100\n       = (object) gradient element\n      \\*/\n      function GaddStop(color, offset) {\n        var stop = $(\"stop\"),\n          attr = {\n            offset: +offset + \"%\"\n          };\n        color = Snap.color(color);\n        attr[\"stop-color\"] = color.hex;\n        if (color.opacity < 1) {\n          attr[\"stop-opacity\"] = color.opacity;\n        }\n        $(stop, attr);\n        var stops = this.stops(),\n          inserted;\n        for (var i = 0; i < stops.length; i++) {\n          var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n          if (stopOffset > offset) {\n            this.node.insertBefore(stop, stops[i].node);\n            inserted = true;\n            break;\n          }\n        }\n        if (!inserted) {\n          this.node.appendChild(stop);\n        }\n        return this;\n      }\n      function GgetBBox() {\n        if (this.type == \"linearGradient\") {\n          var x1 = $(this.node, \"x1\") || 0,\n            x2 = $(this.node, \"x2\") || 1,\n            y1 = $(this.node, \"y1\") || 0,\n            y2 = $(this.node, \"y2\") || 0;\n          return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n        } else {\n          var cx = this.node.cx || .5,\n            cy = this.node.cy || .5,\n            r = this.node.r || 0;\n          return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n        }\n      }\n      /*\\\n       * Element.setStops\n       [ method ]\n       **\n       * Only for gradients!\n       * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n       - str (string) gradient descriptor part after `()`.\n       = (object) gradient element\n       | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n       | g.setStops(\"#fff-#000-#f00-#fc0\");\n      \\*/\n      function GsetStops(str) {\n        var grad = str,\n          stops = this.stops();\n        if (typeof str == \"string\") {\n          grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n        }\n        if (!Snap.is(grad, \"array\")) {\n          return;\n        }\n        for (var i = 0; i < stops.length; i++) {\n          if (grad[i]) {\n            var color = Snap.color(grad[i].color),\n              attr = {\n                \"offset\": grad[i].offset + \"%\"\n              };\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n              attr[\"stop-opacity\"] = color.opacity;\n            }\n            stops[i].attr(attr);\n          } else {\n            stops[i].remove();\n          }\n        }\n        for (i = stops.length; i < grad.length; i++) {\n          this.addStop(grad[i].color, grad[i].offset);\n        }\n        return this;\n      }\n      function gradient(defs, str) {\n        var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n          el;\n        if (!grad) {\n          return null;\n        }\n        grad.params.unshift(defs);\n        if (grad.type.toLowerCase() == \"l\") {\n          el = gradientLinear.apply(0, grad.params);\n        } else {\n          el = gradientRadial.apply(0, grad.params);\n        }\n        if (grad.type != grad.type.toLowerCase()) {\n          $(el.node, {\n            gradientUnits: \"userSpaceOnUse\"\n          });\n        }\n        var stops = grad.stops,\n          len = stops.length;\n        for (var i = 0; i < len; i++) {\n          var stop = stops[i];\n          el.addStop(stop.color, stop.offset);\n        }\n        return el;\n      }\n      function gradientLinear(defs, x1, y1, x2, y2) {\n        var el = Snap._.make(\"linearGradient\", defs);\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n        el.setStops = GsetStops;\n        if (x1 != null) {\n          $(el.node, {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n          });\n        }\n        return el;\n      }\n      function gradientRadial(defs, cx, cy, r, fx, fy) {\n        var el = Snap._.make(\"radialGradient\", defs);\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n        if (cx != null) {\n          $(el.node, {\n            cx: cx,\n            cy: cy,\n            r: r\n          });\n        }\n        if (fx != null && fy != null) {\n          $(el.node, {\n            fx: fx,\n            fy: fy\n          });\n        }\n        return el;\n      }\n      /*\\\n       * Paper.gradient\n       [ method ]\n       **\n       * Creates a gradient element\n       **\n       - gradient (string) gradient descriptor\n       > Gradient Descriptor\n       * The gradient descriptor is an expression formatted as\n       * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n       * either linear or radial.  The uppercase `L` or `R` letters\n       * indicate absolute coordinates offset from the SVG surface.\n       * Lowercase `l` or `r` letters indicate coordinates\n       * calculated relative to the element to which the gradient is\n       * applied.  Coordinates specify a linear gradient vector as\n       * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n       * `r` and optional `fx`, `fy` specifying a focal point away\n       * from the center of the circle. Specify `<colors>` as a list\n       * of dash-separated CSS color values.  Each color may be\n       * followed by a custom offset value, separated with a colon\n       * character.\n       > Examples\n       * Linear gradient, relative from top-left corner to bottom-right\n       * corner, from black through red to white:\n       | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n       * Linear gradient, absolute from (0, 0) to (100, 100), from black\n       * through red at 25% to white:\n       | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n       * Radial gradient, relative from the center of the element with radius\n       * half the width, from black to white:\n       | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n       * To apply the gradient:\n       | paper.circle(50, 50, 40).attr({\n       |     fill: g\n       | });\n       = (object) the `gradient` element\n      \\*/\n      proto.gradient = function (str) {\n        return gradient(this.defs, str);\n      };\n      proto.gradientLinear = function (x1, y1, x2, y2) {\n        return gradientLinear(this.defs, x1, y1, x2, y2);\n      };\n      proto.gradientRadial = function (cx, cy, r, fx, fy) {\n        return gradientRadial(this.defs, cx, cy, r, fx, fy);\n      };\n      /*\\\n       * Paper.toString\n       [ method ]\n       **\n       * Returns SVG code for the @Paper\n       = (string) SVG code for the @Paper\n      \\*/\n      proto.toString = function () {\n        var doc = this.node.ownerDocument,\n          f = doc.createDocumentFragment(),\n          d = doc.createElement(\"div\"),\n          svg = this.node.cloneNode(true),\n          res;\n        f.appendChild(d);\n        d.appendChild(svg);\n        Snap._.$(svg, {\n          xmlns: \"http://www.w3.org/2000/svg\"\n        });\n        res = d.innerHTML;\n        f.removeChild(f.firstChild);\n        return res;\n      };\n      /*\\\n       * Paper.toDataURL\n       [ method ]\n       **\n       * Returns SVG code for the @Paper as Data URI string.\n       = (string) Data URI string\n      \\*/\n      proto.toDataURL = function () {\n        if (window && window.btoa) {\n          return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n        }\n      };\n      /*\\\n       * Paper.clear\n       [ method ]\n       **\n       * Removes all child nodes of the paper, except <defs>.\n      \\*/\n      proto.clear = function () {\n        var node = this.node.firstChild,\n          next;\n        while (node) {\n          next = node.nextSibling;\n          if (node.tagName != \"defs\") {\n            node.parentNode.removeChild(node);\n          } else {\n            proto.clear.call({\n              node: node\n            });\n          }\n          node = next;\n        }\n      };\n    })();\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n      is = Snap.is,\n      clone = Snap._.clone,\n      has = \"hasOwnProperty\",\n      p2s = /,?([a-z]),?/gi,\n      toFloat = parseFloat,\n      math = Math,\n      PI = math.PI,\n      mmin = math.min,\n      mmax = math.max,\n      pow = math.pow,\n      abs = math.abs;\n    function paths(ps) {\n      var p = paths.ps = paths.ps || {};\n      if (p[ps]) {\n        p[ps].sleep = 100;\n      } else {\n        p[ps] = {\n          sleep: 100\n        };\n      }\n      setTimeout(function () {\n        for (var key in p) if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      });\n      return p[ps];\n    }\n    function box(x, y, width, height) {\n      if (x == null) {\n        x = y = width = height = 0;\n      }\n      if (y == null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n      return {\n        x: x,\n        y: y,\n        width: width,\n        w: width,\n        height: height,\n        h: height,\n        x2: x + width,\n        y2: y + height,\n        cx: x + width / 2,\n        cy: y + height / 2,\n        r1: math.min(width, height) / 2,\n        r2: math.max(width, height) / 2,\n        r0: math.sqrt(width * width + height * height) / 2,\n        path: rectPath(x, y, width, height),\n        vb: [x, y, width, height].join(\" \")\n      };\n    }\n    function toString() {\n      return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n      var res = clone(pathArray);\n      res.toString = toString;\n      return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n      if (length == null) {\n        return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n      } else {\n        return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n      }\n    }\n    function getLengthFactory(istotal, subpath) {\n      function O(val) {\n        return +(+val).toFixed(3);\n      }\n      return Snap._.cacher(function (path, length, onlystart) {\n        if (path instanceof Element) {\n          path = path.attr(\"d\");\n        }\n        path = path2curve(path);\n        var x,\n          y,\n          p,\n          l,\n          sp = \"\",\n          subpaths = {},\n          point,\n          len = 0;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n          p = path[i];\n          if (p[0] == \"M\") {\n            x = +p[1];\n            y = +p[2];\n          } else {\n            l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n            if (len + l > length) {\n              if (subpath && !subpaths.start) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n                if (onlystart) {\n                  return sp;\n                }\n                subpaths.start = sp;\n                sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n                len += l;\n                x = +p[5];\n                y = +p[6];\n                continue;\n              }\n              if (!istotal && !subpath) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                return point;\n              }\n            }\n            len += l;\n            x = +p[5];\n            y = +p[6];\n          }\n          sp += p.shift() + p;\n        }\n        subpaths.end = sp;\n        point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n        return point;\n      }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n      getPointAtLength = getLengthFactory(),\n      getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t,\n        t13 = pow(t1, 3),\n        t12 = pow(t1, 2),\n        t2 = t * t,\n        t3 = t2 * t,\n        x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n        y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n        mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n        my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n        nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n        ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n        ax = t1 * p1x + t * c1x,\n        ay = t1 * p1y + t * c1y,\n        cx = t1 * c2x + t * p2x,\n        cy = t1 * c2y + t * p2y,\n        alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n      // (mx > nx || my < ny) && (alpha += 180);\n      return {\n        x: x,\n        y: y,\n        m: {\n          x: mx,\n          y: my\n        },\n        n: {\n          x: nx,\n          y: ny\n        },\n        start: {\n          x: ax,\n          y: ay\n        },\n        end: {\n          x: cx,\n          y: cy\n        },\n        alpha: alpha\n      };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n      if (!Snap.is(p1x, \"array\")) {\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n      }\n      var bbox = curveDim.apply(null, p1x);\n      return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n    }\n    function isPointInsideBBox(bbox, x, y) {\n      return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n      bbox1 = box(bbox1);\n      bbox2 = box(bbox2);\n      return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n      var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n        t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n      return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n      if (z == null) {\n        z = 1;\n      }\n      z = z > 1 ? 1 : z < 0 ? 0 : z;\n      var z2 = z / 2,\n        n = 12,\n        Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n        Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n        sum = 0;\n      for (var i = 0; i < n; i++) {\n        var ct = z2 * Tvalues[i] + z2,\n          xbase = base3(ct, x1, x2, x3, x4),\n          ybase = base3(ct, y1, y2, y3, y4),\n          comb = xbase * xbase + ybase * ybase;\n        sum += Cvalues[i] * math.sqrt(comb);\n      }\n      return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n      if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n        return;\n      }\n      var t = 1,\n        step = t / 2,\n        t2 = t - step,\n        l,\n        e = .01;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n      while (abs(l - ll) > e) {\n        step /= 2;\n        t2 += (l < ll ? 1 : -1) * step;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n      }\n      return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n      if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n        return;\n      }\n      var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n      if (!denominator) {\n        return;\n      }\n      var px = nx / denominator,\n        py = ny / denominator,\n        px2 = +px.toFixed(2),\n        py2 = +py.toFixed(2);\n      if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n        return;\n      }\n      return {\n        x: px,\n        y: py\n      };\n    }\n    function inter(bez1, bez2) {\n      return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n      return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n      var bbox1 = bezierBBox(bez1),\n        bbox2 = bezierBBox(bez2);\n      if (!isBBoxIntersect(bbox1, bbox2)) {\n        return justCount ? 0 : [];\n      }\n      var l1 = bezlen.apply(0, bez1),\n        l2 = bezlen.apply(0, bez2),\n        n1 = ~~(l1 / 8),\n        n2 = ~~(l2 / 8),\n        dots1 = [],\n        dots2 = [],\n        xy = {},\n        res = justCount ? 0 : [];\n      for (var i = 0; i < n1 + 1; i++) {\n        var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n        dots1.push({\n          x: p.x,\n          y: p.y,\n          t: i / n1\n        });\n      }\n      for (i = 0; i < n2 + 1; i++) {\n        p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n        dots2.push({\n          x: p.x,\n          y: p.y,\n          t: i / n2\n        });\n      }\n      for (i = 0; i < n1; i++) {\n        for (var j = 0; j < n2; j++) {\n          var di = dots1[i],\n            di1 = dots1[i + 1],\n            dj = dots2[j],\n            dj1 = dots2[j + 1],\n            ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n            cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n            is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n          if (is) {\n            if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n              continue;\n            }\n            xy[is.x.toFixed(4)] = is.y.toFixed(4);\n            var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n              t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n            if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n              if (justCount) {\n                res++;\n              } else {\n                res.push({\n                  x: is.x,\n                  y: is.y,\n                  t1: t1,\n                  t2: t2\n                });\n              }\n            }\n          }\n        }\n      }\n      return res;\n    }\n    function pathIntersection(path1, path2) {\n      return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n      return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n      path1 = path2curve(path1);\n      path2 = path2curve(path2);\n      var x1,\n        y1,\n        x2,\n        y2,\n        x1m,\n        y1m,\n        x2m,\n        y2m,\n        bez1,\n        bez2,\n        res = justCount ? 0 : [];\n      for (var i = 0, ii = path1.length; i < ii; i++) {\n        var pi = path1[i];\n        if (pi[0] == \"M\") {\n          x1 = x1m = pi[1];\n          y1 = y1m = pi[2];\n        } else {\n          if (pi[0] == \"C\") {\n            bez1 = [x1, y1].concat(pi.slice(1));\n            x1 = bez1[6];\n            y1 = bez1[7];\n          } else {\n            bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n            x1 = x1m;\n            y1 = y1m;\n          }\n          for (var j = 0, jj = path2.length; j < jj; j++) {\n            var pj = path2[j];\n            if (pj[0] == \"M\") {\n              x2 = x2m = pj[1];\n              y2 = y2m = pj[2];\n            } else {\n              if (pj[0] == \"C\") {\n                bez2 = [x2, y2].concat(pj.slice(1));\n                x2 = bez2[6];\n                y2 = bez2[7];\n              } else {\n                bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                x2 = x2m;\n                y2 = y2m;\n              }\n              var intr = interHelper(bez1, bez2, justCount);\n              if (justCount) {\n                res += intr;\n              } else {\n                for (var k = 0, kk = intr.length; k < kk; k++) {\n                  intr[k].segment1 = i;\n                  intr[k].segment2 = j;\n                  intr[k].bez1 = bez1;\n                  intr[k].bez2 = bez2;\n                }\n                res = res.concat(intr);\n              }\n            }\n          }\n        }\n      }\n      return res;\n    }\n    function isPointInsidePath(path, x, y) {\n      var bbox = pathBBox(path);\n      return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n      var pth = paths(path);\n      if (pth.bbox) {\n        return clone(pth.bbox);\n      }\n      if (!path) {\n        return box();\n      }\n      path = path2curve(path);\n      var x = 0,\n        y = 0,\n        X = [],\n        Y = [],\n        p;\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n        if (p[0] == \"M\") {\n          x = p[1];\n          y = p[2];\n          X.push(x);\n          Y.push(y);\n        } else {\n          var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n          X = X.concat(dim.min.x, dim.max.x);\n          Y = Y.concat(dim.min.y, dim.max.y);\n          x = p[5];\n          y = p[6];\n        }\n      }\n      var xmin = mmin.apply(0, X),\n        ymin = mmin.apply(0, Y),\n        xmax = mmax.apply(0, X),\n        ymax = mmax.apply(0, Y),\n        bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n      pth.bbox = clone(bb);\n      return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n      if (r) {\n        return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n      }\n      var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n      res.toString = toString;\n      return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n      if (a == null && ry == null) {\n        ry = rx;\n      }\n      x = +x;\n      y = +y;\n      rx = +rx;\n      ry = +ry;\n      if (a != null) {\n        var rad = Math.PI / 180,\n          x1 = x + rx * Math.cos(-ry * rad),\n          x2 = x + rx * Math.cos(-a * rad),\n          y1 = y + rx * Math.sin(-ry * rad),\n          y2 = y + rx * Math.sin(-a * rad),\n          res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n      } else {\n        res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n      }\n      res.toString = toString;\n      return res;\n    }\n    var unit2px = Snap._unit2px,\n      getPath = {\n        path: function (el) {\n          return el.attr(\"path\");\n        },\n        circle: function (el) {\n          var attr = unit2px(el);\n          return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n          var attr = unit2px(el);\n          return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n          var attr = unit2px(el);\n          return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n          var attr = unit2px(el);\n          return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n          return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n          return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n          return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n          var bbox = el.node.getBBox();\n          return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n      };\n    function pathToRelative(pathArray) {\n      var pth = paths(pathArray),\n        lowerCase = String.prototype.toLowerCase;\n      if (pth.rel) {\n        return pathClone(pth.rel);\n      }\n      if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n        pathArray = Snap.parsePathString(pathArray);\n      }\n      var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0;\n      if (pathArray[0][0] == \"M\") {\n        x = pathArray[0][1];\n        y = pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res.push([\"M\", x, y]);\n      }\n      for (var i = start, ii = pathArray.length; i < ii; i++) {\n        var r = res[i] = [],\n          pa = pathArray[i];\n        if (pa[0] != lowerCase.call(pa[0])) {\n          r[0] = lowerCase.call(pa[0]);\n          switch (r[0]) {\n            case \"a\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +(pa[6] - x).toFixed(3);\n              r[7] = +(pa[7] - y).toFixed(3);\n              break;\n            case \"v\":\n              r[1] = +(pa[1] - y).toFixed(3);\n              break;\n            case \"m\":\n              mx = pa[1];\n              my = pa[2];\n            default:\n              for (var j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n              }\n          }\n        } else {\n          r = res[i] = [];\n          if (pa[0] == \"m\") {\n            mx = pa[1] + x;\n            my = pa[2] + y;\n          }\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            res[i][k] = pa[k];\n          }\n        }\n        var len = res[i].length;\n        switch (res[i][0]) {\n          case \"z\":\n            x = mx;\n            y = my;\n            break;\n          case \"h\":\n            x += +res[i][len - 1];\n            break;\n          case \"v\":\n            y += +res[i][len - 1];\n            break;\n          default:\n            x += +res[i][len - 2];\n            y += +res[i][len - 1];\n        }\n      }\n      res.toString = toString;\n      pth.rel = pathClone(res);\n      return res;\n    }\n    function pathToAbsolute(pathArray) {\n      var pth = paths(pathArray);\n      if (pth.abs) {\n        return pathClone(pth.abs);\n      }\n      if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n        // rough assumption\n        pathArray = Snap.parsePathString(pathArray);\n      }\n      if (!pathArray || !pathArray.length) {\n        return [[\"M\", 0, 0]];\n      }\n      var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0,\n        pa0;\n      if (pathArray[0][0] == \"M\") {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = [\"M\", x, y];\n      }\n      var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n      for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push(r = []);\n        pa = pathArray[i];\n        pa0 = pa[0];\n        if (pa0 != pa0.toUpperCase()) {\n          r[0] = pa0.toUpperCase();\n          switch (r[0]) {\n            case \"A\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +pa[6] + x;\n              r[7] = +pa[7] + y;\n              break;\n            case \"V\":\n              r[1] = +pa[1] + y;\n              break;\n            case \"H\":\n              r[1] = +pa[1] + x;\n              break;\n            case \"R\":\n              var dots = [x, y].concat(pa.slice(1));\n              for (var j = 2, jj = dots.length; j < jj; j++) {\n                dots[j] = +dots[j] + x;\n                dots[++j] = +dots[j] + y;\n              }\n              res.pop();\n              res = res.concat(catmullRom2bezier(dots, crz));\n              break;\n            case \"O\":\n              res.pop();\n              dots = ellipsePath(x, y, pa[1], pa[2]);\n              dots.push(dots[0]);\n              res = res.concat(dots);\n              break;\n            case \"U\":\n              res.pop();\n              res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n              r = [\"U\"].concat(res[res.length - 1].slice(-2));\n              break;\n            case \"M\":\n              mx = +pa[1] + x;\n              my = +pa[2] + y;\n            default:\n              for (j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +pa[j] + (j % 2 ? x : y);\n              }\n          }\n        } else if (pa0 == \"R\") {\n          dots = [x, y].concat(pa.slice(1));\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          r = [\"R\"].concat(pa.slice(-2));\n        } else if (pa0 == \"O\") {\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n        } else if (pa0 == \"U\") {\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n        } else {\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            r[k] = pa[k];\n          }\n        }\n        pa0 = pa0.toUpperCase();\n        if (pa0 != \"O\") {\n          switch (r[0]) {\n            case \"Z\":\n              x = +mx;\n              y = +my;\n              break;\n            case \"H\":\n              x = r[1];\n              break;\n            case \"V\":\n              y = r[1];\n              break;\n            case \"M\":\n              mx = r[r.length - 2];\n              my = r[r.length - 1];\n            default:\n              x = r[r.length - 2];\n              y = r[r.length - 1];\n          }\n        }\n      }\n      res.toString = toString;\n      pth.abs = pathClone(res);\n      return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n      var _13 = 1 / 3,\n        _23 = 2 / 3;\n      return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n      // for more information of where this math came from visit:\n      // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n      var _120 = PI * 120 / 180,\n        rad = PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = Snap._.cacher(function (x, y, rad) {\n          var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n          return {\n            x: X,\n            y: Y\n          };\n        });\n      if (!rx || !ry) {\n        return [x1, y1, x2, y2, x2, y2];\n      }\n      if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var cos = math.cos(PI / 180 * angle),\n          sin = math.sin(PI / 180 * angle),\n          x = (x1 - x2) / 2,\n          y = (y1 - y2) / 2;\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\n        if (h > 1) {\n          h = math.sqrt(h);\n          rx = h * rx;\n          ry = h * ry;\n        }\n        var rx2 = rx * rx,\n          ry2 = ry * ry,\n          k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n          cx = k * rx * y / ry + (x1 + x2) / 2,\n          cy = k * -ry * x / rx + (y1 + y2) / 2,\n          f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n          f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n        f1 = x1 < cx ? PI - f1 : f1;\n        f2 = x2 < cx ? PI - f2 : f2;\n        f1 < 0 && (f1 = PI * 2 + f1);\n        f2 < 0 && (f2 = PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n          f1 = f1 - PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n          f2 = f2 - PI * 2;\n        }\n      } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n      }\n      var df = f2 - f1;\n      if (abs(df) > _120) {\n        var f2old = f2,\n          x2old = x2,\n          y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * math.cos(f2);\n        y2 = cy + ry * math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n      }\n      df = f2 - f1;\n      var c1 = math.cos(f1),\n        s1 = math.sin(f1),\n        c2 = math.cos(f2),\n        s2 = math.sin(f2),\n        t = math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n      m2[0] = 2 * m1[0] - m2[0];\n      m2[1] = 2 * m1[1] - m2[1];\n      if (recursive) {\n        return [m2, m3, m4].concat(res);\n      } else {\n        res = [m2, m3, m4].concat(res).join().split(\",\");\n        var newres = [];\n        for (var i = 0, ii = res.length; i < ii; i++) {\n          newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n        return newres;\n      }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t;\n      return {\n        x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n        y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n      };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n      var tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n      for (var i = 0; i < 2; ++i) {\n        if (i == 0) {\n          b = 6 * x0 - 12 * x1 + 6 * x2;\n          a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n          c = 3 * x1 - 3 * x0;\n        } else {\n          b = 6 * y0 - 12 * y1 + 6 * y2;\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n          c = 3 * y1 - 3 * y0;\n        }\n        if (abs(a) < 1e-12) {\n          if (abs(b) < 1e-12) {\n            continue;\n          }\n          t = -c / b;\n          if (0 < t && t < 1) {\n            tvalues.push(t);\n          }\n          continue;\n        }\n        b2ac = b * b - 4 * c * a;\n        sqrtb2ac = math.sqrt(b2ac);\n        if (b2ac < 0) {\n          continue;\n        }\n        t1 = (-b + sqrtb2ac) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n          tvalues.push(t1);\n        }\n        t2 = (-b - sqrtb2ac) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n          tvalues.push(t2);\n        }\n      }\n      var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n      while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      }\n      bounds[0][jlen] = x0;\n      bounds[1][jlen] = y0;\n      bounds[0][jlen + 1] = x3;\n      bounds[1][jlen + 1] = y3;\n      bounds[0].length = bounds[1].length = jlen + 2;\n      return {\n        min: {\n          x: mmin.apply(0, bounds[0]),\n          y: mmin.apply(0, bounds[1])\n        },\n        max: {\n          x: mmax.apply(0, bounds[0]),\n          y: mmax.apply(0, bounds[1])\n        }\n      };\n    }\n    function path2curve(path, path2) {\n      var pth = !path2 && paths(path);\n      if (!path2 && pth.curve) {\n        return pathClone(pth.curve);\n      }\n      var p = pathToAbsolute(path),\n        p2 = path2 && pathToAbsolute(path2),\n        attrs = {\n          x: 0,\n          y: 0,\n          bx: 0,\n          by: 0,\n          X: 0,\n          Y: 0,\n          qx: null,\n          qy: null\n        },\n        attrs2 = {\n          x: 0,\n          y: 0,\n          bx: 0,\n          by: 0,\n          X: 0,\n          Y: 0,\n          qx: null,\n          qy: null\n        },\n        processPath = function (path, d, pcom) {\n          var nx, ny;\n          if (!path) {\n            return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n          }\n          !(path[0] in {\n            T: 1,\n            Q: 1\n          }) && (d.qx = d.qy = null);\n          switch (path[0]) {\n            case \"M\":\n              d.X = path[1];\n              d.Y = path[2];\n              break;\n            case \"A\":\n              path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n              break;\n            case \"S\":\n              if (pcom == \"C\" || pcom == \"S\") {\n                // In \"S\" case we have to take into account, if the previous command is C/S.\n                nx = d.x * 2 - d.bx; // And reflect the previous\n                ny = d.y * 2 - d.by; // command's control point relative to the current point.\n              } else {\n                // or some else or nothing\n                nx = d.x;\n                ny = d.y;\n              }\n              path = [\"C\", nx, ny].concat(path.slice(1));\n              break;\n            case \"T\":\n              if (pcom == \"Q\" || pcom == \"T\") {\n                // In \"T\" case we have to take into account, if the previous command is Q/T.\n                d.qx = d.x * 2 - d.qx; // And make a reflection similar\n                d.qy = d.y * 2 - d.qy; // to case \"S\".\n              } else {\n                // or something else or nothing\n                d.qx = d.x;\n                d.qy = d.y;\n              }\n              path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n              break;\n            case \"Q\":\n              d.qx = path[1];\n              d.qy = path[2];\n              path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n              break;\n            case \"L\":\n              path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n              break;\n            case \"H\":\n              path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n              break;\n            case \"V\":\n              path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n              break;\n            case \"Z\":\n              path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n              break;\n          }\n          return path;\n        },\n        fixArc = function (pp, i) {\n          if (pp[i].length > 7) {\n            pp[i].shift();\n            var pi = pp[i];\n            while (pi.length) {\n              pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n              p2 && (pcoms2[i] = \"A\"); // the same as above\n              pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n            }\n            pp.splice(i, 1);\n            ii = mmax(p.length, p2 && p2.length || 0);\n          }\n        },\n        fixM = function (path1, path2, a1, a2, i) {\n          if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n            path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n            a1.bx = 0;\n            a1.by = 0;\n            a1.x = path1[i][1];\n            a1.y = path1[i][2];\n            ii = mmax(p.length, p2 && p2.length || 0);\n          }\n        },\n        pcoms1 = [],\n        // path commands of original path p\n        pcoms2 = [],\n        // path commands of original path p2\n        pfirst = \"\",\n        // temporary holder for original path command\n        pcom = \"\"; // holder for previous path command of original path\n      for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n\n        if (pfirst != \"C\")\n          // C is not saved yet, because it may be result of conversion\n          {\n            pcoms1[i] = pfirst; // Save current path command\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n          }\n\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n        if (p2) {\n          // the same procedures is done to p2\n          p2[i] && (pfirst = p2[i][0]);\n          if (pfirst != \"C\") {\n            pcoms2[i] = pfirst;\n            i && (pcom = pcoms2[i - 1]);\n          }\n          p2[i] = processPath(p2[i], attrs2, pcom);\n          if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n            pcoms2[i] = \"C\";\n          }\n          fixArc(p2, i);\n        }\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i],\n          seg2 = p2 && p2[i],\n          seglen = seg.length,\n          seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n      }\n      if (!p2) {\n        pth.curve = pathClone(p);\n      }\n      return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n      if (!matrix) {\n        return path;\n      }\n      var x, y, i, j, ii, jj, pathi;\n      path = path2curve(path);\n      for (i = 0, ii = path.length; i < ii; i++) {\n        pathi = path[i];\n        for (j = 1, jj = pathi.length; j < jj; j += 2) {\n          x = matrix.x(pathi[j], pathi[j + 1]);\n          y = matrix.y(pathi[j], pathi[j + 1]);\n          pathi[j] = x;\n          pathi[j + 1] = y;\n        }\n      }\n      return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n      var d = [];\n      for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n        var p = [{\n          x: +crp[i - 2],\n          y: +crp[i - 1]\n        }, {\n          x: +crp[i],\n          y: +crp[i + 1]\n        }, {\n          x: +crp[i + 2],\n          y: +crp[i + 3]\n        }, {\n          x: +crp[i + 4],\n          y: +crp[i + 5]\n        }];\n        if (z) {\n          if (!i) {\n            p[0] = {\n              x: +crp[iLen - 2],\n              y: +crp[iLen - 1]\n            };\n          } else if (iLen - 4 == i) {\n            p[3] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n          } else if (iLen - 2 == i) {\n            p[2] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n            p[3] = {\n              x: +crp[2],\n              y: +crp[3]\n            };\n          }\n        } else {\n          if (iLen - 4 == i) {\n            p[3] = p[2];\n          } else if (!i) {\n            p[0] = {\n              x: +crp[i],\n              y: +crp[i + 1]\n            };\n          }\n        }\n        d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n      }\n      return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n      if (this.getTotalLength(path) - to < 1e-6) {\n        return getSubpathsAtLength(path, from).end;\n      }\n      var a = getSubpathsAtLength(path, to, 1);\n      return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n      if (this.node.getTotalLength) {\n        return this.node.getTotalLength();\n      }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n      return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n      return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n      var r = 100,\n        b = box(x - r / 2, y - r / 2, r, r),\n        inside = [],\n        getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n          return {\n            x: X[i].x,\n            y: X[i].y\n          };\n        } : function (i) {\n          return {\n            x: X[i],\n            y: Y[i]\n          };\n        },\n        found = 0;\n      while (r <= 1e6 && !found) {\n        for (var i = 0, ii = X.length; i < ii; i++) {\n          var xy = getter(i);\n          if (isPointInsideBBox(b, xy.x, xy.y)) {\n            found++;\n            inside.push(xy);\n            break;\n          }\n        }\n        if (!found) {\n          r *= 2;\n          b = box(x - r / 2, y - r / 2, r, r);\n        }\n      }\n      if (r == 1e6) {\n        return;\n      }\n      var len = Infinity,\n        res;\n      for (i = 0, ii = inside.length; i < ii; i++) {\n        var l = Snap.len(x, y, inside[i].x, inside[i].y);\n        if (len > l) {\n          len = l;\n          inside[i].len = l;\n          res = inside[i];\n        }\n      }\n      return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n      mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n        this.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n          for (var i = 0, ii = items.length; i < ii; i++) {\n            if (items[i]) {\n              this[this.items.length] = this.items[this.items.length] = items[i];\n              this.length++;\n            }\n          }\n        }\n      },\n      setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n      var item, len;\n      for (var i = 0, ii = arguments.length; i < ii; i++) {\n        item = arguments[i];\n        if (item) {\n          len = this.items.length;\n          this[len] = this.items[len] = item;\n          this.length++;\n        }\n      }\n      return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n      this.length && delete this[this.length--];\n      return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        if (callback.call(thisArg, this.items[i], i) === false) {\n          return this;\n        }\n      }\n      return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n      if (attrs instanceof Snap._.Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = easing.dur;\n        attrs = attrs.attr;\n      }\n      var args = arguments;\n      if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n        var each = true;\n      }\n      var begin,\n        handler = function () {\n          if (begin) {\n            this.b = begin;\n          } else {\n            begin = this.b;\n          }\n        },\n        cb = 0,\n        set = this,\n        callbacker = callback && function () {\n          if (++cb == set.length) {\n            callback.call(this);\n          }\n        };\n      return this.forEach(function (el, i) {\n        eve.once(\"snap.animcreated.\" + el.id, handler);\n        if (each) {\n          args[i] && el.animate.apply(el, args[i]);\n        } else {\n          el.animate(attrs, ms, easing, callbacker);\n        }\n      });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n      while (this.length) {\n        this.pop().remove();\n      }\n      return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n      var data = {};\n      if (typeof a == \"function\") {\n        this.bindings[attr] = a;\n      } else {\n        var aname = b || attr;\n        this.bindings[attr] = function (v) {\n          data[aname] = v;\n          a.attr(data);\n        };\n      }\n      return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n      var unbound = {};\n      for (var k in value) {\n        if (this.bindings[k]) {\n          this.bindings[k](value[k]);\n        } else {\n          unbound[k] = value[k];\n        }\n      }\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        this.items[i].attr(unbound);\n      }\n      return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n      while (this.length) {\n        this.pop();\n      }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n      index = index < 0 ? mmax(this.length + index, 0) : index;\n      count = mmax(0, mmin(this.length - index, count));\n      var tail = [],\n        todel = [],\n        args = [],\n        i;\n      for (i = 2; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      for (i = 0; i < count; i++) {\n        todel.push(this[index + i]);\n      }\n      for (; i < this.length - index; i++) {\n        tail.push(this[index + i]);\n      }\n      var arglen = args.length;\n      for (i = 0; i < arglen + tail.length; i++) {\n        this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n      }\n      i = this.items.length = this.length -= count - arglen;\n      while (this[i]) {\n        delete this[i++];\n      }\n      return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n      for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n      return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n      var i = this.items.length;\n      while (i--) {\n        this.items[i].insertAfter(el);\n      }\n      return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n      var x = [],\n        y = [],\n        x2 = [],\n        y2 = [];\n      for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n      x = mmin.apply(0, x);\n      y = mmin.apply(0, y);\n      x2 = mmax.apply(0, x2);\n      y2 = mmax.apply(0, y2);\n      return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y,\n        cx: x + (x2 - x) / 2,\n        cy: y + (y2 - y) / 2\n      };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n      s = new Set();\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        s.push(this.items[i].clone());\n      }\n      return s;\n    };\n    setproto.toString = function () {\n      return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n      var set = new Set();\n      if (arguments.length) {\n        set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n      }\n      return set;\n    };\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n      reUnit = /[%a-z]+$/i,\n      Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n      var l = item[0];\n      switch (l.toLowerCase()) {\n        case \"t\":\n          return [l, 0, 0];\n        case \"m\":\n          return [l, 1, 0, 0, 1, 0, 0];\n        case \"r\":\n          if (item.length == 4) {\n            return [l, 0, item[2], item[3]];\n          } else {\n            return [l, 0];\n          }\n        case \"s\":\n          if (item.length == 5) {\n            return [l, 1, 1, item[3], item[4]];\n          } else if (item.length == 3) {\n            return [l, 1, 1];\n          } else {\n            return [l, 1];\n          }\n      }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n      t1 = t1 || new Snap.Matrix();\n      t2 = t2 || new Snap.Matrix();\n      t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n      t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n      var maxlength = Math.max(t1.length, t2.length),\n        from = [],\n        to = [],\n        i = 0,\n        j,\n        jj,\n        tt1,\n        tt2;\n      for (; i < maxlength; i++) {\n        tt1 = t1[i] || getEmpty(t2[i]);\n        tt2 = t2[i] || getEmpty(tt1);\n        if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n          t1 = Snap._.transform2matrix(t1, getBBox());\n          t2 = Snap._.transform2matrix(t2, getBBox());\n          from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n          to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n          break;\n        }\n        from[i] = [];\n        to[i] = [];\n        for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n          j in tt1 && (from[i][j] = tt1[j]);\n          j in tt2 && (to[i][j] = tt2[j]);\n        }\n      }\n      return {\n        from: path2array(from),\n        to: path2array(to),\n        f: getPath(from)\n      };\n    }\n    function getNumber(val) {\n      return val;\n    }\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n    function getViewBox(val) {\n      return val.join(\" \");\n    }\n    function getColour(clr) {\n      return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n      var k = 0,\n        i,\n        ii,\n        j,\n        jj,\n        out,\n        a,\n        b = [];\n      for (i = 0, ii = path.length; i < ii; i++) {\n        out = \"[\";\n        a = ['\"' + path[i][0] + '\"'];\n        for (j = 1, jj = path[i].length; j < jj; j++) {\n          a[j] = \"val[\" + k++ + \"]\";\n        }\n        out += a + \"]\";\n        b[i] = out;\n      }\n      return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n      var out = [];\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        for (var j = 1, jj = path[i].length; j < jj; j++) {\n          out.push(path[i][j]);\n        }\n      }\n      return out;\n    }\n    function isNumeric(obj) {\n      return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n      if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n        return false;\n      }\n      return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n      return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this;\n      if (names[name] == \"colour\") {\n        A = Snap.color(a);\n        B = Snap.color(b);\n        return {\n          from: [A.r, A.g, A.b, A.opacity],\n          to: [B.r, B.g, B.b, B.opacity],\n          f: getColour\n        };\n      }\n      if (name == \"viewBox\") {\n        A = this.attr(name).vb.split(\" \").map(Number);\n        B = b.split(\" \").map(Number);\n        return {\n          from: A,\n          to: B,\n          f: getViewBox\n        };\n      }\n      if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n        if (typeof b == \"string\") {\n          b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n        }\n        a = this.matrix;\n        if (!Snap._.rgTransform.test(b)) {\n          b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n        } else {\n          b = Snap._.transform2matrix(b, this.getBBox());\n        }\n        return equaliseTransform(a, b, function () {\n          return el.getBBox(1);\n        });\n      }\n      if (name == \"d\" || name == \"path\") {\n        A = Snap.path.toCubic(a, b);\n        return {\n          from: path2array(A[0]),\n          to: path2array(A[1]),\n          f: getPath(A[0])\n        };\n      }\n      if (name == \"points\") {\n        A = Str(a).split(Snap._.separator);\n        B = Str(b).split(Snap._.separator);\n        return {\n          from: A,\n          to: B,\n          f: function (val) {\n            return val;\n          }\n        };\n      }\n      if (isNumeric(a) && isNumeric(b)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getNumber\n        };\n      }\n      var aUnit = a.match(reUnit),\n        bUnit = Str(b).match(reUnit);\n      if (aUnit && arrayEqual(aUnit, bUnit)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getUnit(aUnit)\n        };\n      } else {\n        return {\n          from: this.asPX(name),\n          to: this.asPX(name, b),\n          f: getNumber\n        };\n      }\n    });\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n      has = \"hasOwnProperty\",\n      supportsTouch = (\"createTouch\" in glob.doc),\n      events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n      touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n      },\n      getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n          doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n      },\n      preventDefault = function () {\n        this.returnValue = false;\n      },\n      preventTouch = function () {\n        return this.originalEvent.preventDefault();\n      },\n      stopPropagation = function () {\n        this.cancelBubble = true;\n      },\n      stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n      },\n      addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n          f = function (e) {\n            var scrollY = getScroll(\"y\", element),\n              scrollX = getScroll(\"x\", element);\n            if (supportsTouch && touchMap[has](type)) {\n              for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                  var olde = e;\n                  e = e.targetTouches[i];\n                  e.originalEvent = olde;\n                  e.preventDefault = preventTouch;\n                  e.stopPropagation = stopTouch;\n                  break;\n                }\n              }\n            }\n            var x = e.clientX + scrollX,\n              y = e.clientY + scrollY;\n            return fn.call(element, e, x, y);\n          };\n        if (type !== realName) {\n          obj.addEventListener(type, f, false);\n        }\n        obj.addEventListener(realName, f, false);\n        return function () {\n          if (type !== realName) {\n            obj.removeEventListener(type, f, false);\n          }\n          obj.removeEventListener(realName, f, false);\n          return true;\n        };\n      },\n      drag = [],\n      dragMove = function (e) {\n        var x = e.clientX,\n          y = e.clientY,\n          scrollY = getScroll(\"y\"),\n          scrollX = getScroll(\"x\"),\n          dragi,\n          j = drag.length;\n        while (j--) {\n          dragi = drag[j];\n          if (supportsTouch) {\n            var i = e.touches && e.touches.length,\n              touch;\n            while (i--) {\n              touch = e.touches[i];\n              if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                x = touch.clientX;\n                y = touch.clientY;\n                (e.originalEvent ? e.originalEvent : e).preventDefault();\n                break;\n              }\n            }\n          } else {\n            e.preventDefault();\n          }\n          var node = dragi.el.node,\n            o,\n            next = node.nextSibling,\n            parent = node.parentNode,\n            display = node.style.display;\n          // glob.win.opera && parent.removeChild(node);\n          // node.style.display = \"none\";\n          // o = dragi.el.paper.getElementByPoint(x, y);\n          // node.style.display = display;\n          // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n          // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n          x += scrollX;\n          y += scrollY;\n          eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n      },\n      dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n          dragi;\n        while (i--) {\n          dragi = drag[i];\n          dragi.el._drag = {};\n          eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n          eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n      };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n      (function (eventName) {\n        Snap[eventName] = elproto[eventName] = function (fn, scope) {\n          if (Snap.is(fn, \"function\")) {\n            this.events = this.events || [];\n            this.events.push({\n              name: eventName,\n              f: fn,\n              unbind: addEvent(this.node || document, eventName, fn, scope || this)\n            });\n          } else {\n            for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n          return this;\n        };\n        Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n          var events = this.events || [],\n            l = events.length;\n          while (l--) if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n          return this;\n        };\n      })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n      return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n      return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n      var el = this;\n      if (!arguments.length) {\n        var origTransform;\n        return el.drag(function (dx, dy) {\n          this.attr({\n            transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n          });\n        }, function () {\n          origTransform = this.transform().local;\n        });\n      }\n      function start(e, x, y) {\n        (e.originalEvent || e).preventDefault();\n        el._drag.x = x;\n        el._drag.y = y;\n        el._drag.id = e.identifier;\n        !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n        drag.push({\n          el: el,\n          move_scope: move_scope,\n          start_scope: start_scope,\n          end_scope: end_scope\n        });\n        onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n        onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n        onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n        eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n      }\n      function init(e, x, y) {\n        eve(\"snap.draginit.\" + el.id, el, e, x, y);\n      }\n      eve.on(\"snap.draginit.\" + el.id, start);\n      el._drag = {};\n      draggable.push({\n        el: el,\n        start: start,\n        init: init\n      });\n      el.mousedown(init);\n      return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n      var i = draggable.length;\n      while (i--) if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n      !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n      return this;\n    };\n  });\n\n  // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n      pproto = Paper.prototype,\n      rgurl = /^\\s*url\\((.+)\\)/,\n      Str = String,\n      $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n      var paper = this;\n      if (paper.type != \"svg\") {\n        paper = paper.paper;\n      }\n      var f = Snap.parse(Str(filstr)),\n        id = Snap._.id(),\n        width = paper.node.offsetWidth,\n        height = paper.node.offsetHeight,\n        filter = $(\"filter\");\n      $(filter, {\n        id: id,\n        filterUnits: \"userSpaceOnUse\"\n      });\n      filter.appendChild(f.node);\n      paper.defs.appendChild(filter);\n      return new Element(filter);\n    };\n    eve.on(\"snap.util.getattr.filter\", function () {\n      eve.stop();\n      var p = $(this.node, \"filter\");\n      if (p) {\n        var match = Str(p).match(rgurl);\n        return match && Snap.select(match[1]);\n      }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n      if (value instanceof Element && value.type == \"filter\") {\n        eve.stop();\n        var id = value.node.id;\n        if (!id) {\n          $(value.node, {\n            id: value.id\n          });\n          id = value.id;\n        }\n        $(this.node, {\n          filter: Snap.url(id)\n        });\n      }\n      if (!value || value == \"none\") {\n        eve.stop();\n        this.node.removeAttribute(\"filter\");\n      }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n      if (x == null) {\n        x = 2;\n      }\n      var def = y == null ? x : [x, y];\n      return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n        def: def\n      });\n    };\n    Snap.filter.blur.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n      if (opacity == null) {\n        if (color == null) {\n          opacity = blur;\n          blur = 4;\n          color = \"#000\";\n        } else {\n          opacity = color;\n          color = blur;\n          blur = 4;\n        }\n      }\n      if (blur == null) {\n        blur = 4;\n      }\n      if (opacity == null) {\n        opacity = 1;\n      }\n      if (dx == null) {\n        dx = 0;\n        dy = 2;\n      }\n      if (dy == null) {\n        dy = dx;\n      }\n      color = Snap.color(color);\n      return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n        color: color,\n        dx: dx,\n        dy: dy,\n        blur: blur,\n        opacity: opacity\n      });\n    };\n    Snap.filter.shadow.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n        a: 0.2126 + 0.7874 * (1 - amount),\n        b: 0.7152 - 0.7152 * (1 - amount),\n        c: 0.0722 - 0.0722 * (1 - amount),\n        d: 0.2126 - 0.2126 * (1 - amount),\n        e: 0.7152 + 0.2848 * (1 - amount),\n        f: 0.0722 - 0.0722 * (1 - amount),\n        g: 0.2126 - 0.2126 * (1 - amount),\n        h: 0.0722 + 0.9278 * (1 - amount)\n      });\n    };\n    Snap.filter.grayscale.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n        a: 0.393 + 0.607 * (1 - amount),\n        b: 0.769 - 0.769 * (1 - amount),\n        c: 0.189 - 0.189 * (1 - amount),\n        d: 0.349 - 0.349 * (1 - amount),\n        e: 0.686 + 0.314 * (1 - amount),\n        f: 0.168 - 0.168 * (1 - amount),\n        g: 0.272 - 0.272 * (1 - amount),\n        h: 0.534 - 0.534 * (1 - amount),\n        i: 0.131 + 0.869 * (1 - amount)\n      });\n    };\n    Snap.filter.sepia.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n        amount: 1 - amount\n      });\n    };\n    Snap.filter.saturate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n      angle = angle || 0;\n      return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n        angle: angle\n      });\n    };\n    Snap.filter.hueRotate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n      return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: 1 - amount\n      });\n    };\n    Snap.filter.invert.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n        amount: amount\n      });\n    };\n    Snap.filter.brightness.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: .5 - amount / 2\n      });\n    };\n    Snap.filter.contrast.toString = function () {\n      return this();\n    };\n  });\n\n  // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n      is = Snap.is,\n      firstLetter = /^[^a-z]*([tbmlrc])/i,\n      toString = function () {\n        return \"T\" + this.dx + \",\" + this.dy;\n      };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n      if (way == null && is(el, \"string\")) {\n        way = el;\n        el = null;\n      }\n      el = el || this.paper;\n      var bx = el.getBBox ? el.getBBox() : box(el),\n        bb = this.getBBox(),\n        out = {};\n      way = way && way.match(firstLetter);\n      way = way ? way[1].toLowerCase() : \"c\";\n      switch (way) {\n        case \"t\":\n          out.dx = 0;\n          out.dy = bx.y - bb.y;\n          break;\n        case \"b\":\n          out.dx = 0;\n          out.dy = bx.y2 - bb.y2;\n          break;\n        case \"m\":\n          out.dx = 0;\n          out.dy = bx.cy - bb.cy;\n          break;\n        case \"l\":\n          out.dx = bx.x - bb.x;\n          out.dy = 0;\n          break;\n        case \"r\":\n          out.dx = bx.x2 - bb.x2;\n          out.dy = 0;\n          break;\n        default:\n          out.dx = bx.cx - bb.cx;\n          out.dy = 0;\n          break;\n      }\n      out.toString = toString;\n      return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n      return this.transform(\"...\" + this.getAlign(el, way));\n    };\n  });\n\n  // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n      pink = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n      purple = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n      deeppurple = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n      indigo = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n      blue = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n      lightblue = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n      cyan = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n      teal = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n      green = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n      lightgreen = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n      lime = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n      yellow = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n      amber = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n      orange = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n      deeporange = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n      brown = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n      grey = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n      bluegrey = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n      colors = colors.split(/(?=#)/);\n      var color = new String(colors[5]);\n      color[50] = colors[0];\n      color[100] = colors[1];\n      color[200] = colors[2];\n      color[300] = colors[3];\n      color[400] = colors[4];\n      color[500] = colors[5];\n      color[600] = colors[6];\n      color[700] = colors[7];\n      color[800] = colors[8];\n      color[900] = colors[9];\n      if (colors[10]) {\n        color.A100 = colors[10];\n        color.A200 = colors[11];\n        color.A400 = colors[12];\n        color.A700 = colors[13];\n      }\n      return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n      for (var color in Snap.mui) {\n        if (Snap.mui.hasOwnProperty(color)) {\n          window[color] = Snap.mui[color];\n        }\n      }\n    };\n  });\n  return Snap;\n});","map":{"version":3,"names":["glob","version","has","separator","comaseparator","wildcard","fun","numsort","a","b","current_event","stop","events","n","firstDefined","i","ii","length","lastDefined","objtos","Object","prototype","toString","Str","String","isArray","Array","ar","call","eve","name","scope","e","oldstop","args","slice","arguments","listeners","z","f","l","indexed","queue","out","ce","errors","push","zIndex","sort","apply","_events","names","split","item","items","k","j","jj","nes","es","concat","sep","replace","RegExp","on","exist","hasOwnProperty","event","attrs","nt","subname","cur","join","test","nts","off","unbind","key","splice","inodes","unshift","funcs","prune","once","f2","module","exports","define","amd","factory","require","window","mina","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Date","getTime","requestID","idgen","idprefix","ID","diff","A","B","res","dif","bb","timer","now","sta","val","s","ds","dur","speed","spd","duration","stopit","id","update","pause","pdif","get","resume","frame","start","end","easing","set","timeStamp","len","anim","linear","status","time","getById","easeout","Math","pow","easein","easeinout","q","Q","sqrt","x","X","abs","y","Y","t","backin","backout","elastic","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","is","Element","doc","querySelector","Paper","_","win","document","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","round","E","S","objectToString","ISURL","colourRegExp","bezierrg","whitespace","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","el","type","xlink","xmlns","hub","URL","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","getAttrs","attributes","namespaceURI","textContent","o","toLowerCase","isFinite","format","tokenRegex","objNotationRegex","replacer","all","obj","quote","quotedName","isFunc","str","clone","constructor","repush","array","cacher","postprocessor","newf","arg","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","x_y","x_y_w_h","width","height","tan","cos","asin","num","acos","atan","len2","closestPoint","path","distance2","dx","dy","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","best","bestLength","bestDistance","Infinity","scan","scanLength","scanDistance","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","g","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","style","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","unit2px","contains","compareDocumentPosition","adown","documentElement","bup","parentNode","getSomeDefs","ownerSVGElement","select","pdefs","defs","make","getSomeSVG","svg","mgr","fill","appendChild","getW","getBBox","getH","nam","removeChild","query","selectAll","nodelist","querySelectorAll","add2group","list","forEach","children","childNodes","setInterval","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","method","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","Fragment","frag","fragment","parent","desc","proto","ownerDocument","body","dom","contentDocument","ch","jsonFiller","toJSON","lastIndexOf","css","letter","cssAttr","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementByPoint","canvas","target","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","map","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","fixids","els","ids","uses","urltest","linktest","oldid","old","fs","cloneNode","toDefs","toPattern","patternUnits","viewBox","marker","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","removeData","outerSVG","innerSVG","chld","toDataURL","btoa","contents","unescape","from","to","Animation","animation","inAnim","_attrs","_callback","curStatus","animate","setter","fkeys","tkeys","keys","eq","equal","d","matrixproto","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","norm","normalize","mag","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","reURLValue","deurl","clipIt","clip","undefined","fillStroke","grad","gradient","gradrg","parseGrad","tokens","stops","seed","step","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setFontSize","fontSize","getter","textExtract","chi","internal","getFontSize","rgNotSpace","rgBadSpace","rgTrim","addClass","classes","curClasses","pos","clazz","finalValue","removeClass","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","stopOffset","GgetBBox","GsetStops","addStop","gradientLinear","gradientRadial","gradientUnits","setStops","fx","fy","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","sp","subpaths","point","getSubpathsAtLength","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","inter","bez1","bez2","interHelper","interCount","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","getPath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rx2","ry2","f1","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","x0","y0","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","each","begin","handler","cb","callbacker","bind","aname","unbound","index","insertion","tail","todel","arglen","exclude","stroke","getEmpty","equaliseTransform","maxlength","tt1","tt2","path2array","getViewBox","getColour","Function","isNumeric","arrayEqual","arr1","arr2","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touches","touch","identifier","_drag","display","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filter","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","mui","flat","saveColor","colors","A100","A200","A400","A700","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors"],"sources":["D:/LearnVueJS/Vue3/Projects/fa-sop-online/node_modules/snapsvg/dist/snap.svg.js"],"sourcesContent":["// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != \"undefined\") {\n        // Next for Node.js or CommonJS\n        var eve = require(\"eve\");\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            // try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            // } catch (e) {\n                // return null;\n            // }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nreturn Snap;\n}));"],"mappings":"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,CAACsvB,KAAK,GAAG,CAAC,CAAC;UACnBn6B,GAAG,CAAC,gBAAgB,GAAG+5B,KAAK,CAAClvB,EAAE,CAAC7E,EAAE,EAAE+zB,KAAK,CAACU,SAAS,IAAIV,KAAK,CAACW,WAAW,IAAIX,KAAK,CAACM,UAAU,IAAIN,KAAK,CAAClvB,EAAE,EAAE1K,CAAC,CAAC;UAC5GH,GAAG,CAAC8C,GAAG,CAAC,cAAc,GAAGi3B,KAAK,CAAClvB,EAAE,CAAC7E,EAAE,CAAC;QACzC;QACA6zB,IAAI,GAAG,EAAE;MACb,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI;AACJ;AACA;AACA;AACA;AACA;AA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}