{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport GetOption from \"./Datas/gauge\";\nexport default {\n  data() {\n    return {\n      option: GetOption(),\n      myChart: undefined\n    };\n  },\n  methods: {\n    DataUpdate() {\n      this.axios.post(\"api/FATPKanban/GetWoTarget\", {\n        PDLINE_ID: \"10002\",\n        DB: \"BU20\"\n      }).then(res => {\n        var gaugeDT = [];\n        res.data.data.forEach(el => {\n          console.log(el);\n          gaugeDT.push({\n            value: el.PERCENT,\n            name: el.WORK_ORDER,\n            title: {\n              //  offsetCenter: [\"0%\", \"-5%\"],\n              color: \"#fff\"\n            },\n            detail: {\n              valueAnimation: true\n              //  offsetCenter: [\"0%\", \"0%\"],\n            }\n          });\n        });\n\n        this.option.series[0].data = gaugeDT;\n        this.myChart.setOption(this.option);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  mounted() {\n    var dom = document.getElementById(\"gause-chart\");\n    this.myChart = this.$Echart.init(dom, null, {\n      renderer: \"canvas\",\n      useDirtyRect: false\n    });\n    // setInterval(function () {\n    //   gaugeData[0].value = +(Math.random() * 100).toFixed(2);\n    //   gaugeData[1].value = +(Math.random() * 100).toFixed(2);\n    //   gaugeData[2].value = +(Math.random() * 100).toFixed(2);\n    //   myChart.setOption({\n    //     series: [\n    //       {\n    //         data: gaugeData,\n    //         pointer: {\n    //           show: false\n    //         }\n    //       }\n    //     ]\n    //   });\n    // }, 5000);\n\n    if (this.option && typeof this.option === \"object\") {\n      this.myChart.setOption(this.option);\n    }\n    window.addEventListener(\"resize\", this.myChart.resize);\n  }\n};","map":{"version":3,"names":["GetOption","data","option","myChart","undefined","methods","DataUpdate","axios","post","PDLINE_ID","DB","then","res","gaugeDT","forEach","el","console","log","push","value","PERCENT","name","WORK_ORDER","title","color","detail","valueAnimation","series","setOption","catch","err","mounted","dom","document","getElementById","$Echart","init","renderer","useDirtyRect","window","addEventListener","resize"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\FATPkanban\\WoTarget.vue"],"sourcesContent":["<template>\r\n  <div id=\"gause-chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport GetOption from \"./Datas/gauge\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      option: GetOption(),\r\n      myChart: undefined,\r\n    };\r\n  },\r\n  methods: {\r\n    DataUpdate() {\r\n      this.axios\r\n        .post(\"api/FATPKanban/GetWoTarget\", { PDLINE_ID: \"10002\", DB: \"BU20\" })\r\n        .then((res) => {\r\n          var gaugeDT = [];\r\n          res.data.data.forEach((el) => {\r\n            console.log(el);\r\n            gaugeDT.push({\r\n              value: el.PERCENT,\r\n              name: el.WORK_ORDER,\r\n              title: {\r\n              //  offsetCenter: [\"0%\", \"-5%\"],\r\n                color: \"#fff\",\r\n              },\r\n              detail: {\r\n                valueAnimation: true,\r\n              //  offsetCenter: [\"0%\", \"0%\"],\r\n              },\r\n            });\r\n          });\r\n          this.option.series[0].data = gaugeDT;\r\n          this.myChart.setOption(this.option);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    var dom = document.getElementById(\"gause-chart\");\r\n    this.myChart = this.$Echart.init(dom, null, {\r\n      renderer: \"canvas\",\r\n      useDirtyRect: false,\r\n    });\r\n    // setInterval(function () {\r\n    //   gaugeData[0].value = +(Math.random() * 100).toFixed(2);\r\n    //   gaugeData[1].value = +(Math.random() * 100).toFixed(2);\r\n    //   gaugeData[2].value = +(Math.random() * 100).toFixed(2);\r\n    //   myChart.setOption({\r\n    //     series: [\r\n    //       {\r\n    //         data: gaugeData,\r\n    //         pointer: {\r\n    //           show: false\r\n    //         }\r\n    //       }\r\n    //     ]\r\n    //   });\r\n    // }, 5000);\r\n\r\n    if (this.option && typeof this.option === \"object\") {\r\n      this.myChart.setOption(this.option);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", this.myChart.resize);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#gause-chart {\r\n  position: relative;\r\n  height: 50vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":";AAKA,OAAOA,SAAQ,MAAO,eAAe;AAErC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAEF,SAAS,EAAE;MACnBG,OAAO,EAAEC;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAI,CACNC,IAAI,CAAC,4BAA4B,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAO,CAAC,EACrEC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIC,OAAM,GAAI,EAAE;QAChBD,GAAG,CAACX,IAAI,CAACA,IAAI,CAACa,OAAO,CAAEC,EAAE,IAAK;UAC5BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;UACfF,OAAO,CAACK,IAAI,CAAC;YACXC,KAAK,EAAEJ,EAAE,CAACK,OAAO;YACjBC,IAAI,EAAEN,EAAE,CAACO,UAAU;YACnBC,KAAK,EAAE;cACP;cACEC,KAAK,EAAE;YACT,CAAC;YACDC,MAAM,EAAE;cACNC,cAAc,EAAE;cAClB;YACA;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;;QACF,IAAI,CAACxB,MAAM,CAACyB,MAAM,CAAC,CAAC,CAAC,CAAC1B,IAAG,GAAIY,OAAO;QACpC,IAAI,CAACV,OAAO,CAACyB,SAAS,CAAC,IAAI,CAAC1B,MAAM,CAAC;MACrC,CAAC,EACA2B,KAAK,CAAEC,GAAG,IAAK;QACdd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAChD,IAAI,CAAC/B,OAAM,GAAI,IAAI,CAACgC,OAAO,CAACC,IAAI,CAACJ,GAAG,EAAE,IAAI,EAAE;MAC1CK,QAAQ,EAAE,QAAQ;MAClBC,YAAY,EAAE;IAChB,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAI,IAAI,CAACpC,MAAK,IAAK,OAAO,IAAI,CAACA,MAAK,KAAM,QAAQ,EAAE;MAClD,IAAI,CAACC,OAAO,CAACyB,SAAS,CAAC,IAAI,CAAC1B,MAAM,CAAC;IACrC;IAEAqC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACrC,OAAO,CAACsC,MAAM,CAAC;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}