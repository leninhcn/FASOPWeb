{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5cca9b29\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"myTextBox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_scroll_area = _resolveComponent(\"q-scroll-area\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_q_scroll_area, {\n    \"thumb-style\": $data.thumbStyle,\n    \"content-style\": $data.contentStyle,\n    \"content-active-style\": $data.contentActiveStyle,\n    style: {\n      \"height\": \"100px\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n      ref: \"myMSG\",\n      onPaste: _cache[0] || (_cache[0] = (...args) => $options.handlePaste && $options.handlePaste(...args)),\n      class: \"apChild\",\n      contenteditable: \"\"\n    }, _toDisplayString($data.msg), 545 /* TEXT, HYDRATE_EVENTS, NEED_PATCH */)])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"thumb-style\", \"content-style\", \"content-active-style\"]), _createVNode(_component_q_btn, {\n    onClick: $options.ShowTest\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Chan\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_q_scroll_area","$data","thumbStyle","contentStyle","contentActiveStyle","style","_createElementVNode","_hoisted_1","ref","onPaste","_cache","args","$options","handlePaste","contenteditable","msg","_component_q_btn","onClick","ShowTest"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\MyTextBox.vue"],"sourcesContent":["<template>\r\n  <q-scroll-area\r\n    :thumb-style=\"thumbStyle\"\r\n    :content-style=\"contentStyle\"\r\n    :content-active-style=\"contentActiveStyle\"\r\n    style=\"height: 100px\"\r\n  >\r\n    <div class=\"myTextBox\">\r\n      <p ref=\"myMSG\" @paste=\"handlePaste\" class=\"apChild\" contenteditable>{{ msg }}</p>\r\n    </div>\r\n  </q-scroll-area>\r\n  <q-btn @click=\"ShowTest\">Chan</q-btn>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      msg: \"\",\r\n      contentStyle: {\r\n        backgroundColor: \"rgba(0,0,0,0.02)\",\r\n        color: \"#555\",\r\n      },\r\n      contentActiveStyle: {\r\n        //  backgroundColor: '#eee',\r\n        color: \"black\",\r\n      },\r\n      thumbStyle: {\r\n        right: \"2px\",\r\n        borderRadius: \"2px\",\r\n        backgroundColor: \"#027be3\",\r\n        width: \"5px\",\r\n        opacity: \"0.75\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handlePaste(event) {\r\n   //   event.preventDefault(); // Ngăn chặn việc dán (paste) tự động\r\n\r\n      const clipboardData = event.clipboardData || window.clipboardData;\r\n      const pastedText = clipboardData.getData('text/plain');\r\n\r\n      // Kiểm tra nội dung của clipboard trước khi dán vào\r\n      if (pastedText.includes('abc')) {\r\n        // Thực hiện xử lý tùy ý\r\n        console.log(pastedText);\r\n        console.log('Nội dung clipboard chứa chuỗi \"abc\"');\r\n      } else {\r\n        // Không thực hiện dán\r\n        console.log(pastedText);\r\n        console.log('Nội dung clipboard không chứa chuỗi \"abc\"');\r\n      }\r\n    },\r\n    ShowTest() {\r\n      console.log(this.$refs.myMSG.innerText);\r\n      console.log(this.$refs.myMSG.children.length);\r\n      const childs = this.$refs.myMSG.children;\r\n      let temp = \"\";\r\n      for (let id = 0; id < childs.length; id++) {\r\n        const element = childs[id];\r\n        if (element.tagName !== \"IMG\") {\r\n          temp += element.innerText;\r\n        }\r\n      }\r\n      console.log(temp);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.myTextBox {\r\n  border: 1px solid red;\r\n  text-align: left;\r\n  .apChild {\r\n    height: 100%;\r\n    color: yellow;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";;;EAOSA,KAAK,EAAC;AAAW;;;;6DANxBC,YAAA,CASgBC,wBAAA;IARb,aAAW,EAAEC,KAAA,CAAAC,UAAU;IACvB,eAAa,EAAED,KAAA,CAAAE,YAAY;IAC3B,sBAAoB,EAAEF,KAAA,CAAAG,kBAAkB;IACzCC,KAAqB,EAArB;MAAA;IAAA;;sBAEA,MAEM,CAFNC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAiF;MAA9EE,GAAG,EAAC,OAAO;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAAEb,KAAK,EAAC,SAAS;MAACgB,eAAe,EAAf;wBAAmBb,KAAA,CAAAc,GAAG,+C;;;+EAG9EhB,YAAA,CAAqCiB,gBAAA;IAA7BC,OAAK,EAAEL,QAAA,CAAAM;EAAQ;sBAAE,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}