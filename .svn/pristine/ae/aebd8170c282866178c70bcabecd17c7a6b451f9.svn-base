{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6205aa2d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"el-upload__tip\"\n}, \"audio files with a size less than 100Mb\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  return _openBlock(), _createBlock(_component_el_upload, {\n    ref: \"uploadRef\",\n    class: \"upload-demo\",\n    action: $data.upload_link,\n    \"auto-upload\": false,\n    accept: \"audio/*\",\n    \"file-list\": $data.UploadList,\n    \"onUpdate:fileList\": _cache[0] || (_cache[0] = $event => $data.UploadList = $event),\n    limit: \"50\",\n    multiple: \"\",\n    \"on-success\": $options.UploadSuccess,\n    \"on-error\": $options.UploadError\n  }, {\n    trigger: _withCtx(() => [_createVNode(_component_el_button, {\n      class: \"btnSelect\",\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"select file\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    tip: _withCtx(() => [_hoisted_1]),\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      class: \"ml-3\",\n      type: \"success\",\n      onClick: $options.UploadByEL\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" upload to server \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      class: \"ml-3\",\n      type: \"success\",\n      onClick: $options.ClearUploadList\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Clear List \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"action\", \"file-list\", \"on-success\", \"on-error\"]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createBlock","_component_el_upload","ref","action","$data","upload_link","accept","UploadList","$event","limit","multiple","$options","UploadSuccess","UploadError","trigger","_withCtx","_createVNode","_component_el_button","type","tip","_hoisted_1","onClick","UploadByEL","ClearUploadList"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\MediaArea\\ContentsManage.vue"],"sourcesContent":["<template>\r\n  <el-upload\r\n    ref=\"uploadRef\"\r\n    class=\"upload-demo\"\r\n    :action=\"upload_link\"\r\n    :auto-upload=\"false\"\r\n    accept=\"audio/*\"\r\n    v-model:file-list=\"UploadList\"\r\n    limit=\"50\"\r\n    multiple\r\n    :on-success=\"UploadSuccess\"\r\n    :on-error=\"UploadError\"\r\n  >\r\n    <template #trigger>\r\n      <el-button class=\"btnSelect\" type=\"primary\">select file</el-button>\r\n    </template>\r\n\r\n    <el-button class=\"ml-3\" type=\"success\" @click=\"UploadByEL\">\r\n      upload to server\r\n    </el-button>\r\n\r\n    <el-button class=\"ml-3\" type=\"success\" @click=\"ClearUploadList\">\r\n      Clear List\r\n    </el-button>\r\n\r\n    <template #tip>\r\n      <div class=\"el-upload__tip\">audio files with a size less than 100Mb</div>\r\n    </template>\r\n  </el-upload>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    this.upload_link = `${this.axios.defaults.baseURL}api/Funapp/MediaUpload`;\r\n  },\r\n  data() {\r\n    return {\r\n      UploadList: [],\r\n      upload_link: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    submitUpload() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      const formData = new FormData();\r\n      this.UploadList.forEach((file) => {\r\n        formData.append(\"file\", file.raw);\r\n      });\r\n      this.axios\r\n        .post(\"api/Funapp/MediaUpload\", formData)\r\n        .then((res) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"success\",\r\n            message: `${res.data} + Upload success!`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.$message({\r\n            showClose: true,\r\n            type: \"error\",\r\n            message: err.response.data,\r\n          });\r\n        });\r\n    },\r\n    ClearUploadList() {\r\n      this.$refs.uploadRef.clearFiles();\r\n    },\r\n    UploadByEL() {\r\n      if (this.UploadList.length < 1) {\r\n        this.$message({\r\n          showClose: true,\r\n          type: \"error\",\r\n          message: \"No file selected\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(this.$refs.uploadRef);\r\n      this.$refs.uploadRef.submit();\r\n    },\r\n    UploadSuccess(response, file) {\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"success\",\r\n        message: `Upload success: ${file.name}`,\r\n      });\r\n    },\r\n    UploadError(err) {\r\n      const er_msg = JSON.parse(err.message);\r\n      this.$message({\r\n        showClose: true,\r\n        type: \"error\",\r\n        message: er_msg.Message,\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.upload-demo > .btnSelect {\r\n  margin: {\r\n    right: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":";;gEA0BMA,mBAAA,CAAyE;EAApEC,KAAK,EAAC;AAAgB,GAAC,yCAAuC;;;;;uBAzBvEC,YAAA,CA2BYC,oBAAA;IA1BVC,GAAG,EAAC,WAAW;IACfH,KAAK,EAAC,aAAa;IAClBI,MAAM,EAAEC,KAAA,CAAAC,WAAW;IACnB,aAAW,EAAE,KAAK;IACnBC,MAAM,EAAC,SAAS;IACR,WAAS,EAAEF,KAAA,CAAAG,UAAU;6DAAVH,KAAA,CAAAG,UAAU,GAAAC,MAAA;IAC7BC,KAAK,EAAC,IAAI;IACVC,QAAQ,EAAR,EAAQ;IACP,YAAU,EAAEC,QAAA,CAAAC,aAAa;IACzB,UAAQ,EAAED,QAAA,CAAAE;;IAEAC,OAAO,EAAAC,QAAA,CAChB,MAAmE,CAAnEC,YAAA,CAAmEC,oBAAA;MAAxDlB,KAAK,EAAC,WAAW;MAACmB,IAAI,EAAC;;wBAAU,MAAW,C,iBAAX,aAAW,E;;;;IAW9CC,GAAG,EAAAJ,QAAA,CACZ,MAAyE,CAAzEK,UAAyE,C;sBAT3E,MAEY,CAFZJ,YAAA,CAEYC,oBAAA;MAFDlB,KAAK,EAAC,MAAM;MAACmB,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAEV,QAAA,CAAAW;;wBAAY,MAE3D,C,iBAF2D,oBAE3D,E;;oCAEAN,YAAA,CAEYC,oBAAA;MAFDlB,KAAK,EAAC,MAAM;MAACmB,IAAI,EAAC,SAAS;MAAEG,OAAK,EAAEV,QAAA,CAAAY;;wBAAiB,MAEhE,C,iBAFgE,cAEhE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}