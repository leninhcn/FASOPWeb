{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"template\", null, [_createVNode(_component_el_tree, {\n    \"allow-drop\": _ctx.allowDrop,\n    \"allow-drag\": _ctx.allowDrag,\n    data: _ctx.data,\n    draggable: \"\",\n    \"default-expand-all\": \"\",\n    \"node-key\": \"id\",\n    onNodeDragStart: _ctx.handleDragStart,\n    onNodeDragEnter: _ctx.handleDragEnter,\n    onNodeDragLeave: _ctx.handleDragLeave,\n    onNodeDragOver: _ctx.handleDragOver,\n    onNodeDragEnd: _ctx.handleDragEnd,\n    onNodeDrop: _ctx.handleDrop\n  }, null, 8 /* PROPS */, [\"allow-drop\", \"allow-drag\", \"data\", \"onNodeDragStart\", \"onNodeDragEnter\", \"onNodeDragLeave\", \"onNodeDragOver\", \"onNodeDragEnd\", \"onNodeDrop\"])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_tree","_ctx","allowDrop","allowDrag","data","draggable","onNodeDragStart","handleDragStart","onNodeDragEnter","handleDragEnter","onNodeDragLeave","handleDragLeave","onNodeDragOver","handleDragOver","onNodeDragEnd","handleDragEnd","onNodeDrop","handleDrop"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\AdminArea\\MenuManage.vue"],"sourcesContent":["<template>\r\n    <div><template>\r\n            <el-tree :allow-drop=\"allowDrop\" :allow-drag=\"allowDrag\" :data=\"data\" draggable default-expand-all node-key=\"id\"\r\n                @node-drag-start=\"handleDragStart\" @node-drag-enter=\"handleDragEnter\" @node-drag-leave=\"handleDragLeave\"\r\n                @node-drag-over=\"handleDragOver\" @node-drag-end=\"handleDragEnd\" @node-drop=\"handleDrop\" />\r\n        </template></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    methods:{\r\n        handleDragStart(node, ev){\r\n            console.log('drag start', node)\r\n        },\r\n        handleDragEnter(draggingNode,dropNode,ev){\r\n            console.log('tree drag enter:', dropNode.label)\r\n        },\r\n\r\n    }\r\n\r\nconst handleDragEnter = (\r\n  draggingNode: Node,\r\n  dropNode: Node,\r\n  ev: DragEvents\r\n) => {\r\n  console.log('tree drag enter:', dropNode.label)\r\n}\r\nconst handleDragLeave = (\r\n  draggingNode: Node,\r\n  dropNode: Node,\r\n  ev: DragEvents\r\n) => {\r\n  console.log('tree drag leave:', dropNode.label)\r\n}\r\nconst handleDragOver = (draggingNode: Node, dropNode: Node, ev: DragEvents) => {\r\n  console.log('tree drag over:', dropNode.label)\r\n}\r\nconst handleDragEnd = (\r\n  draggingNode: Node,\r\n  dropNode: Node,\r\n  dropType: NodeDropType,\r\n  ev: DragEvents\r\n) => {\r\n  console.log('tree drag end:', dropNode && dropNode.label, dropType)\r\n}\r\nconst handleDrop = (\r\n  draggingNode: Node,\r\n  dropNode: Node,\r\n  dropType: NodeDropType,\r\n  ev: DragEvents\r\n) => {\r\n  console.log('tree drop:', dropNode.label, dropType)\r\n}\r\nconst allowDrop = (draggingNode: Node, dropNode: Node, type: AllowDropType) => {\r\n  if (dropNode.data.label === 'Level two 3-1') {\r\n    return type !== 'inner'\r\n  } else {\r\n    return true\r\n  }\r\n}\r\nconst allowDrag = (draggingNode: Node) => {\r\n  return !draggingNode.data.label.includes('Level three 3-1-1')\r\n}\r\n\r\nconst data = [\r\n  {\r\n    label: 'Level one 1',\r\n    children: [\r\n      {\r\n        label: 'Level two 1-1',\r\n        children: [\r\n          {\r\n            label: 'Level three 1-1-1',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Level one 2',\r\n    children: [\r\n      {\r\n        label: 'Level two 2-1',\r\n        children: [\r\n          {\r\n            label: 'Level three 2-1-1',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        label: 'Level two 2-2',\r\n        children: [\r\n          {\r\n            label: 'Level three 2-2-1',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Level one 3',\r\n    children: [\r\n      {\r\n        label: 'Level two 3-1',\r\n        children: [\r\n          {\r\n            label: 'Level three 3-1-1',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        label: 'Level two 3-2',\r\n        children: [\r\n          {\r\n            label: 'Level three 3-2-1',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":";;;uBACIA,mBAAA,CAIqB,cAJhBC,mBAAA,CAIU,mBAHPC,YAAA,CAE8FC,kBAAA;IAFpF,YAAU,EAAEC,IAAA,CAAAC,SAAS;IAAG,YAAU,EAAED,IAAA,CAAAE,SAAS;IAAGC,IAAI,EAAEH,IAAA,CAAAG,IAAI;IAAEC,SAAS,EAAT,EAAS;IAAC,oBAAkB,EAAlB,EAAkB;IAAC,UAAQ,EAAC,IAAI;IAC3GC,eAAe,EAAEL,IAAA,CAAAM,eAAe;IAAGC,eAAe,EAAEP,IAAA,CAAAQ,eAAe;IAAGC,eAAe,EAAET,IAAA,CAAAU,eAAe;IACtGC,cAAc,EAAEX,IAAA,CAAAY,cAAc;IAAGC,aAAa,EAAEb,IAAA,CAAAc,aAAa;IAAGC,UAAS,EAAEf,IAAA,CAAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}