{"ast":null,"code":"import { inject, onMounted, ref } from \"vue\";\nexport default {\n  setup() {\n    onMounted(() => {\n      LoadDefaultImage();\n      GetAllFriends();\n    });\n    const FriendList = ref(null);\n    const axios = inject(\"axios\");\n    const message = inject(\"$message\");\n    function GetAllFriends() {\n      axios.get(`api/chatapp/EmpSearch?emp=all&avatar=True`).then(res => {\n        FriendList.value = res.data.map(obj => {\n          return {\n            ...obj,\n            checked: false\n          };\n        });\n        TempList.value = FriendList.value;\n        TempList.value.sort((a, b) => a.EMP_NAME.toLowerCase().localeCompare(b.EMP_NAME.toLowerCase()));\n        // console.log(TempList.value.filter((it) => it.EMP_NAME == \"NinhLe\"));\n      }).catch(err => {\n        message({\n          type: \"error\",\n          message: err\n        });\n      });\n    }\n    const NoAvatar = ref(null);\n    function SortReult(val) {\n      if (val.value == \"a2z\") {\n        TempList.value.sort((a, b) => a.EMP_NAME.toLowerCase().localeCompare(b.EMP_NAME.toLowerCase()));\n      } else {\n        TempList.value.sort((a, b) => b.EMP_NAME.toLowerCase().localeCompare(a.EMP_NAME.toLowerCase()));\n      }\n    }\n    async function LoadDefaultImage() {\n      try {\n        const response = await axios.get(\"Images/noImg.png\", {\n          responseType: \"blob\"\n        });\n        const reader = new FileReader();\n        reader.readAsDataURL(response.data);\n        reader.onloadend = () => {\n          NoAvatar.value = reader.result;\n        };\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    const TempList = ref(null);\n    function EMP_filter(filter) {\n      if (!filter) {\n        TempList.value = FriendList.value;\n      } else {\n        if (search.value.value == \"EmpName\") {\n          TempList.value = FriendList.value.filter(item => item.EMP_NAME.toLowerCase().includes(filter.toLowerCase()));\n        } else {\n          TempList.value = FriendList.value.filter(item => item.EMP_NO.includes(filter));\n        }\n      }\n    }\n    const sort = ref({\n      label: \"A-Z\",\n      value: \"a2z\"\n    });\n    const Sorts = [{\n      label: \"A-Z\",\n      value: \"a2z\"\n    }, {\n      label: \"Z-A\",\n      value: \"z2a\"\n    }];\n    function FilterFriendList(val) {\n      EMP_filter(val);\n    }\n    const txtSearch = ref(null);\n    function SearchBySelect() {\n      FilterFriendList(txtSearch.value);\n    }\n    const search = ref({\n      label: \"Emp Name\",\n      value: \"EmpName\"\n    });\n    return {\n      txtSearch,\n      SearchBySelect,\n      FilterFriendList,\n      SortReult,\n      FriendList,\n      GetAllFriends,\n      EMP_filter,\n      TempList,\n      NoAvatar,\n      Sorts,\n      sort,\n      SearchOptions: [{\n        label: \"Emp Name\",\n        value: \"EmpName\"\n      }, {\n        label: \"Emp No\",\n        value: \"EmpNo\"\n      }],\n      search\n    };\n  }\n};","map":{"version":3,"names":["inject","onMounted","ref","setup","LoadDefaultImage","GetAllFriends","FriendList","axios","message","get","then","res","value","data","map","obj","checked","TempList","sort","a","b","EMP_NAME","toLowerCase","localeCompare","catch","err","type","NoAvatar","SortReult","val","response","responseType","reader","FileReader","readAsDataURL","onloadend","result","error","console","EMP_filter","filter","search","item","includes","EMP_NO","label","Sorts","FilterFriendList","txtSearch","SearchBySelect","SearchOptions"],"sources":["D:\\LearnVueJS\\Vue3\\Projects\\fa-sop-online\\src\\components\\QMessage\\FriendList.vue"],"sourcesContent":["<template>\r\n  <div style=\"position: relative; border: solid 1px red; border-radius: 10px;\">\r\n    <q-input\r\n      color=\"teal\"\r\n      borderless\r\n      dense\r\n      clearable\r\n      v-model=\"txtSearch\"\r\n      label=\"Search\"\r\n      style=\"width: 75%; display: inline-block;\"\r\n      debounce=\"500\"\r\n      @update:model-value=\"FilterFriendList\"\r\n    >\r\n      <template v-slot:prepend>\r\n        <q-icon name=\"search\" />\r\n      </template>\r\n    </q-input>\r\n    <div style=\"display: inline-block;\">\r\n      <q-icon name=\"filter_alt\" />\r\n      <q-icon name=\"sort\" />\r\n    </div>\r\n    <q-select\r\n      v-show=\"false\"\r\n      filled\r\n      dense\r\n      v-model=\"search\"\r\n      :options=\"SearchOptions\"\r\n      color=\"teal\"\r\n      options-selected-class=\"text-deep-orange\"\r\n      style=\"width: 100%\"\r\n      @update:model-value=\"SearchBySelect\"\r\n    >\r\n      <template v-slot:prepend>\r\n        <q-icon name=\"filter_alt\" />\r\n      </template>\r\n    </q-select>\r\n    <q-select\r\n      v-show=\"false\"\r\n      filled\r\n      dense\r\n      v-model=\"sort\"\r\n      :options=\"Sorts\"\r\n      color=\"teal\"\r\n      options-selected-class=\"text-deep-orange\"\r\n      style=\"width: 100%\"\r\n      @update:model-value=\"SortReult\"\r\n    >\r\n      <template v-slot:prepend>\r\n        <q-icon name=\"sort\" />\r\n      </template>\r\n    </q-select>\r\n  </div>\r\n  <div>\r\n    <q-list v-for=\"(emp, idx) in TempList\" :key=\"idx\">\r\n      <q-item\r\n        dense\r\n        clickable\r\n        v-ripple\r\n        :active=\"emp.checked\"\r\n        @click=\"emp.checked = !emp.checked\"\r\n      >\r\n        <q-item-section avatar>\r\n          <q-checkbox\r\n            dense\r\n            v-model=\"emp.checked\"\r\n            color=\"orange\"\r\n            checked-icon=\"radio_button_checked\"\r\n            indeterminate-icon=\"help\"\r\n            unchecked-icon=\"radio_button_unchecked\"\r\n          />\r\n        </q-item-section>\r\n        <q-item-section avatar>\r\n          <q-avatar size=\"30px\" style=\"padding: 0; margin-left: -20px\">\r\n            <img\r\n              :src=\"\r\n                emp.AVATAR ? `data:image/png;base64,${emp.AVATAR}` : NoAvatar\r\n              \"\r\n              alt=\"\"\r\n            />\r\n          </q-avatar>\r\n        </q-item-section>\r\n        <q-item-section>\r\n          <q-item-label> {{ emp.EMP_NAME }}</q-item-label>\r\n          <q-item-label caption> {{ emp.EMP_NO }}</q-item-label>\r\n        </q-item-section>\r\n      </q-item>\r\n    </q-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, ref } from \"vue\";\r\nexport default {\r\n  setup() {\r\n    onMounted(() => {\r\n      LoadDefaultImage();\r\n      GetAllFriends();\r\n    });\r\n    const FriendList = ref(null);\r\n    const axios = inject(\"axios\");\r\n    const message = inject(\"$message\");\r\n    function GetAllFriends() {\r\n      axios\r\n        .get(`api/chatapp/EmpSearch?emp=all&avatar=True`)\r\n        .then((res) => {\r\n          FriendList.value = res.data.map((obj) => {\r\n            return { ...obj, checked: false };\r\n          });\r\n          TempList.value = FriendList.value;\r\n          TempList.value.sort((a, b) =>\r\n            a.EMP_NAME.toLowerCase().localeCompare(b.EMP_NAME.toLowerCase())\r\n          );\r\n          // console.log(TempList.value.filter((it) => it.EMP_NAME == \"NinhLe\"));\r\n        })\r\n        .catch((err) => {\r\n          message({\r\n            type: \"error\",\r\n            message: err,\r\n          });\r\n        });\r\n    }\r\n\r\n    const NoAvatar = ref(null);\r\n\r\n    function SortReult(val) {\r\n      if (val.value == \"a2z\") {\r\n        TempList.value.sort((a, b) =>\r\n          a.EMP_NAME.toLowerCase().localeCompare(b.EMP_NAME.toLowerCase())\r\n        );\r\n      } else {\r\n        TempList.value.sort((a, b) =>\r\n          b.EMP_NAME.toLowerCase().localeCompare(a.EMP_NAME.toLowerCase())\r\n        );\r\n      }\r\n    }\r\n\r\n    async function LoadDefaultImage() {\r\n      try {\r\n        const response = await axios.get(\"Images/noImg.png\", {\r\n          responseType: \"blob\",\r\n        });\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(response.data);\r\n\r\n        reader.onloadend = () => {\r\n          NoAvatar.value = reader.result;\r\n        };\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    const TempList = ref(null);\r\n    function EMP_filter(filter) {\r\n      if (!filter) {\r\n        TempList.value = FriendList.value;\r\n      } else {\r\n        if (search.value.value == \"EmpName\") {\r\n          TempList.value = FriendList.value.filter((item) =>\r\n            item.EMP_NAME.toLowerCase().includes(filter.toLowerCase())\r\n          );\r\n        } else {\r\n          TempList.value = FriendList.value.filter((item) =>\r\n            item.EMP_NO.includes(filter)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    const sort = ref({\r\n      label: \"A-Z\",\r\n      value: \"a2z\",\r\n    });\r\n    const Sorts = [\r\n      {\r\n        label: \"A-Z\",\r\n        value: \"a2z\",\r\n      },\r\n      {\r\n        label: \"Z-A\",\r\n        value: \"z2a\",\r\n      },\r\n    ];\r\n    function FilterFriendList(val) {\r\n      EMP_filter(val);\r\n    }\r\n    const txtSearch = ref(null);\r\n    function SearchBySelect() {\r\n      FilterFriendList(txtSearch.value);\r\n    }\r\n    const search = ref({\r\n      label: \"Emp Name\",\r\n      value: \"EmpName\",\r\n    });\r\n    return {\r\n      txtSearch,\r\n      SearchBySelect,\r\n      FilterFriendList,\r\n      SortReult,\r\n      FriendList,\r\n      GetAllFriends,\r\n      EMP_filter,\r\n      TempList,\r\n      NoAvatar,\r\n      Sorts,\r\n      sort,\r\n      SearchOptions: [\r\n        {\r\n          label: \"Emp Name\",\r\n          value: \"EmpName\",\r\n        },\r\n        {\r\n          label: \"Emp No\",\r\n          value: \"EmpNo\",\r\n        },\r\n      ],\r\n      search,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}